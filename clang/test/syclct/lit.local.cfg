# -*- Python -*- vim: set ft=python ts=4 sw=4 expandtab tw=79:
import os
import re
import sys

# Get CUDA installation path from environment variable CUDA_PATH,
# if $CUDA_PATH not found, default is '/usr/local/cuda'
cuda_path = os.path.abspath(os.environ.get('CUDA_PATH', '/usr/local/cuda'))

# Get real location if CUDA path is a symbolic link
if os.path.islink(cuda_path):
    sys.stderr.write("CUDA PATH: " + cuda_path)
    cuda_path = os.path.abspath(os.readlink(cuda_path))
    sys.stderr.write(" => " + cuda_path + "\n")

cuda_found = False

# Check CUDA path is valid
if not os.path.exists(cuda_path):
    sys.stderr.write("No CUDA installation found in CUDA PATH: " + \
                     cuda_path + "\n")
    sys.stderr.write("Please set environment CUDA_PATH to correct path " \
                     "or make a symbolic link to \"/usr/local/cuda\"\n")
else:
    # Retrieve version from CUDA path
    version = re.search(r'.*cuda.*[\d.]+.*', os.path.basename(cuda_path))
    if not version:
        sys.stderr.write("No CUDA version found in CUDA PATH: " + \
                         cuda_path + "\n")
    else:
        cuda_found = True

if cuda_found:
    config.available_features.add(os.path.basename(cuda_path))

    # Replace string '%cuda-path' found under current directory with
    # cuda_path above
    config.substitutions.append(('%cuda-path', cuda_path))
else:
    config.unsupported = True
