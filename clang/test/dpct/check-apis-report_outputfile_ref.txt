// CHECK:Processing: {{(.+)/([^/]+)}}.cu
// CHECK:{{(.+)/([^/]+)}}:{{[0-9]+}}:{{[0-9]+}}: warning: DPCT1007:{{[0-9]+}}: Migration of this CUDA API is not supported by the Intel(R) DPC++ Compatibility Tool.
// CHECK:  cudaMalloc3D(&srcGPU, extent);
// CHECK:  ^
// CHECK:{{(.+)/([^/]+)}}:{{[0-9]+}}:{{[0-9]+}}: warning: DPCT1007:{{[0-9]+}}: Migration of this CUDA API is not supported by the Intel(R) DPC++ Compatibility Tool.
// CHECK:  struct cudaExtent extent = make_cudaExtent(size * sizeof(float), size, size);
// CHECK:                             ^
// CHECK:{{(.+)/([^/]+)}}:{{[0-9]+}}:{{[0-9]+}}: warning: DPCT1003:{{[0-9]+}}: Migrated api does not return error code. (*, 0) is inserted. You may need to rewrite this code.
// CHECK:  cudaError_t err = cudaDeviceSynchronize();
// CHECK:                    ^
// CHECK:{{(.+)/([^/]+)}}:{{[0-9]+}}:{{[0-9]+}}: warning: DPCT1003:{{[0-9]+}}: Migrated api does not return error code. (*, 0) is inserted. You may need to rewrite this code.
// CHECK:  checkError(cudaDeviceSynchronize());
// CHECK:             ^
// CHECK:{{(.+)/([^/]+)}}:{{[0-9]+}}:{{[0-9]+}}: warning: DPCT1003:{{[0-9]+}}: Migrated api does not return error code. (*, 0) is inserted. You may need to rewrite this code.
// CHECK:  return cudaDeviceSynchronize();
// CHECK:         ^
// CHECK:{{(.+)/([^/]+)}}:{{[0-9]+}}:{{[0-9]+}}: warning: DPCT1007:{{[0-9]+}}: Migration of this CUDA API is not supported by the Intel(R) DPC++ Compatibility Tool.
// CHECK:  make_cudaPitchedPtr((void*)d_volumeMem, SIZE_X*sizeof(VolumeType), SIZE_X, SIZE_Y);
// CHECK:  ^
// CHECK:{{(.+)/([^/]+)}}:{{[0-9]+}}:{{[0-9]+}}: warning: DPCT1007:{{[0-9]+}}: Migration of this CUDA API is not supported by the Intel(R) DPC++ Compatibility Tool.
// CHECK:  cudaExtent volumeSize = make_cudaExtent(SIZE_X, SIZE_Y, SIZE_Z);
// CHECK:                          ^
// CHECK:{{(.+)/([^/]+)}}:{{[0-9]+}}:{{[0-9]+}}: warning: DPCT1007:{{[0-9]+}}: Migration of this CUDA API is not supported by the Intel(R) DPC++ Compatibility Tool.
// CHECK:    cuMemGetInfo_v2(&free_mem, &total);
// CHECK:    ^
