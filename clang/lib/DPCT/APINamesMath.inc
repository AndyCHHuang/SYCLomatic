//===---APINamesMath.inc ---------------------------------------------===//
//
// Copyright (C) 2018 - 2019 Intel Corporation. All rights reserved.
//
// The information and source code contained herein is the exclusive
// property of Intel Corporation and may not be disclosed, examined
// or reproduced in whole or in part without explicit written authorization
// from the company.
//
//===-----------------------------------------------------------------===//
// Half Arithmetic Functions
ENTRY_RENAMED("__hfma", "cl::sycl::fma")

// Half2 Arithmetic Functions
ENTRY_RENAMED("__hfma2", "cl::sycl::fma")

// Half Comparison Functions
ENTRY_RENAMED("__hisinf", "cl::sycl::isinf")
ENTRY_RENAMED("__hisnan", "cl::sycl::isnan")

// Half Math Functions
ENTRY_RENAMED("hceil", "cl::sycl::ceil")
ENTRY_RENAMED("hcos", "cl::sycl::cos")
ENTRY_RENAMED("hexp", "cl::sycl::exp")
ENTRY_RENAMED("hexp10", "cl::sycl::exp10")
ENTRY_RENAMED("hexp2", "cl::sycl::exp2")
ENTRY_RENAMED("hfloor", "cl::sycl::floor")
ENTRY_RENAMED("hlog", "cl::sycl::log")
ENTRY_RENAMED("hlog10", "cl::sycl::log10")
ENTRY_RENAMED("hlog2", "cl::sycl::log2")
ENTRY_RENAMED("hrint", "cl::sycl::rint")
ENTRY_RENAMED("hrsqrt", "cl::sycl::rsqrt")
ENTRY_RENAMED("hsin", "cl::sycl::sin")
ENTRY_RENAMED("hsqrt", "cl::sycl::sqrt")
ENTRY_RENAMED("htrunc", "cl::sycl::trunc")

// Half2 Math Functions
ENTRY_RENAMED("h2ceil", "cl::sycl::ceil")
ENTRY_RENAMED("h2cos", "cl::sycl::cos")
ENTRY_RENAMED("h2exp", "cl::sycl::exp")
ENTRY_RENAMED("h2exp10", "cl::sycl::exp10")
ENTRY_RENAMED("h2exp2", "cl::sycl::exp2")
ENTRY_RENAMED("h2floor", "cl::sycl::floor")
ENTRY_RENAMED("h2log", "cl::sycl::log")
ENTRY_RENAMED("h2log10", "cl::sycl::log10")
ENTRY_RENAMED("h2log2", "cl::sycl::log2")
ENTRY_RENAMED("h2rint", "cl::sycl::rint")
ENTRY_RENAMED("h2rsqrt", "cl::sycl::rsqrt")
ENTRY_RENAMED("h2sin", "cl::sycl::sin")
ENTRY_RENAMED("h2sqrt", "cl::sycl::sqrt")
ENTRY_RENAMED("h2trunc", "cl::sycl::trunc")

// Single Precision Mathematical Functions
ENTRY_RENAMED_SINGLE("acosf", "cl::sycl::acos")
ENTRY_RENAMED_SINGLE("acoshf", "cl::sycl::acosh")
ENTRY_RENAMED_SINGLE("asinf", "cl::sycl::asin")
ENTRY_RENAMED_SINGLE("asinhf", "cl::sycl::asinh")
ENTRY_RENAMED_SINGLE("atan2f", "cl::sycl::atan2")
ENTRY_RENAMED_SINGLE("atanf", "cl::sycl::atan")
ENTRY_RENAMED_SINGLE("atanhf", "cl::sycl::atanh")
ENTRY_RENAMED_SINGLE("cbrtf", "cl::sycl::cbrt")
ENTRY_RENAMED_SINGLE("ceilf", "cl::sycl::ceil")
ENTRY_RENAMED_SINGLE("copysignf", "cl::sycl::copysign")
ENTRY_RENAMED_SINGLE("cosf", "cl::sycl::cos")
ENTRY_RENAMED_SINGLE("coshf", "cl::sycl::cosh")
ENTRY_RENAMED_SINGLE("cospif", "cl::sycl::cospi")
ENTRY_RENAMED_SINGLE("erfcf", "cl::sycl::erfc")
ENTRY_RENAMED_SINGLE("erff", "cl::sycl::erf")
ENTRY_RENAMED_SINGLE("exp10f", "cl::sycl::exp10")
ENTRY_RENAMED_SINGLE("exp2f", "cl::sycl::exp2")
ENTRY_RENAMED_SINGLE("expf", "cl::sycl::exp")
ENTRY_RENAMED_SINGLE("expm1f", "cl::sycl::expm1")
ENTRY_RENAMED_SINGLE("fabsf", "cl::sycl::fabs")
ENTRY_RENAMED_SINGLE("fdimf", "cl::sycl::fdim")
ENTRY_RENAMED_SINGLE("fdividef", "cl::sycl::native::divide")
ENTRY_RENAMED_SINGLE("floorf", "cl::sycl::floor")
ENTRY_RENAMED_SINGLE("fmaf", "cl::sycl::fma")
ENTRY_RENAMED_SINGLE("fmaxf", "cl::sycl::fmax")
ENTRY_RENAMED_SINGLE("fminf", "cl::sycl::fmin")
ENTRY_RENAMED_SINGLE("fmodf", "cl::sycl::fmod")
ENTRY_RENAMED_SINGLE("hypotf", "cl::sycl::hypot")
ENTRY_RENAMED_SINGLE("ilogbf", "cl::sycl::ilogb")
ENTRY_RENAMED_SINGLE("isfinite", "cl::sycl::isfinite")
ENTRY_RENAMED_SINGLE("isinf", "cl::sycl::isinf")
ENTRY_RENAMED_SINGLE("isnan", "cl::sycl::isnan")
ENTRY_RENAMED_SINGLE("ldexpf", "cl::sycl::ldexp")
ENTRY_RENAMED_SINGLE("lgammaf", "cl::sycl::lgamma")
ENTRY_RENAMED_SINGLE("llrintf", "cl::sycl::rint")
ENTRY_RENAMED_SINGLE("llroundf", "cl::sycl::round")
ENTRY_RENAMED_SINGLE("logf", "cl::sycl::log")
ENTRY_RENAMED_SINGLE("log10f", "cl::sycl::log10")
ENTRY_RENAMED_SINGLE("log1pf", "cl::sycl::log1p")
ENTRY_RENAMED_SINGLE("log2f", "cl::sycl::log2")
ENTRY_RENAMED_SINGLE("logbf", "cl::sycl::logb")
ENTRY_RENAMED_SINGLE("lrintf", "cl::sycl::rint")
ENTRY_RENAMED_SINGLE("lroundf", "cl::sycl::round")
ENTRY_RENAMED_SINGLE("nextafterf", "cl::sycl::nextafter")
ENTRY_RENAMED_SINGLE("powf", "cl::sycl::pow")
ENTRY_RENAMED_SINGLE("remainderf", "cl::sycl::remainder")
ENTRY_RENAMED_SINGLE("rintf", "cl::sycl::rint")
ENTRY_RENAMED_SINGLE("roundf", "cl::sycl::round")
ENTRY_RENAMED_SINGLE("rsqrtf", "cl::sycl::rsqrt")
ENTRY_RENAMED_SINGLE("signbit", "cl::sycl::signbit")
ENTRY_RENAMED_SINGLE("sinf", "cl::sycl::sin")
ENTRY_RENAMED_SINGLE("sinhf", "cl::sycl::sinh")
ENTRY_RENAMED_SINGLE("sinpif", "cl::sycl::sinpi")
ENTRY_RENAMED_SINGLE("sqrtf", "cl::sycl::sqrt")
ENTRY_RENAMED_SINGLE("tanf", "cl::sycl::tan")
ENTRY_RENAMED_SINGLE("tanhf", "cl::sycl::tanh")
ENTRY_RENAMED_SINGLE("tgammaf", "cl::sycl::tgamma")
ENTRY_RENAMED_SINGLE("truncf", "cl::sycl::trunc")

// Single precision intrinisics
ENTRY_RENAMED_SINGLE("__cosf", "cl::sycl::cos")
ENTRY_RENAMED_SINGLE("__exp10f", "cl::sycl::exp10")
ENTRY_RENAMED_SINGLE("__expf", "cl::sycl::exp")
ENTRY_RENAMED_SINGLE("__fdividef", "cl::sycl::native::divide")
ENTRY_RENAMED_SINGLE("__fmaf_rd", "cl::sycl::fma")
ENTRY_RENAMED_SINGLE("__fmaf_rn", "cl::sycl::fma")
ENTRY_RENAMED_SINGLE("__fmaf_ru", "cl::sycl::fma")
ENTRY_RENAMED_SINGLE("__fmaf_rz", "cl::sycl::fma")
ENTRY_RENAMED_SINGLE("__frcp_rd", "cl::sycl::native::recip")
ENTRY_RENAMED_SINGLE("__frcp_rn", "cl::sycl::native::recip")
ENTRY_RENAMED_SINGLE("__frcp_ru", "cl::sycl::native::recip")
ENTRY_RENAMED_SINGLE("__frcp_rz", "cl::sycl::native::recip")
ENTRY_RENAMED_SINGLE("__frsqrt_rn", "cl::sycl::rsqrt")
ENTRY_RENAMED_SINGLE("__fsqrt_rd", "cl::sycl::sqrt")
ENTRY_RENAMED_SINGLE("__fsqrt_rn", "cl::sycl::sqrt")
ENTRY_RENAMED_SINGLE("__fsqrt_ru", "cl::sycl::sqrt")
ENTRY_RENAMED_SINGLE("__fsqrt_rz", "cl::sycl::sqrt")
ENTRY_RENAMED_SINGLE("__log10f", "cl::sycl::log10")
ENTRY_RENAMED_SINGLE("__log2f", "cl::sycl::log2")
ENTRY_RENAMED_SINGLE("__logf", "cl::sycl::log")
ENTRY_RENAMED_SINGLE("__powf", "cl::sycl::pow")
ENTRY_RENAMED_SINGLE("__sinf", "cl::sycl::sin")
ENTRY_RENAMED_SINGLE("__tanf", "cl::sycl::tan")

// Double Precision Mathematical Functions
ENTRY_RENAMED_DOUBLE("acos", "cl::sycl::acos")
ENTRY_RENAMED_DOUBLE("acosh", "cl::sycl::acosh")
ENTRY_RENAMED_DOUBLE("asin", "cl::sycl::asin")
ENTRY_RENAMED_DOUBLE("asinh", "cl::sycl::asinh")
ENTRY_RENAMED_DOUBLE("atan2", "cl::sycl::atan2")
ENTRY_RENAMED_DOUBLE("atan", "cl::sycl::atan")
ENTRY_RENAMED_DOUBLE("atanh", "cl::sycl::atanh")
ENTRY_RENAMED_DOUBLE("cbrt", "cl::sycl::cbrt")
ENTRY_RENAMED_DOUBLE("ceil", "cl::sycl::ceil")
ENTRY_RENAMED_DOUBLE("copysign", "cl::sycl::copysign")
ENTRY_RENAMED_DOUBLE("cos", "cl::sycl::cos")
ENTRY_RENAMED_DOUBLE("cosh", "cl::sycl::cosh")
ENTRY_RENAMED_DOUBLE("cospi", "cl::sycl::cospi")
ENTRY_RENAMED_DOUBLE("erfc", "cl::sycl::erfc")
ENTRY_RENAMED_DOUBLE("erf", "cl::sycl::erf")
ENTRY_RENAMED_DOUBLE("exp10", "cl::sycl::exp10")
ENTRY_RENAMED_DOUBLE("exp2", "cl::sycl::exp2")
ENTRY_RENAMED_DOUBLE("exp", "cl::sycl::exp")
ENTRY_RENAMED_DOUBLE("expm1", "cl::sycl::expm1")
ENTRY_RENAMED_DOUBLE("fabs", "cl::sycl::fabs")
ENTRY_RENAMED_DOUBLE("fdim", "cl::sycl::fdim")
ENTRY_RENAMED_DOUBLE("floor", "cl::sycl::floor")
ENTRY_RENAMED_DOUBLE("fma", "cl::sycl::fma")
ENTRY_RENAMED_DOUBLE("fmax", "cl::sycl::fmax")
ENTRY_RENAMED_DOUBLE("fmin", "cl::sycl::fmin")
ENTRY_RENAMED_DOUBLE("fmod", "cl::sycl::fmod")
ENTRY_RENAMED_DOUBLE("hypot", "cl::sycl::hypot")
ENTRY_RENAMED_DOUBLE("ilogb", "cl::sycl::ilogb")
ENTRY_RENAMED_DOUBLE("ldexp", "cl::sycl::ldexp")
ENTRY_RENAMED_DOUBLE("lgamma", "cl::sycl::lgamma")
ENTRY_RENAMED_DOUBLE("llrint", "cl::sycl::rint")
ENTRY_RENAMED_DOUBLE("llround", "cl::sycl::round")
ENTRY_RENAMED_SINGLE("log", "cl::sycl::log")
ENTRY_RENAMED_DOUBLE("log10", "cl::sycl::log10")
ENTRY_RENAMED_DOUBLE("log1p", "cl::sycl::log1p")
ENTRY_RENAMED_DOUBLE("log2", "cl::sycl::log2")
ENTRY_RENAMED_DOUBLE("logb", "cl::sycl::logb")
ENTRY_RENAMED_DOUBLE("lrint", "cl::sycl::rint")
ENTRY_RENAMED_DOUBLE("lround", "cl::sycl::round")
ENTRY_RENAMED_DOUBLE("nextafter", "cl::sycl::nextafter")
ENTRY_RENAMED_DOUBLE("pow", "cl::sycl::pow")
ENTRY_RENAMED_DOUBLE("remainder", "cl::sycl::remainder")
ENTRY_RENAMED_DOUBLE("rint", "cl::sycl::rint")
ENTRY_RENAMED_DOUBLE("round", "cl::sycl::round")
ENTRY_RENAMED_DOUBLE("rsqrt", "cl::sycl::rsqrt")
ENTRY_RENAMED_DOUBLE("sin", "cl::sycl::sin")
ENTRY_RENAMED_DOUBLE("sinh", "cl::sycl::sinh")
ENTRY_RENAMED_DOUBLE("sinpi", "cl::sycl::sinpi")
ENTRY_RENAMED_DOUBLE("sqrt", "cl::sycl::sqrt")
ENTRY_RENAMED_DOUBLE("tan", "cl::sycl::tan")
ENTRY_RENAMED_DOUBLE("tanh", "cl::sycl::tanh")
ENTRY_RENAMED_DOUBLE("tgamma", "cl::sycl::tgamma")
ENTRY_RENAMED_DOUBLE("trunc", "cl::sycl::trunc")

// Double precision intrinisics
ENTRY_RENAMED_DOUBLE("__dsqrt_rd", "cl::sycl::sqrt")
ENTRY_RENAMED_DOUBLE("__dsqrt_rn", "cl::sycl::sqrt")
ENTRY_RENAMED_DOUBLE("__dsqrt_ru", "cl::sycl::sqrt")
ENTRY_RENAMED_DOUBLE("__dsqrt_rz", "cl::sycl::sqrt")
ENTRY_RENAMED_DOUBLE("__fma_rd", "cl::sycl::fma")
ENTRY_RENAMED_DOUBLE("__fma_rn", "cl::sycl::fma")
ENTRY_RENAMED_DOUBLE("__fma_ru", "cl::sycl::fma")
ENTRY_RENAMED_DOUBLE("__fma_rz", "cl::sycl::fma")

//  Half Precision Conversion And Data Movement
ENTRY_RENAMED("__half_as_short", "dpct::bit_cast<cl::sycl::half, short>")
ENTRY_RENAMED("__half_as_ushort", "dpct::bit_cast<cl::sycl::half, unsigned short>")
ENTRY_RENAMED("__short_as_half", "dpct::bit_cast<short, cl::sycl::half>")
ENTRY_RENAMED("__ushort_as_half", "dpct::bit_cast<unsigned short, cl::sycl::half>")

// Type Casting Intrinsics
ENTRY_RENAMED("__double_as_longlong", "dpct::bit_cast<double, long long>")
ENTRY_RENAMED("__float_as_int", "dpct::bit_cast<float, int>")
ENTRY_RENAMED("__float_as_uint", "dpct::bit_cast<float, unsigned int>")
ENTRY_RENAMED("__int_as_float", "dpct::bit_cast<int, float>")
ENTRY_RENAMED("__longlong_as_double", "dpct::bit_cast<long long, double>")
ENTRY_RENAMED("__uint_as_float", "dpct::bit_cast<unsigned int, float>")

// Device: int => cl::sycl::abs, (float, double) => cl::sycl::fabs
// Host:   int => abs, float => fabsf, double => fabs, long double => fabsl
ENTRY_RENAMED("abs", "cl::sycl::abs")

// Device: cl::sycl::max
// Host:   int => max, float => fmaxf, double => fmax, long double => fmaxl
ENTRY_RENAMED("max", "cl::sycl::max")

// Device: cl::sycl::min
// Host:   int => min, float => fminf, double => fmin, long double => fminl
ENTRY_RENAMED("min", "cl::sycl::min")

// Integer Intrinsics
ENTRY_RENAMED("__clz", "cl::sycl::clz")
ENTRY_RENAMED("__clzll", "cl::sycl::clz")
ENTRY_RENAMED("__hadd", "cl::sycl::hadd")
ENTRY_RENAMED("__mul24", "cl::sycl::mul24")
ENTRY_RENAMED("__mulhi", "cl::sycl::mul_hi")
ENTRY_RENAMED("__popc", "cl::sycl::popcount")
ENTRY_RENAMED("__popcll", "cl::sycl::popcount")

// Used to add header file "<cmath>" into the file that calls "fabs".
ENTRY_RENAMED("fabs", "fabs")


// Single Precision Mathematical Functions
ENTRY_EMULATED("frexpf", "cl::sycl::frexp")
ENTRY_EMULATED("modff", "cl::sycl::modf")
ENTRY_EMULATED("nanf", "cl::sycl::nan")
ENTRY_EMULATED("nearbyintf", "cl::sycl::floor")
ENTRY_EMULATED("remquof", "cl::sycl::remquo")
ENTRY_EMULATED("rhypotf", "cl::sycl::hypot")
ENTRY_EMULATED("sincosf", "cl::sycl::sincos")
ENTRY_EMULATED("sincospif", "cl::sycl::sincos")
ENTRY_EMULATED("__sincosf", "cl::sycl::sincos")

// Double Precision Mathematical Functions
ENTRY_EMULATED("frexp", "cl::sycl::frexp")
ENTRY_EMULATED("modf", "cl::sycl::modf")
ENTRY_EMULATED("nan", "cl::sycl::nan")
ENTRY_EMULATED("nearbyint", "cl::sycl::floor")
ENTRY_EMULATED("remquo", "cl::sycl::remquo")
ENTRY_EMULATED("rhypot", "cl::sycl::hypot")
ENTRY_EMULATED("sincos", "cl::sycl::sincos")
ENTRY_EMULATED("sincospi", "cl::sycl::sincos")


// Half/Half2 Arithmetic Functions
ENTRY_OPERATOR("__h2div", BinaryOperatorKind::BO_Div)
ENTRY_OPERATOR("__hdiv", BinaryOperatorKind::BO_Div)

ENTRY_OPERATOR("__hmul", BinaryOperatorKind::BO_Mul)
ENTRY_OPERATOR("__hmul2", BinaryOperatorKind::BO_Mul)


ENTRY_OPERATOR("__hsub", BinaryOperatorKind::BO_Sub)
ENTRY_OPERATOR("__hsub2", BinaryOperatorKind::BO_Sub)

ENTRY_OPERATOR("__hneg", BinaryOperatorKind::BO_Sub)
ENTRY_OPERATOR("__hneg2", BinaryOperatorKind::BO_Sub)

// Half Comparison Functions
ENTRY_OPERATOR("__heq", BinaryOperatorKind::BO_EQ)
ENTRY_OPERATOR("__hne", BinaryOperatorKind::BO_NE)
ENTRY_OPERATOR("__hge", BinaryOperatorKind::BO_GE)
ENTRY_OPERATOR("__hgt", BinaryOperatorKind::BO_GT)
ENTRY_OPERATOR("__hle", BinaryOperatorKind::BO_LE)
ENTRY_OPERATOR("__hlt", BinaryOperatorKind::BO_LT)

// Single Precision Mathematical Functions
ENTRY_OPERATOR("__fadd_rd", BinaryOperatorKind::BO_Add)
ENTRY_OPERATOR("__fadd_rn", BinaryOperatorKind::BO_Add)
ENTRY_OPERATOR("__fadd_ru", BinaryOperatorKind::BO_Add)
ENTRY_OPERATOR("__fadd_rz", BinaryOperatorKind::BO_Add)
ENTRY_OPERATOR("__fsub_rd", BinaryOperatorKind::BO_Sub)
ENTRY_OPERATOR("__fsub_rn", BinaryOperatorKind::BO_Sub)
ENTRY_OPERATOR("__fsub_ru", BinaryOperatorKind::BO_Sub)
ENTRY_OPERATOR("__fsub_rz", BinaryOperatorKind::BO_Sub)
ENTRY_OPERATOR("__fmul_rd", BinaryOperatorKind::BO_Mul)
ENTRY_OPERATOR("__fmul_rn", BinaryOperatorKind::BO_Mul)
ENTRY_OPERATOR("__fmul_ru", BinaryOperatorKind::BO_Mul)
ENTRY_OPERATOR("__fmul_rz", BinaryOperatorKind::BO_Mul)
ENTRY_OPERATOR("__fdiv_rd", BinaryOperatorKind::BO_Div)
ENTRY_OPERATOR("__fdiv_rn", BinaryOperatorKind::BO_Div)
ENTRY_OPERATOR("__fdiv_ru", BinaryOperatorKind::BO_Div)
ENTRY_OPERATOR("__fdiv_rz", BinaryOperatorKind::BO_Div)

// Double precision intrinisics
ENTRY_OPERATOR("__dadd_rd", BinaryOperatorKind::BO_Add)
ENTRY_OPERATOR("__dadd_rn", BinaryOperatorKind::BO_Add)
ENTRY_OPERATOR("__dadd_ru", BinaryOperatorKind::BO_Add)
ENTRY_OPERATOR("__dadd_rz", BinaryOperatorKind::BO_Add)
ENTRY_OPERATOR("__dsub_rd", BinaryOperatorKind::BO_Sub)
ENTRY_OPERATOR("__dsub_rn", BinaryOperatorKind::BO_Sub)
ENTRY_OPERATOR("__dsub_ru", BinaryOperatorKind::BO_Sub)
ENTRY_OPERATOR("__dsub_rz", BinaryOperatorKind::BO_Sub)
ENTRY_OPERATOR("__dmul_rd", BinaryOperatorKind::BO_Mul)
ENTRY_OPERATOR("__dmul_rn", BinaryOperatorKind::BO_Mul)
ENTRY_OPERATOR("__dmul_ru", BinaryOperatorKind::BO_Mul)
ENTRY_OPERATOR("__dmul_rz", BinaryOperatorKind::BO_Mul)
ENTRY_OPERATOR("__ddiv_rd", BinaryOperatorKind::BO_Div)
ENTRY_OPERATOR("__ddiv_rn", BinaryOperatorKind::BO_Div)
ENTRY_OPERATOR("__ddiv_ru", BinaryOperatorKind::BO_Div)
ENTRY_OPERATOR("__ddiv_rz", BinaryOperatorKind::BO_Div)


//  Half Precision Conversion And Data Movement
ENTRY_TYPECAST("__float22half2_rn")
ENTRY_TYPECAST("__float2half")
ENTRY_TYPECAST("__float2half2_rn")
ENTRY_TYPECAST("__float2half_rd")
ENTRY_TYPECAST("__float2half_rn")
ENTRY_TYPECAST("__float2half_ru")
ENTRY_TYPECAST("__float2half_rz")
ENTRY_TYPECAST("__floats2half2_rn")
ENTRY_TYPECAST("__half22float2")
ENTRY_TYPECAST("__half2float")
ENTRY_TYPECAST("__half2half2")
ENTRY_TYPECAST("__half2int_rd")
ENTRY_TYPECAST("__half2int_rn")
ENTRY_TYPECAST("__half2int_ru")
ENTRY_TYPECAST("__half2int_rz")
ENTRY_TYPECAST("__half2ll_rd")
ENTRY_TYPECAST("__half2ll_rn")
ENTRY_TYPECAST("__half2ll_ru")
ENTRY_TYPECAST("__half2ll_rz")
ENTRY_TYPECAST("__half2short_rd")
ENTRY_TYPECAST("__half2short_rn")
ENTRY_TYPECAST("__half2short_ru")
ENTRY_TYPECAST("__half2short_rz")
ENTRY_TYPECAST("__half2uint_rd")
ENTRY_TYPECAST("__half2uint_rn")
ENTRY_TYPECAST("__half2uint_ru")
ENTRY_TYPECAST("__half2uint_rz")
ENTRY_TYPECAST("__half2ull_rd")
ENTRY_TYPECAST("__half2ull_rn")
ENTRY_TYPECAST("__half2ull_ru")
ENTRY_TYPECAST("__half2ull_rz")
ENTRY_TYPECAST("__half2ushort_rd")
ENTRY_TYPECAST("__half2ushort_rn")
ENTRY_TYPECAST("__half2ushort_ru")
ENTRY_TYPECAST("__half2ushort_rz")
ENTRY_TYPECAST("__halves2half2")
ENTRY_TYPECAST("__high2float")
ENTRY_TYPECAST("__high2half")
ENTRY_TYPECAST("__high2half2")
ENTRY_TYPECAST("__highs2half2")
ENTRY_TYPECAST("__int2half_rd")
ENTRY_TYPECAST("__int2half_rn")
ENTRY_TYPECAST("__int2half_ru")
ENTRY_TYPECAST("__int2half_rz")
ENTRY_TYPECAST("__ll2half_rd")
ENTRY_TYPECAST("__ll2half_rn")
ENTRY_TYPECAST("__ll2half_ru")
ENTRY_TYPECAST("__ll2half_rz")
ENTRY_TYPECAST("__low2float")
ENTRY_TYPECAST("__low2half")
ENTRY_TYPECAST("__low2half2")
ENTRY_TYPECAST("__lowhigh2highlow")
ENTRY_TYPECAST("__lows2half2")
ENTRY_TYPECAST("__short2half_rd")
ENTRY_TYPECAST("__short2half_rn")
ENTRY_TYPECAST("__short2half_ru")
ENTRY_TYPECAST("__short2half_rz")
ENTRY_TYPECAST("__uint2half_rd")
ENTRY_TYPECAST("__uint2half_rn")
ENTRY_TYPECAST("__uint2half_ru")
ENTRY_TYPECAST("__uint2half_rz")
ENTRY_TYPECAST("__ull2half_rd")
ENTRY_TYPECAST("__ull2half_rn")
ENTRY_TYPECAST("__ull2half_ru")
ENTRY_TYPECAST("__ull2half_rz")
ENTRY_TYPECAST("__ushort2half_rd")
ENTRY_TYPECAST("__ushort2half_rn")
ENTRY_TYPECAST("__ushort2half_ru")
ENTRY_TYPECAST("__ushort2half_rz")

// Type Casting Intrinsics
ENTRY_TYPECAST("__double2float_rd")
ENTRY_TYPECAST("__double2float_rn")
ENTRY_TYPECAST("__double2float_ru")
ENTRY_TYPECAST("__double2float_rz")
ENTRY_TYPECAST("__double2int_rd")
ENTRY_TYPECAST("__double2int_rn")
ENTRY_TYPECAST("__double2int_ru")
ENTRY_TYPECAST("__double2int_rz")
ENTRY_TYPECAST("__double2ll_rd")
ENTRY_TYPECAST("__double2ll_rn")
ENTRY_TYPECAST("__double2ll_ru")
ENTRY_TYPECAST("__double2ll_rz")
ENTRY_TYPECAST("__double2uint_rd")
ENTRY_TYPECAST("__double2uint_rn")
ENTRY_TYPECAST("__double2uint_ru")
ENTRY_TYPECAST("__double2uint_rz")
ENTRY_TYPECAST("__double2ull_rd")
ENTRY_TYPECAST("__double2ull_rn")
ENTRY_TYPECAST("__double2ull_ru")
ENTRY_TYPECAST("__double2ull_rz")
ENTRY_TYPECAST("__float2int_rd")
ENTRY_TYPECAST("__float2int_rn")
ENTRY_TYPECAST("__float2int_ru")
ENTRY_TYPECAST("__float2int_rz")
ENTRY_TYPECAST("__float2ll_rd")
ENTRY_TYPECAST("__float2ll_rn")
ENTRY_TYPECAST("__float2ll_ru")
ENTRY_TYPECAST("__float2ll_rz")
ENTRY_TYPECAST("__float2uint_rd")
ENTRY_TYPECAST("__float2uint_rn")
ENTRY_TYPECAST("__float2uint_ru")
ENTRY_TYPECAST("__float2uint_rz")
ENTRY_TYPECAST("__float2ull_rd")
ENTRY_TYPECAST("__float2ull_rn")
ENTRY_TYPECAST("__float2ull_ru")
ENTRY_TYPECAST("__float2ull_rz")
ENTRY_TYPECAST("__int2double_rn")
ENTRY_TYPECAST("__int2float_rd")
ENTRY_TYPECAST("__int2float_rn")
ENTRY_TYPECAST("__int2float_ru")
ENTRY_TYPECAST("__int2float_rz")
ENTRY_TYPECAST("__ll2double_rd")
ENTRY_TYPECAST("__ll2double_rn")
ENTRY_TYPECAST("__ll2double_ru")
ENTRY_TYPECAST("__ll2double_rz")
ENTRY_TYPECAST("__ll2float_rd")
ENTRY_TYPECAST("__ll2float_rn")
ENTRY_TYPECAST("__ll2float_ru")
ENTRY_TYPECAST("__ll2float_rz")
ENTRY_TYPECAST("__uint2double_rn")
ENTRY_TYPECAST("__uint2float_rd")
ENTRY_TYPECAST("__uint2float_rn")
ENTRY_TYPECAST("__uint2float_ru")
ENTRY_TYPECAST("__uint2float_rz")
ENTRY_TYPECAST("__ull2double_rd")
ENTRY_TYPECAST("__ull2double_rn")
ENTRY_TYPECAST("__ull2double_ru")
ENTRY_TYPECAST("__ull2double_rz")
ENTRY_TYPECAST("__ull2float_rd")
ENTRY_TYPECAST("__ull2float_rn")
ENTRY_TYPECAST("__ull2float_ru")
ENTRY_TYPECAST("__ull2float_rz")


// Half Arithmetic Functions
ENTRY_UNSUPPORTED("__hadd_sat")
ENTRY_UNSUPPORTED("__hfma_sat")
ENTRY_UNSUPPORTED("__hmul_sat")
ENTRY_UNSUPPORTED("__hsub_sat")

// Half2 Arithmetic Functions
ENTRY_UNSUPPORTED("__hadd2_sat")
ENTRY_UNSUPPORTED("__hfma2_sat")
ENTRY_UNSUPPORTED("__hmul2_sat")
ENTRY_UNSUPPORTED("__hsub2_sat")

// Half Comparison Functions
ENTRY_UNSUPPORTED("__hequ")
ENTRY_UNSUPPORTED("__hgeu")
ENTRY_UNSUPPORTED("__hgtu")
ENTRY_UNSUPPORTED("__hleu")
ENTRY_UNSUPPORTED("__hltu")
ENTRY_UNSUPPORTED("__hneu")

// Half2 Comparison Functions
ENTRY_UNSUPPORTED("__hbeq2")
ENTRY_UNSUPPORTED("__hbequ2")
ENTRY_UNSUPPORTED("__hbge2")
ENTRY_UNSUPPORTED("__hbgeu2")
ENTRY_UNSUPPORTED("__hbgt2")
ENTRY_UNSUPPORTED("__hbgtu2")
ENTRY_UNSUPPORTED("__hble2")
ENTRY_UNSUPPORTED("__hbleu2")
ENTRY_UNSUPPORTED("__hblt2")
ENTRY_UNSUPPORTED("__hbltu2")
ENTRY_UNSUPPORTED("__hbne2")
ENTRY_UNSUPPORTED("__hbneu2")
ENTRY_UNSUPPORTED("__heq2")
ENTRY_UNSUPPORTED("__hequ2")
ENTRY_UNSUPPORTED("__hge2")
ENTRY_UNSUPPORTED("__hgeu2")
ENTRY_UNSUPPORTED("__hgt2")
ENTRY_UNSUPPORTED("__hgtu2")
ENTRY_UNSUPPORTED("__hisnan2")
ENTRY_UNSUPPORTED("__hle2")
ENTRY_UNSUPPORTED("__hleu2")
ENTRY_UNSUPPORTED("__hlt2")
ENTRY_UNSUPPORTED("__hltu2")
ENTRY_UNSUPPORTED("__hne2")
ENTRY_UNSUPPORTED("__hneu2")

// Half Math Functions
ENTRY_UNSUPPORTED("hrcp")

// Half2 Math Functions
ENTRY_UNSUPPORTED("h2rcp")

// Single Precision Mathematical Functions
ENTRY_UNSUPPORTED("cyl_bessel_i0f")
ENTRY_UNSUPPORTED("cyl_bessel_i1f")
ENTRY_UNSUPPORTED("erfcinvf")
ENTRY_UNSUPPORTED("erfcxf")
ENTRY_UNSUPPORTED("erfinvf")
ENTRY_UNSUPPORTED("j0f")
ENTRY_UNSUPPORTED("j1f")
ENTRY_UNSUPPORTED("jnf")
ENTRY_UNSUPPORTED("norm3df")
ENTRY_UNSUPPORTED("norm4df")
ENTRY_UNSUPPORTED("normcdff")
ENTRY_UNSUPPORTED("normcdfinvf")
ENTRY_UNSUPPORTED("normf")
ENTRY_UNSUPPORTED("rcbrtf")
ENTRY_UNSUPPORTED("rnorm3df")
ENTRY_UNSUPPORTED("rnorm4df")
ENTRY_UNSUPPORTED("rnormf")
ENTRY_UNSUPPORTED("scalblnf")
ENTRY_UNSUPPORTED("scalbnf")
ENTRY_UNSUPPORTED("y0f")
ENTRY_UNSUPPORTED("y1f")
ENTRY_UNSUPPORTED("ynf")

// Double Precision Mathematical Functions
ENTRY_UNSUPPORTED("cyl_bessel_i0")
ENTRY_UNSUPPORTED("cyl_bessel_i1")
ENTRY_UNSUPPORTED("erfcinv")
ENTRY_UNSUPPORTED("erfcx")
ENTRY_UNSUPPORTED("erfinv")
ENTRY_UNSUPPORTED("j0")
ENTRY_UNSUPPORTED("j1")
ENTRY_UNSUPPORTED("jn")
ENTRY_UNSUPPORTED("norm")
ENTRY_UNSUPPORTED("norm3d")
ENTRY_UNSUPPORTED("norm4d")
ENTRY_UNSUPPORTED("normcdf")
ENTRY_UNSUPPORTED("normcdfinv")
ENTRY_UNSUPPORTED("rcbrt")
ENTRY_UNSUPPORTED("rnorm3d")
ENTRY_UNSUPPORTED("rnorm4d")
ENTRY_UNSUPPORTED("rnorm")
ENTRY_UNSUPPORTED("scalbln")
ENTRY_UNSUPPORTED("scalbn")
ENTRY_UNSUPPORTED("y0")
ENTRY_UNSUPPORTED("y1")
ENTRY_UNSUPPORTED("yn")

// Single precision intrinisics
ENTRY_UNSUPPORTED("__saturatef")

// Double precision intrinisics
ENTRY_UNSUPPORTED("__drcp_rd")
ENTRY_UNSUPPORTED("__drcp_rn")
ENTRY_UNSUPPORTED("__drcp_ru")
ENTRY_UNSUPPORTED("__drcp_rz")

// Type Casting Intrinsics
ENTRY_UNSUPPORTED("__double2hiint") // TODO
ENTRY_UNSUPPORTED("__double2loint") // TODO
ENTRY_UNSUPPORTED("__hiloint2double") // TODO

// Integer Intrinsics
ENTRY_UNSUPPORTED("__brev")
ENTRY_UNSUPPORTED("__brevll")
ENTRY_UNSUPPORTED("__byte_perm")
ENTRY_UNSUPPORTED("__ffs")
ENTRY_UNSUPPORTED("__ffsll")
ENTRY_UNSUPPORTED("__funnelshift_l")
ENTRY_UNSUPPORTED("__funnelshift_lc")
ENTRY_UNSUPPORTED("__funnelshift_r")
ENTRY_UNSUPPORTED("__funnelshift_rc")
ENTRY_UNSUPPORTED("__mul64hi")
ENTRY_UNSUPPORTED("__rhadd")
ENTRY_UNSUPPORTED("__sad")
ENTRY_UNSUPPORTED("__uhadd")
ENTRY_UNSUPPORTED("__umul24")
ENTRY_UNSUPPORTED("__umul64hi")
ENTRY_UNSUPPORTED("__umulhi")
ENTRY_UNSUPPORTED("__urhadd")
ENTRY_UNSUPPORTED("__usad")
