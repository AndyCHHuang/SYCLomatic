//===--- MapNames.cpp -----------------------------------*- C++ -*---===//
//
// Copyright (C) 2018 - 2020 Intel Corporation. All rights reserved.
//
// The information and source code contained herein is the exclusive
// property of Intel Corporation and may not be disclosed, examined
// or reproduced in whole or in part without explicit written authorization
// from the company.
//
//===-----------------------------------------------------------------===//

#include "MapNames.h"
#include "ASTTraversal.h"
#include "CallExprRewriter.h"
#include "SaveNewFiles.h"

#include <map>

using namespace clang;
using namespace clang::dpct;

std::string MapNames::ClNamespace = "sycl";

std::string MapNames::getClNamespace() { return MapNames::ClNamespace; }

MapNames::MapTy MapNames::TypeNamesMap{};
MapNames::MapTy EnumConstantRule::EnumNamesMap{};
MapNames::ThrustMapTy MapNames::ThrustFuncNamesMap{};

void MapNames::setClNamespace(bool Enable) {
  MapNames::ClNamespace = Enable ? "cl::sycl" : "sycl";
  // Type names mapping.
  TypeNamesMap = {
      {"cudaDeviceProp", "dpct::device_info"},
      {"cudaError_t", "int"},
      {"cudaError", "int"},
      {"CUresult", "int"},
      {"cufftResult_t", "int"},
      {"CUcontext", "void*"},
      {"dim3", ClNamespace + "::range<3>"},
      {"int2", ClNamespace + "::int2"},
      {"struct int2", ClNamespace + "::int2"},
      {"double2", ClNamespace + "::double2"},
      {"struct double2", ClNamespace + "::double2"},
      {"__half", ClNamespace + "::half"},
      {"__half2", ClNamespace + "::half2"},
      {"half", ClNamespace + "::half"},
      {"half2", ClNamespace + "::half2"},
      {"cudaEvent_t", ClNamespace + "::event"},
      {"CUevent_st", ClNamespace + "::event"},
      {"cudaStream_t", ClNamespace + "::queue *"},
      {"CUstream_st", ClNamespace + "::queue"},
      {"char1", "char"},
      {"char2", ClNamespace + "::char2"},
      {"char3", ClNamespace + "::char3"},
      {"char4", ClNamespace + "::char4"},
      {"double1", "double"},
      {"double2", ClNamespace + "::double2"},
      {"double3", ClNamespace + "::double3"},
      {"double4", ClNamespace + "::double4"},
      {"float1", "float"},
      {"float2", ClNamespace + "::float2"},
      {"float3", ClNamespace + "::float3"},
      {"float4", ClNamespace + "::float4"},
      {"int1", "int"},
      {"int2", ClNamespace + "::int2"},
      {"int3", ClNamespace + "::int3"},
      {"int4", ClNamespace + "::int4"},
      {"long1", "long"},
      {"long2", ClNamespace + "::long2"},
      {"long3", ClNamespace + "::long3"},
      {"long4", ClNamespace + "::long4"},
      {"longlong1", "long long"},
      {"longlong2", ClNamespace + "::longlong2"},
      {"longlong3", ClNamespace + "::longlong3"},
      {"longlong4", ClNamespace + "::longlong4"},
      {"short1", "short"},
      {"short2", ClNamespace + "::short2"},
      {"short3", ClNamespace + "::short3"},
      {"short4", ClNamespace + "::short4"},
      {"uchar1", "unsigned char"},
      {"uchar2", ClNamespace + "::uchar2"},
      {"uchar3", ClNamespace + "::uchar3"},
      {"uchar4", ClNamespace + "::uchar4"},
      {"uint1", "unsigned int"},
      {"uint2", ClNamespace + "::uint2"},
      {"uint3", ClNamespace + "::uint3"},
      {"uint4", ClNamespace + "::uint4"},
      {"ulong1", "unsigned long"},
      {"ulong2", ClNamespace + "::ulong2"},
      {"ulong3", ClNamespace + "::ulong3"},
      {"ulong4", ClNamespace + "::ulong4"},
      {"ulonglong1", "unsigned long long"},
      {"ulonglong2", ClNamespace + "::ulonglong2"},
      {"ulonglong3", ClNamespace + "::ulonglong3"},
      {"ulonglong4", ClNamespace + "::ulonglong4"},
      {"ushort1", "unsigned short"},
      {"ushort2", ClNamespace + "::ushort2"},
      {"ushort3", ClNamespace + "::ushort3"},
      {"ushort4", ClNamespace + "::ushort4"},
      {"cublasHandle_t", ClNamespace + "::queue*"},
      {"cublasStatus_t", "int"},
      {"cublasStatus", "int"},
      {"cublasGemmAlgo_t", "int"},
      {"cudaDataType_t", "int"},
      {"cudaDataType", "int"},
      {"cublasDataType_t", "int"},
      {"cuComplex", ClNamespace + "::float2"},
      {"cuDoubleComplex", ClNamespace + "::double2"},
      {"cublasFillMode_t", "oneapi::mkl::uplo"},
      {"cublasDiagType_t", "oneapi::mkl::diag"},
      {"cublasSideMode_t", "oneapi::mkl::side"},
      {"cublasOperation_t", "oneapi::mkl::transpose"},
      {"cublasPointerMode_t", "int"},
      {"cusparsePointerMode_t", "int"},
      {"cusparseFillMode_t", "oneapi::mkl::uplo"},
      {"cusparseDiagType_t", "oneapi::mkl::diag"},
      {"cusparseIndexBase_t", "oneapi::mkl::index_base"},
      {"cusparseMatrixType_t", "int"},
      {"cusparseOperation_t", "oneapi::mkl::transpose"},
      {"cusparseSolveAnalysisInfo_t", "int"},
      {"thrust::device_ptr", "dpct::device_ptr"},
      {"thrust::device_vector", "dpct::device_vector"},
      {"thrust::device_malloc_allocator", "dpct::device_malloc_allocator"},
      {"thrust::maximum", "oneapi::dpl::maximum"},
      {"thrust::multiplies", "std::multiplies"},
      {"thrust::plus", "std::plus"},
      {"thrust::seq", "oneapi::dpl::execution::seq"},
      {"thrust::minus", "std::minus"},
      {"thrust::negate", "std::negate"},
      {"thrust::identity", "oneapi::dpl::identity"},
      {"thrust::logical_or", "std::logical_or"},
      {"thrust::divides", "std::divides"},
      {"thrust::tuple", "std::tuple"},
      {"thrust::host_vector", "std::vector"},
      {"thrust::complex", "std::complex"},
      {"thrust::counting_iterator", "oneapi::dpl::counting_iterator"},
      {"thrust::permutation_iterator", "oneapi::dpl::permutation_iterator"},
      {"thrust::transform_iterator", "oneapi::dpl::transform_iterator"},
      {"thrust::iterator_difference", "std::iterator_traits"},
      {"cusolverDnHandle_t", ClNamespace + "::queue*"},
      {"cusolverEigType_t", "int64_t"},
      {"cusolverEigMode_t", "oneapi::mkl::job"},
      {"cusolverStatus_t", "int"},
      {"cudaChannelFormatDesc", "dpct::image_channel"},
      {"cudaArray", "dpct::image_matrix"},
      {"cudaArray_t", "dpct::image_matrix_p"},
      {"cudaTextureDesc", "dpct::sampling_info"},
      {"cudaResourceDesc", "dpct::image_data"},
      {"cudaTextureObject_t", "dpct::image_wrapper_base_p"},
      {"curandStatus_t", "int"},
      {"curandStatus", "int"},
      {"cusparseStatus_t", "int"},
      {"cusparseMatDescr_t", "oneapi::mkl::index_base"},
      {"cusparseHandle_t", ClNamespace + "::queue*"},
      {"cudaMemoryAdvise", "pi_mem_advice"},
      {"cudaPos", ClNamespace + "::id<3>"},
      {"cudaExtent", ClNamespace + "::range<3>"},
      {"cudaPitchedPtr", "dpct::pitched_data"},
      {"cudaMemcpyKind", "dpct::memcpy_direction"},
      {"cudaComputeMode", "int"},
      {"cudaSharedMemConfig", "int"},
      // ...

  };

  // Enum constants name mapping.
  EnumConstantRule::EnumNamesMap = {
    // ...
    // enum Device Attribute
    // ...
    {"cudaDevAttrHostNativeAtomicSupported", "is_native_atomic_supported"},
    {"cudaDevAttrComputeCapabilityMajor", "get_major_version"},
    {"cudaDevAttrComputeCapabilityMinor", "get_minor_version"},
    {"cudaDevAttrMultiProcessorCount", "get_max_compute_units"},
    {"cudaDevAttrClockRate", "get_max_clock_frequency"},
    {"cudaDevAttrIntegrated", "get_integrated"},
    // enum Memcpy Kind
    {"cudaMemcpyHostToHost", "host_to_host"},
    {"cudaMemcpyHostToDevice", "host_to_device"},
    {"cudaMemcpyDeviceToHost", "device_to_host"},
    {"cudaMemcpyDeviceToDevice", "device_to_device"},
    {"cudaMemcpyDefault", "automatic"},
    // enum Texture Address Mode
    {"cudaAddressModeWrap", ClNamespace + "::addressing_mode::repeat"},
    {"cudaAddressModeClamp", ClNamespace + "::addressing_mode::clamp_to_edge"},
    {"cudaAddressModeMirror", ClNamespace + "::addressing_mode::mirrored_repeat"},
    {"cudaAddressModeBorder", ClNamespace + "::addressing_mode::clamp"},
    // enum Texture Filter Mode
    {"cudaFilterModePoint", ClNamespace + "::filtering_mode::nearest"},
    {"cudaFilterModeLinear", ClNamespace + "::filtering_mode::linear"},
    // enum Channel Format Kind
    {"cudaChannelFormatKindSigned", "dpct::image_channel_data_type::signed_int"},
    {"cudaChannelFormatKindUnsigned", "dpct::image_channel_data_type::unsigned_int"},
    {"cudaChannelFormatKindFloat", "dpct::image_channel_data_type::fp"},
    // enum Resource Type
    {"cudaResourceTypeArray", "dpct::image_data_type::matrix"},
    {"cudaResourceTypeLinear", "dpct::image_data_type::linear"},
    {"cudaResourceTypePitch2D", "dpct::image_data_type::pitch"},
    // ...
  };

  // Thrust function name mapping
  ThrustFuncNamesMap = {
#define ENTRY(from, to, policy) { from, {to, policy} },
#define ENTRY_HOST(from, to, policy) ENTRY(from, to, policy)
#define ENTRY_DEVICE(from, to, policy) ENTRY(from, to, policy)
#define ENTRY_BOTH(from, to, policy) ENTRY(from, to, policy)
#include "APINamesMapThrust.inc"
#undef ENTRY
#undef ENTRY_HOST
#undef ENTRY_DEVICE
#undef ENTRY_BOTH
  };
}

// Supported vector types
const MapNames::SetTy MapNames::SupportedVectorTypes{ SUPPORTEDVECTORTYPENAMES };

const std::map<std::string, int> MapNames::VectorTypeMigratedTypeSizeMap{
  {"char1", 1},      {"char2", 2},       {"char3", 4},       {"char4", 4},
  {"uchar1", 1},     {"uchar2", 2},      {"uchar3", 4},      {"uchar4", 4},
  {"short1", 2},     {"short2", 4},      {"short3", 8},      {"short4", 8},
  {"ushort1", 2},    {"ushort2", 4},     {"ushort3", 8},     {"ushort4", 8},
  {"int1", 4},       {"int2", 8},        {"int3", 16},       {"int4", 16},
  {"uint1", 4},      {"uint2", 8},       {"uint3", 16},      {"uint4", 16},
  {"long1", 8},      {"long2", 16},      {"long3", 32},      {"long4", 32},
  {"ulong1", 8},     {"ulong2", 16},     {"ulong3", 32},     {"ulong4", 32},
  {"longlong1", 8},  {"longlong2", 16},  {"longlong3", 32},  {"longlong4", 32},
  {"ulonglong1", 8}, {"ulonglong2", 16}, {"ulonglong3", 32}, {"ulonglong4", 32},
  {"float1", 4},     {"float2", 8},      {"float3", 16},     {"float4", 16},
  {"double1", 8},    {"double2", 16},    {"double3", 32},    {"double4", 32}};

const std::map<clang::dpct::KernelArgType, int> MapNames::KernelArgTypeSizeMap{
    {clang::dpct::KernelArgType::Stream, 208},
    {clang::dpct::KernelArgType::Texture,
     48 /*32(image accessor) + 16(sampler)*/},
    {clang::dpct::KernelArgType::Accessor1D, 32},
    {clang::dpct::KernelArgType::Accessor2D, 56},
    {clang::dpct::KernelArgType::Accessor3D, 80},
    {clang::dpct::KernelArgType::Array1D, 8},
    {clang::dpct::KernelArgType::Array2D, 24},
    {clang::dpct::KernelArgType::Array3D, 32},
    {clang::dpct::KernelArgType::Default, 8},
    {clang::dpct::KernelArgType::MaxParameterSize, 1024}};

int MapNames::getArrayTypeSize(const int Dim) {
  if (DpctGlobalInfo::getUsmLevel() == UsmLevel::none) {
    if (Dim == 2) {
      return KernelArgTypeSizeMap.at(clang::dpct::KernelArgType::Accessor2D);
    } else if (Dim == 3) {
      return KernelArgTypeSizeMap.at(clang::dpct::KernelArgType::Accessor3D);
    } else {
      return KernelArgTypeSizeMap.at(clang::dpct::KernelArgType::Accessor1D);
    }
  } else {
    if (Dim == 2) {
      return KernelArgTypeSizeMap.at(clang::dpct::KernelArgType::Array2D);
    } else if (Dim == 3) {
      return KernelArgTypeSizeMap.at(clang::dpct::KernelArgType::Array3D);
    } else {
      return KernelArgTypeSizeMap.at(clang::dpct::KernelArgType::Array1D);
    }
  }
}

const MapNames::MapTy MapNames::RemovedAPIWarningMessage{
#define ENTRY(APINAME, MSG) {#APINAME, MSG},
#include "APINames_removed.inc"
#undef ENTRY
};

const MapNames::MapTy MapNames::ITFName{
#define ENTRY(INTERFACENAME, APINAME, VALUE, FLAG, TARGET, COMMENT)            \
  {#APINAME, #INTERFACENAME},
#include "APINames.inc"
#include "APINames_cuBLAS.inc"
#include "APINames_cuFFT.inc"
#include "APINames_cuGRAPH.inc"
#include "APINames_cuSPARSE.inc"
#include "APINames_cuRAND.inc"
#include "APINames_cuSOLVER.inc"
#include "APINames_nvJPEG.inc"
#include "APINames_thrust.inc"
#undef ENTRY
};

// BLAS enums mapping
const MapNames::MapTy MapNames::BLASEnumsMap{
    {"CUBLAS_OP_N", "oneapi::mkl::transpose::nontrans"},
    {"CUBLAS_OP_T", "oneapi::mkl::transpose::trans"},
    {"CUBLAS_OP_C", "oneapi::mkl::transpose::conjtrans"},
    {"CUBLAS_SIDE_LEFT", "oneapi::mkl::side::left"},
    {"CUBLAS_SIDE_RIGHT", "oneapi::mkl::side::right"},
    {"CUBLAS_FILL_MODE_LOWER", "oneapi::mkl::uplo::lower"},
    {"CUBLAS_FILL_MODE_UPPER", "oneapi::mkl::uplo::upper"},
    {"CUBLAS_DIAG_NON_UNIT", "oneapi::mkl::diag::nonunit"},
    {"CUBLAS_DIAG_UNIT", "oneapi::mkl::diag::unit"},
};

// spBLAS enums mapping
const MapNames::MapTy MapNames::SPBLASEnumsMap{
    {"CUSPARSE_OPERATION_NON_TRANSPOSE", "oneapi::mkl::transpose::nontrans"},
    {"CUSPARSE_OPERATION_TRANSPOSE", "oneapi::mkl::transpose::trans"},
    {"CUSPARSE_OPERATION_CONJUGATE_TRANSPOSE", "oneapi::mkl::transpose::conjtrans"},
    {"CUSPARSE_FILL_MODE_LOWER", "oneapi::mkl::uplo::lower"},
    {"CUSPARSE_FILL_MODE_UPPER", "oneapi::mkl::uplo::upper"},
    {"CUSPARSE_DIAG_TYPE_NON_UNIT", "oneapi::mkl::diag::nonunit"},
    {"CUSPARSE_DIAG_TYPE_UNIT", "oneapi::mkl::diag::unit"},
    {"CUSPARSE_INDEX_BASE_ZERO", "oneapi::mkl::index_base::zero"},
    {"CUSPARSE_INDEX_BASE_ONE", "oneapi::mkl::index_base::one"},
};

// SOLVER enums mapping
const MapNames::MapTy MapNames::SOLVEREnumsMap{
    {"CUSOLVER_EIG_TYPE_1", "1"},
    {"CUSOLVER_EIG_TYPE_2", "2"},
    {"CUSOLVER_EIG_TYPE_3", "3"},
    {"CUSOLVER_EIG_MODE_NOVECTOR", "oneapi::mkl::job::novec"},
    {"CUSOLVER_EIG_MODE_VECTOR", "oneapi::mkl::job::vec"},
};

// BLAS functions names and parameters replacements information mapping
const std::map<std::string, MapNames::BLASFuncReplInfo>
    MapNames::BLASFuncReplInfoMap{
        /*BLAS level 1*/
        {"cublasIsamax_v2",
         {std::vector<int>{2, 4}, std::vector<int>{},
          std::vector<std::string>{"float", "int"}, std::vector<int>{}, -1, -1,
          -1, "oneapi::mkl::blas::iamax"}},
        {"cublasIdamax_v2",
         {std::vector<int>{2, 4}, std::vector<int>{},
          std::vector<std::string>{"double", "int"}, std::vector<int>{}, -1, -1,
          -1, "oneapi::mkl::blas::iamax"}},
        {"cublasIsamin_v2",
         {std::vector<int>{2, 4}, std::vector<int>{},
          std::vector<std::string>{"float", "int"}, std::vector<int>{}, -1, -1,
          -1, "oneapi::mkl::blas::iamin"}},
        {"cublasIdamin_v2",
         {std::vector<int>{2, 4}, std::vector<int>{},
          std::vector<std::string>{"double", "int"}, std::vector<int>{}, -1, -1,
          -1, "oneapi::mkl::blas::iamin"}},
        {"cublasSasum_v2",
         {std::vector<int>{2, 4}, std::vector<int>{},
          std::vector<std::string>{"float", "float"}, std::vector<int>{}, -1,
          -1, -1, "oneapi::mkl::blas::asum"}},
        {"cublasDasum_v2",
         {std::vector<int>{2, 4}, std::vector<int>{},
          std::vector<std::string>{"double", "double"}, std::vector<int>{}, -1,
          -1, -1, "oneapi::mkl::blas::asum"}},
        {"cublasSaxpy_v2",
         {std::vector<int>{3, 5}, std::vector<int>{2},
          std::vector<std::string>{"float", "float"}, std::vector<int>{}, -1,
          -1, -1, "oneapi::mkl::blas::axpy"}},
        {"cublasDaxpy_v2",
         {std::vector<int>{3, 5}, std::vector<int>{2},
          std::vector<std::string>{"double", "double"}, std::vector<int>{}, -1,
          -1, -1, "oneapi::mkl::blas::axpy"}},
        {"cublasScopy_v2",
         {std::vector<int>{2, 4}, std::vector<int>{},
          std::vector<std::string>{"float", "float"}, std::vector<int>{}, -1,
          -1, -1, "oneapi::mkl::blas::copy"}},
        {"cublasDcopy_v2",
         {std::vector<int>{2, 4}, std::vector<int>{},
          std::vector<std::string>{"double", "double"}, std::vector<int>{}, -1,
          -1, -1, "oneapi::mkl::blas::copy"}},
        {"cublasSdot_v2",
         {std::vector<int>{2, 4, 6}, std::vector<int>{},
          std::vector<std::string>{"float", "float", "float"},
          std::vector<int>{}, -1, -1, -1, "oneapi::mkl::blas::dot"}},
        {"cublasDdot_v2",
         {std::vector<int>{2, 4, 6}, std::vector<int>{},
          std::vector<std::string>{"double", "double", "double"},
          std::vector<int>{}, -1, -1, -1, "oneapi::mkl::blas::dot"}},
        {"cublasSnrm2_v2",
         {std::vector<int>{2, 4}, std::vector<int>{},
          std::vector<std::string>{"float", "float"}, std::vector<int>{}, -1,
          -1, -1, "oneapi::mkl::blas::nrm2"}},
        {"cublasDnrm2_v2",
         {std::vector<int>{2, 4}, std::vector<int>{},
          std::vector<std::string>{"double", "double"}, std::vector<int>{}, -1,
          -1, -1, "oneapi::mkl::blas::nrm2"}},
        {"cublasSrot_v2",
         {std::vector<int>{2, 4}, std::vector<int>{6, 7},
          std::vector<std::string>{"float", "float"}, std::vector<int>{}, -1,
          -1, -1, "oneapi::mkl::blas::rot"}},
        {"cublasDrot_v2",
         {std::vector<int>{2, 4}, std::vector<int>{6, 7},
          std::vector<std::string>{"double", "double"}, std::vector<int>{}, -1,
          -1, -1, "oneapi::mkl::blas::rot"}},
        {"cublasSrotg_v2",
         {std::vector<int>{1, 2, 3, 4}, std::vector<int>{},
          std::vector<std::string>{"float", "float", "float", "float"},
          std::vector<int>{}, -1, -1, -1, "oneapi::mkl::blas::rotg"}},
        {"cublasDrotg_v2",
         {std::vector<int>{1, 2, 3, 4}, std::vector<int>{},
          std::vector<std::string>{"double", "double", "double", "double"},
          std::vector<int>{}, -1, -1, -1, "oneapi::mkl::blas::rotg"}},
        {"cublasSrotm_v2",
         {std::vector<int>{2, 4, 6}, std::vector<int>{},
          std::vector<std::string>{"float", "float", "float"},
          std::vector<int>{}, -1, -1, -1, "oneapi::mkl::blas::rotm"}},
        {"cublasDrotm_v2",
         {std::vector<int>{2, 4, 6}, std::vector<int>{},
          std::vector<std::string>{"double", "double", "double"},
          std::vector<int>{}, -1, -1, -1, "oneapi::mkl::blas::rotm"}},
        {"cublasSrotmg_v2",
         {std::vector<int>{1, 2, 3, 5}, std::vector<int>{4},
          std::vector<std::string>{"float", "float", "float", "float"},
          std::vector<int>{}, -1, -1, -1, "oneapi::mkl::blas::rotmg"}},
        {"cublasDrotmg_v2",
         {std::vector<int>{1, 2, 3, 5}, std::vector<int>{4},
          std::vector<std::string>{"double", "double", "double", "double"},
          std::vector<int>{}, -1, -1, -1, "oneapi::mkl::blas::rotmg"}},
        {"cublasSscal_v2",
         {std::vector<int>{3}, std::vector<int>{2},
          std::vector<std::string>{"float"}, std::vector<int>{}, -1, -1, -1,
          "oneapi::mkl::blas::scal"}},
        {"cublasDscal_v2",
         {std::vector<int>{3}, std::vector<int>{2},
          std::vector<std::string>{"double"}, std::vector<int>{}, -1, -1, -1,
          "oneapi::mkl::blas::scal"}},
        {"cublasSswap_v2",
         {std::vector<int>{2, 4}, std::vector<int>{},
          std::vector<std::string>{"float", "float"}, std::vector<int>{}, -1,
          -1, -1, "oneapi::mkl::blas::swap"}},
        {"cublasDswap_v2",
         {std::vector<int>{2, 4}, std::vector<int>{},
          std::vector<std::string>{"double", "double"}, std::vector<int>{}, -1,
          -1, -1, "oneapi::mkl::blas::swap"}},
        /*BLAS level 2*/
        {"cublasSgbmv_v2",
         {std::vector<int>{7, 9, 12}, std::vector<int>{6, 11},
          std::vector<std::string>{"float", "float", "float"},
          std::vector<int>{1}, -1, -1, -1, "oneapi::mkl::blas::gbmv"}},
        {"cublasDgbmv_v2",
         {std::vector<int>{7, 9, 12}, std::vector<int>{6, 11},
          std::vector<std::string>{"double", "double", "double"},
          std::vector<int>{1}, -1, -1, -1, "oneapi::mkl::blas::gbmv"}},
        {"cublasSgemv_v2",
         {std::vector<int>{5, 7, 10}, std::vector<int>{4, 9},
          std::vector<std::string>{"float", "float", "float"},
          std::vector<int>{1}, -1, -1, -1, "oneapi::mkl::blas::gemv"}},
        {"cublasDgemv_v2",
         {std::vector<int>{5, 7, 10}, std::vector<int>{4, 9},
          std::vector<std::string>{"double", "double", "double"},
          std::vector<int>{1}, -1, -1, -1, "oneapi::mkl::blas::gemv"}},
        {"cublasSger_v2",
         {std::vector<int>{4, 6, 8}, std::vector<int>{3},
          std::vector<std::string>{"float", "float", "float"},
          std::vector<int>{}, -1, -1, -1, "oneapi::mkl::blas::ger"}},
        {"cublasDger_v2",
         {std::vector<int>{4, 6, 8}, std::vector<int>{3},
          std::vector<std::string>{"double", "double", "double"},
          std::vector<int>{}, -1, -1, -1, "oneapi::mkl::blas::ger"}},
        {"cublasSsbmv_v2",
         {std::vector<int>{5, 7, 10}, std::vector<int>{4, 9},
          std::vector<std::string>{"float", "float", "float"},
          std::vector<int>{}, 1, -1, -1, "oneapi::mkl::blas::sbmv"}},
        {"cublasDsbmv_v2",
         {std::vector<int>{5, 7, 10}, std::vector<int>{4, 9},
          std::vector<std::string>{"double", "double", "double"},
          std::vector<int>{}, 1, -1, -1, "oneapi::mkl::blas::sbmv"}},
        {"cublasSspmv_v2",
         {std::vector<int>{4, 5, 8}, std::vector<int>{3, 7},
          std::vector<std::string>{"float", "float", "float"},
          std::vector<int>{}, 1, -1, -1, "oneapi::mkl::blas::spmv"}},
        {"cublasDspmv_v2",
         {std::vector<int>{4, 5, 8}, std::vector<int>{3, 7},
          std::vector<std::string>{"double", "double", "double"},
          std::vector<int>{}, 1, -1, -1, "oneapi::mkl::blas::spmv"}},
        {"cublasSspr_v2",
         {std::vector<int>{4, 6}, std::vector<int>{3},
          std::vector<std::string>{"float", "float"}, std::vector<int>{}, 1, -1,
          -1, "oneapi::mkl::blas::spr"}},
        {"cublasDspr_v2",
         {std::vector<int>{4, 6}, std::vector<int>{3},
          std::vector<std::string>{"double", "double"}, std::vector<int>{}, 1,
          -1, -1, "oneapi::mkl::blas::spr"}},
        {"cublasSspr2_v2",
         {std::vector<int>{4, 6, 8}, std::vector<int>{3},
          std::vector<std::string>{"float", "float", "float"},
          std::vector<int>{}, 1, -1, -1, "oneapi::mkl::blas::spr2"}},
        {"cublasDspr2_v2",
         {std::vector<int>{4, 6, 8}, std::vector<int>{3},
          std::vector<std::string>{"double", "double", "double"},
          std::vector<int>{}, 1, -1, -1, "oneapi::mkl::blas::spr2"}},
        {"cublasSsymv_v2",
         {std::vector<int>{4, 6, 9}, std::vector<int>{3, 8},
          std::vector<std::string>{"float", "float", "float"},
          std::vector<int>{}, 1, -1, -1, "oneapi::mkl::blas::symv"}},
        {"cublasDsymv_v2",
         {std::vector<int>{4, 6, 9}, std::vector<int>{3, 8},
          std::vector<std::string>{"double", "double", "double"},
          std::vector<int>{}, 1, -1, -1, "oneapi::mkl::blas::symv"}},
        {"cublasSsyr_v2",
         {std::vector<int>{4, 6}, std::vector<int>{3},
          std::vector<std::string>{"float", "float"}, std::vector<int>{}, 1, -1,
          -1, "oneapi::mkl::blas::syr"}},
        {"cublasDsyr_v2",
         {std::vector<int>{4, 6}, std::vector<int>{3},
          std::vector<std::string>{"double", "double"}, std::vector<int>{}, 1,
          -1, -1, "oneapi::mkl::blas::syr"}},
        {"cublasSsyr2_v2",
         {std::vector<int>{4, 6, 8}, std::vector<int>{3},
          std::vector<std::string>{"float", "float", "float"},
          std::vector<int>{}, 1, -1, -1, "oneapi::mkl::blas::syr2"}},
        {"cublasDsyr2_v2",
         {std::vector<int>{4, 6, 8}, std::vector<int>{3},
          std::vector<std::string>{"double", "double", "double"},
          std::vector<int>{}, 1, -1, -1, "oneapi::mkl::blas::syr2"}},
        {"cublasStbmv_v2",
         {std::vector<int>{6, 8}, std::vector<int>{},
          std::vector<std::string>{"float", "float"}, std::vector<int>{2}, 1,
          -1, 3, "oneapi::mkl::blas::tbmv"}},
        {"cublasDtbmv_v2",
         {std::vector<int>{6, 8}, std::vector<int>{},
          std::vector<std::string>{"double", "double"}, std::vector<int>{2}, 1,
          -1, 3, "oneapi::mkl::blas::tbmv"}},
        {"cublasStbsv_v2",
         {std::vector<int>{6, 8}, std::vector<int>{},
          std::vector<std::string>{"float", "float"}, std::vector<int>{2}, 1,
          -1, 3, "oneapi::mkl::blas::tbsv"}},
        {"cublasDtbsv_v2",
         {std::vector<int>{6, 8}, std::vector<int>{},
          std::vector<std::string>{"double", "double"}, std::vector<int>{2}, 1,
          -1, 3, "oneapi::mkl::blas::tbsv"}},
        {"cublasStpmv_v2",
         {std::vector<int>{5, 6}, std::vector<int>{},
          std::vector<std::string>{"float", "float"}, std::vector<int>{2}, 1,
          -1, 3, "oneapi::mkl::blas::tpmv"}},
        {"cublasDtpmv_v2",
         {std::vector<int>{5, 6}, std::vector<int>{},
          std::vector<std::string>{"double", "double"}, std::vector<int>{2}, 1,
          -1, 3, "oneapi::mkl::blas::tpmv"}},
        {"cublasStpsv_v2",
         {std::vector<int>{5, 6}, std::vector<int>{},
          std::vector<std::string>{"float", "float"}, std::vector<int>{2}, 1,
          -1, 3, "oneapi::mkl::blas::tpsv"}},
        {"cublasDtpsv_v2",
         {std::vector<int>{5, 6}, std::vector<int>{},
          std::vector<std::string>{"double", "double"}, std::vector<int>{2}, 1,
          -1, 3, "oneapi::mkl::blas::tpsv"}},
        {"cublasStrmv_v2",
         {std::vector<int>{5, 7}, std::vector<int>{},
          std::vector<std::string>{"float", "float"}, std::vector<int>{2}, 1,
          -1, 3, "oneapi::mkl::blas::trmv"}},
        {"cublasDtrmv_v2",
         {std::vector<int>{5, 7}, std::vector<int>{},
          std::vector<std::string>{"double", "double"}, std::vector<int>{2}, 1,
          -1, 3, "oneapi::mkl::blas::trmv"}},
        {"cublasStrsv_v2",
         {std::vector<int>{5, 7}, std::vector<int>{},
          std::vector<std::string>{"float", "float"}, std::vector<int>{2}, 1,
          -1, 3, "oneapi::mkl::blas::trsv"}},
        {"cublasDtrsv_v2",
         {std::vector<int>{5, 7}, std::vector<int>{},
          std::vector<std::string>{"double", "double"}, std::vector<int>{2}, 1,
          -1, 3, "oneapi::mkl::blas::trsv"}},
        /*BLAS level 3*/
        {"cublasHgemm",
         {std::vector<int>{7, 9, 12}, std::vector<int>{6, 11},
          std::vector<std::string>{MapNames::getClNamespace() + "::half",
                                   MapNames::getClNamespace() + "::half",
                                   MapNames::getClNamespace() + "::half"},
          std::vector<int>{1, 2}, -1, -1, -1, "oneapi::mkl::blas::gemm"}},
        {"cublasSgemm_v2",
         {std::vector<int>{7, 9, 12}, std::vector<int>{6, 11},
          std::vector<std::string>{"float", "float", "float"},
          std::vector<int>{1, 2}, -1, -1, -1, "oneapi::mkl::blas::gemm"}},
        {"cublasDgemm_v2",
         {std::vector<int>{7, 9, 12}, std::vector<int>{6, 11},
          std::vector<std::string>{"double", "double", "double"},
          std::vector<int>{1, 2}, -1, -1, -1, "oneapi::mkl::blas::gemm"}},
        {"cublasHgemmStridedBatched",
         {std::vector<int>{7, 10, 14}, std::vector<int>{6, 13},
          std::vector<std::string>{MapNames::getClNamespace() + "::half",
                                   MapNames::getClNamespace() + "::half",
                                   MapNames::getClNamespace() + "::half"},
          std::vector<int>{1, 2}, -1, -1, -1, "oneapi::mkl::blas::gemm_batch"}},
        {"cublasSgemmStridedBatched",
         {std::vector<int>{7, 10, 14}, std::vector<int>{6, 13},
          std::vector<std::string>{"float", "float", "float"},
          std::vector<int>{1, 2}, -1, -1, -1, "oneapi::mkl::blas::gemm_batch"}},
        {"cublasDgemmStridedBatched",
         {std::vector<int>{7, 10, 14}, std::vector<int>{6, 13},
          std::vector<std::string>{"double", "double", "double"},
          std::vector<int>{1, 2}, -1, -1, -1, "oneapi::mkl::blas::gemm_batch"}},
        {"cublasSsymm_v2",
         {std::vector<int>{6, 8, 11}, std::vector<int>{5, 10},
          std::vector<std::string>{"float", "float", "float"},
          std::vector<int>{}, 2, 1, -1, "oneapi::mkl::blas::symm"}},
        {"cublasDsymm_v2",
         {std::vector<int>{6, 8, 11}, std::vector<int>{5, 10},
          std::vector<std::string>{"double", "double", "double"},
          std::vector<int>{}, 2, 1, -1, "oneapi::mkl::blas::symm"}},
        {"cublasSsyrk_v2",
         {std::vector<int>{6, 9}, std::vector<int>{5, 8},
          std::vector<std::string>{"float", "float"}, std::vector<int>{2}, 1,
          -1, -1, "oneapi::mkl::blas::syrk"}},
        {"cublasDsyrk_v2",
         {std::vector<int>{6, 9}, std::vector<int>{5, 8},
          std::vector<std::string>{"double", "double"}, std::vector<int>{2}, 1,
          -1, -1, "oneapi::mkl::blas::syrk"}},
        {"cublasSsyr2k_v2",
         {std::vector<int>{6, 8, 11}, std::vector<int>{5, 10},
          std::vector<std::string>{"float", "float", "float"},
          std::vector<int>{2}, 1, -1, -1, "oneapi::mkl::blas::syr2k"}},
        {"cublasDsyr2k_v2",
         {std::vector<int>{6, 8, 11}, std::vector<int>{5, 10},
          std::vector<std::string>{"double", "double", "double"},
          std::vector<int>{2}, 1, -1, -1, "oneapi::mkl::blas::syr2k"}},
        {"cublasStrsm_v2",
         {std::vector<int>{8, 10}, std::vector<int>{7},
          std::vector<std::string>{"float", "float"}, std::vector<int>{3}, 2, 1,
          4, "oneapi::mkl::blas::trsm"}},
        {"cublasDtrsm_v2",
         {std::vector<int>{8, 10}, std::vector<int>{7},
          std::vector<std::string>{"double", "double"}, std::vector<int>{3}, 2,
          1, 4, "oneapi::mkl::blas::trsm"}},
        {"cublasSsyrkx",
         {std::vector<int>{6, 8, 11}, std::vector<int>{5, 10},
          std::vector<std::string>{"float", "float", "float"},
          std::vector<int>{2}, 1, -1, -1, "oneapi::mkl::blas::gemmt"}},
        {"cublasDsyrkx",
         {std::vector<int>{6, 8, 11}, std::vector<int>{5, 10},
          std::vector<std::string>{"double", "double", "double"},
          std::vector<int>{2}, 1, -1, -1, "oneapi::mkl::blas::gemmt"}},
        // Needn't declare bufferB ,but need copy the data ptrB points to
        // where ptrC points.
        {"cublasStrmm_v2",
         {std::vector<int>{8, 12}, std::vector<int>{7},
          std::vector<std::string>{"float", "float"}, std::vector<int>{3}, 2, 1,
          4, "oneapi::mkl::blas::trmm"}},
        {"cublasDtrmm_v2",
         {std::vector<int>{8, 12}, std::vector<int>{7},
          std::vector<std::string>{"double", "double"}, std::vector<int>{3}, 2,
          1, 4, "oneapi::mkl::blas::trmm"}},
        // ...
    };

const std::map<std::string, MapNames::BLASFuncReplInfo>
    MapNames::BLASFuncWrapperReplInfoMap{
        /*Extensions*/
        {"cublasSgetrfBatched",
         {std::vector<int>{}, std::vector<int>{}, std::vector<std::string>{},
          std::vector<int>{}, -1, -1, -1, "dpct::getrf_batch_wrapper"}},
        {"cublasDgetrfBatched",
         {std::vector<int>{}, std::vector<int>{}, std::vector<std::string>{},
          std::vector<int>{}, -1, -1, -1, "dpct::getrf_batch_wrapper"}},
        {"cublasCgetrfBatched",
         {std::vector<int>{}, std::vector<int>{}, std::vector<std::string>{},
          std::vector<int>{}, -1, -1, -1, "dpct::getrf_batch_wrapper"}},
        {"cublasZgetrfBatched",
         {std::vector<int>{}, std::vector<int>{}, std::vector<std::string>{},
          std::vector<int>{}, -1, -1, -1, "dpct::getrf_batch_wrapper"}},
        {"cublasSgetrsBatched",
         {std::vector<int>{}, std::vector<int>{}, std::vector<std::string>{},
          std::vector<int>{1}, -1, -1, -1, "dpct::getrs_batch_wrapper"}},
        {"cublasDgetrsBatched",
         {std::vector<int>{}, std::vector<int>{}, std::vector<std::string>{},
          std::vector<int>{1}, -1, -1, -1, "dpct::getrs_batch_wrapper"}},
        {"cublasCgetrsBatched",
         {std::vector<int>{}, std::vector<int>{}, std::vector<std::string>{},
          std::vector<int>{1}, -1, -1, -1, "dpct::getrs_batch_wrapper"}},
        {"cublasZgetrsBatched",
         {std::vector<int>{}, std::vector<int>{}, std::vector<std::string>{},
          std::vector<int>{1}, -1, -1, -1, "dpct::getrs_batch_wrapper"}},
        {"cublasSgetriBatched",
         {std::vector<int>{}, std::vector<int>{}, std::vector<std::string>{},
          std::vector<int>{}, -1, -1, -1, "dpct::getri_batch_wrapper"}},
        {"cublasDgetriBatched",
         {std::vector<int>{}, std::vector<int>{}, std::vector<std::string>{},
          std::vector<int>{}, -1, -1, -1, "dpct::getri_batch_wrapper"}},
        {"cublasCgetriBatched",
         {std::vector<int>{}, std::vector<int>{}, std::vector<std::string>{},
          std::vector<int>{}, -1, -1, -1, "dpct::getri_batch_wrapper"}},
        {"cublasZgetriBatched",
         {std::vector<int>{}, std::vector<int>{}, std::vector<std::string>{},
          std::vector<int>{}, -1, -1, -1, "dpct::getri_batch_wrapper"}},
        {"cublasSgeqrfBatched",
         {std::vector<int>{}, std::vector<int>{}, std::vector<std::string>{},
          std::vector<int>{}, -1, -1, -1, "dpct::geqrf_batch_wrapper"}},
        {"cublasDgeqrfBatched",
         {std::vector<int>{}, std::vector<int>{}, std::vector<std::string>{},
          std::vector<int>{}, -1, -1, -1, "dpct::geqrf_batch_wrapper"}},
        {"cublasCgeqrfBatched",
         {std::vector<int>{}, std::vector<int>{}, std::vector<std::string>{},
          std::vector<int>{}, -1, -1, -1, "dpct::geqrf_batch_wrapper"}},
        {"cublasZgeqrfBatched",
         {std::vector<int>{}, std::vector<int>{}, std::vector<std::string>{},
          std::vector<int>{}, -1, -1, -1, "dpct::geqrf_batch_wrapper"}}
    };

const std::map<std::string, MapNames::BLASFuncComplexReplInfo>
    MapNames::BLASFuncComplexReplInfoMap{
        /*BLAS level 1*/
        {"cublasIcamax_v2",
         {std::vector<int>{2, 4}, std::vector<int>{},
          std::vector<std::string>{"std::complex<float>", "int"},
          std::vector<std::string>{}, std::vector<int>{}, -1, -1, -1,
          "oneapi::mkl::blas::iamax"}},
        {"cublasIzamax_v2",
         {std::vector<int>{2, 4}, std::vector<int>{},
          std::vector<std::string>{"std::complex<double>", "int"},
          std::vector<std::string>{}, std::vector<int>{}, -1, -1, -1,
          "oneapi::mkl::blas::iamax"}},
        {"cublasIcamin_v2",
         {std::vector<int>{2, 4}, std::vector<int>{},
          std::vector<std::string>{"std::complex<float>", "int"},
          std::vector<std::string>{}, std::vector<int>{}, -1, -1, -1,
          "oneapi::mkl::blas::iamin"}},
        {"cublasIzamin_v2",
         {std::vector<int>{2, 4}, std::vector<int>{},
          std::vector<std::string>{"std::complex<double>", "int"},
          std::vector<std::string>{}, std::vector<int>{}, -1, -1, -1,
          "oneapi::mkl::blas::iamin"}},
        {"cublasScasum_v2",
         {std::vector<int>{2, 4}, std::vector<int>{},
          std::vector<std::string>{"std::complex<float>", "float"},
          std::vector<std::string>{}, std::vector<int>{}, -1, -1, -1,
          "oneapi::mkl::blas::asum"}},
        {"cublasDzasum_v2",
         {std::vector<int>{2, 4}, std::vector<int>{},
          std::vector<std::string>{"std::complex<double>", "double"},
          std::vector<std::string>{}, std::vector<int>{}, -1, -1, -1,
          "oneapi::mkl::blas::asum"}},
        {"cublasCaxpy_v2",
         {std::vector<int>{3, 5}, std::vector<int>{2},
          std::vector<std::string>{"std::complex<float>",
                                   "std::complex<float>"},
          std::vector<std::string>{"std::complex<float>"}, std::vector<int>{},
          -1, -1, -1, "oneapi::mkl::blas::axpy"}},
        {"cublasZaxpy_v2",
         {std::vector<int>{3, 5}, std::vector<int>{2},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>"},
          std::vector<std::string>{"std::complex<double>"}, std::vector<int>{},
          -1, -1, -1, "oneapi::mkl::blas::axpy"}},
        {"cublasCcopy_v2",
         {std::vector<int>{2, 4}, std::vector<int>{},
          std::vector<std::string>{"std::complex<float>",
                                   "std::complex<float>"},
          std::vector<std::string>{}, std::vector<int>{}, -1, -1, -1,
          "oneapi::mkl::blas::copy"}},
        {"cublasZcopy_v2",
         {std::vector<int>{2, 4}, std::vector<int>{},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>"},
          std::vector<std::string>{}, std::vector<int>{}, -1, -1, -1,
          "oneapi::mkl::blas::copy"}},
        {"cublasCdotu_v2",
         {std::vector<int>{2, 4, 6}, std::vector<int>{},
          std::vector<std::string>{"std::complex<float>", "std::complex<float>",
                                   "std::complex<float>"},
          std::vector<std::string>{}, std::vector<int>{}, -1, -1, -1,
          "oneapi::mkl::blas::dotu"}},
        {"cublasCdotc_v2",
         {std::vector<int>{2, 4, 6}, std::vector<int>{},
          std::vector<std::string>{"std::complex<float>", "std::complex<float>",
                                   "std::complex<float>"},
          std::vector<std::string>{}, std::vector<int>{}, -1, -1, -1,
          "oneapi::mkl::blas::dotc"}},
        {"cublasZdotu_v2",
         {std::vector<int>{2, 4, 6}, std::vector<int>{},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>",
                                   "std::complex<double>"},
          std::vector<std::string>{}, std::vector<int>{}, -1, -1, -1,
          "oneapi::mkl::blas::dotu"}},
        {"cublasZdotc_v2",
         {std::vector<int>{2, 4, 6}, std::vector<int>{},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>",
                                   "std::complex<double>"},
          std::vector<std::string>{}, std::vector<int>{}, -1, -1, -1,
          "oneapi::mkl::blas::dotc"}},
        {"cublasScnrm2_v2",
         {std::vector<int>{2, 4}, std::vector<int>{},
          std::vector<std::string>{"std::complex<float>", "float"},
          std::vector<std::string>{}, std::vector<int>{}, -1, -1, -1,
          "oneapi::mkl::blas::nrm2"}},
        {"cublasDznrm2_v2",
         {std::vector<int>{2, 4}, std::vector<int>{},
          std::vector<std::string>{"std::complex<double>", "double"},
          std::vector<std::string>{}, std::vector<int>{}, -1, -1, -1,
          "oneapi::mkl::blas::nrm2"}},
        {"cublasCsrot_v2",
         {std::vector<int>{2, 4}, std::vector<int>{6, 7},
          std::vector<std::string>{"std::complex<float>",
                                   "std::complex<float>"},
          std::vector<std::string>{"float", "float"}, std::vector<int>{}, -1,
          -1, -1, "oneapi::mkl::blas::rot"}},
        {"cublasZdrot_v2",
         {std::vector<int>{2, 4}, std::vector<int>{6, 7},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>"},
          std::vector<std::string>{"double", "double"}, std::vector<int>{}, -1,
          -1, -1, "oneapi::mkl::blas::rot"}},
        {"cublasCrotg_v2",
         {std::vector<int>{1, 2, 3, 4}, std::vector<int>{},
          std::vector<std::string>{"std::complex<float>", "std::complex<float>",
                                   "float", "std::complex<float>"},
          std::vector<std::string>{}, std::vector<int>{}, -1, -1, -1,
          "oneapi::mkl::blas::rotg"}},
        {"cublasZrotg_v2",
         {std::vector<int>{1, 2, 3, 4}, std::vector<int>{},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>", "double",
                                   "std::complex<double>"},
          std::vector<std::string>{}, std::vector<int>{}, -1, -1, -1,
          "oneapi::mkl::blas::rotg"}},
        {"cublasCscal_v2",
         {std::vector<int>{3}, std::vector<int>{2},
          std::vector<std::string>{"std::complex<float>"},
          std::vector<std::string>{"std::complex<float>"}, std::vector<int>{},
          -1, -1, -1, "oneapi::mkl::blas::scal"}},
        {"cublasCsscal_v2",
         {std::vector<int>{3}, std::vector<int>{2},
          std::vector<std::string>{"std::complex<float>"},
          std::vector<std::string>{"float"}, std::vector<int>{}, -1, -1, -1,
          "oneapi::mkl::blas::scal"}},
        {"cublasZscal_v2",
         {std::vector<int>{3}, std::vector<int>{2},
          std::vector<std::string>{"std::complex<double>"},
          std::vector<std::string>{"std::complex<double>"}, std::vector<int>{},
          -1, -1, -1, "oneapi::mkl::blas::scal"}},
        {"cublasZdscal_v2",
         {std::vector<int>{3}, std::vector<int>{2},
          std::vector<std::string>{"std::complex<double>"},
          std::vector<std::string>{"double"}, std::vector<int>{}, -1, -1, -1,
          "oneapi::mkl::blas::scal"}},
        {"cublasCswap_v2",
         {std::vector<int>{2, 4}, std::vector<int>{},
          std::vector<std::string>{"std::complex<float>",
                                   "std::complex<float>"},
          std::vector<std::string>{}, std::vector<int>{}, -1, -1, -1,
          "oneapi::mkl::blas::swap"}},
        {"cublasZswap_v2",
         {std::vector<int>{2, 4}, std::vector<int>{},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>"},
          std::vector<std::string>{}, std::vector<int>{}, -1, -1, -1,
          "oneapi::mkl::blas::swap"}},
        /*BLAS level 2*/
        {"cublasCgbmv_v2",
         {std::vector<int>{7, 9, 12}, std::vector<int>{6, 11},
          std::vector<std::string>{"std::complex<float>", "std::complex<float>",
                                   "std::complex<float>"},
          std::vector<std::string>{"std::complex<float>",
                                   "std::complex<float>"},
          std::vector<int>{1}, -1, -1, -1, "oneapi::mkl::blas::gbmv"}},
        {"cublasZgbmv_v2",
         {std::vector<int>{7, 9, 12}, std::vector<int>{6, 11},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>",
                                   "std::complex<double>"},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>"},
          std::vector<int>{1}, -1, -1, -1, "oneapi::mkl::blas::gbmv"}},
        {"cublasCgemv_v2",
         {std::vector<int>{5, 7, 10}, std::vector<int>{4, 9},
          std::vector<std::string>{"std::complex<float>", "std::complex<float>",
                                   "std::complex<float>"},
          std::vector<std::string>{"std::complex<float>",
                                   "std::complex<float>"},
          std::vector<int>{1}, -1, -1, -1, "oneapi::mkl::blas::gemv"}},
        {"cublasZgemv_v2",
         {std::vector<int>{5, 7, 10}, std::vector<int>{4, 9},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>",
                                   "std::complex<double>"},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>"},
          std::vector<int>{1}, -1, -1, -1, "oneapi::mkl::blas::gemv"}},
        {"cublasCgeru_v2",
         {std::vector<int>{4, 6, 8}, std::vector<int>{3},
          std::vector<std::string>{"std::complex<float>", "std::complex<float>",
                                   "std::complex<float>"},
          std::vector<std::string>{"std::complex<float>"}, std::vector<int>{},
          -1, -1, -1, "oneapi::mkl::blas::geru"}},
        {"cublasCgerc_v2",
         {std::vector<int>{4, 6, 8}, std::vector<int>{3},
          std::vector<std::string>{"std::complex<float>", "std::complex<float>",
                                   "std::complex<float>"},
          std::vector<std::string>{"std::complex<float>"}, std::vector<int>{},
          -1, -1, -1, "oneapi::mkl::blas::gerc"}},
        {"cublasZgeru_v2",
         {std::vector<int>{4, 6, 8}, std::vector<int>{3},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>",
                                   "std::complex<double>"},
          std::vector<std::string>{"std::complex<double>"}, std::vector<int>{},
          -1, -1, -1, "oneapi::mkl::blas::geru"}},
        {"cublasZgerc_v2",
         {std::vector<int>{4, 6, 8}, std::vector<int>{3},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>",
                                   "std::complex<double>"},
          std::vector<std::string>{"std::complex<double>"}, std::vector<int>{},
          -1, -1, -1, "oneapi::mkl::blas::gerc"}},
        {"cublasCtbmv_v2",
         {std::vector<int>{6, 8}, std::vector<int>{},
          std::vector<std::string>{"std::complex<float>",
                                   "std::complex<float>"},
          std::vector<std::string>{}, std::vector<int>{2}, 1, -1, 3,
          "oneapi::mkl::blas::tbmv"}},
        {"cublasZtbmv_v2",
         {std::vector<int>{6, 8}, std::vector<int>{},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>"},
          std::vector<std::string>{}, std::vector<int>{2}, 1, -1, 3,
          "oneapi::mkl::blas::tbmv"}},
        {"cublasCtbsv_v2",
         {std::vector<int>{6, 8}, std::vector<int>{},
          std::vector<std::string>{"std::complex<float>",
                                   "std::complex<float>"},
          std::vector<std::string>{}, std::vector<int>{2}, 1, -1, 3,
          "oneapi::mkl::blas::tbsv"}},
        {"cublasZtbsv_v2",
         {std::vector<int>{6, 8}, std::vector<int>{},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>"},
          std::vector<std::string>{}, std::vector<int>{2}, 1, -1, 3,
          "oneapi::mkl::blas::tbsv"}},
        {"cublasCtpmv_v2",
         {std::vector<int>{5, 6}, std::vector<int>{},
          std::vector<std::string>{"std::complex<float>",
                                   "std::complex<float>"},
          std::vector<std::string>{}, std::vector<int>{2}, 1, -1, 3,
          "oneapi::mkl::blas::tpmv"}},
        {"cublasZtpmv_v2",
         {std::vector<int>{5, 6}, std::vector<int>{},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>"},
          std::vector<std::string>{}, std::vector<int>{2}, 1, -1, 3,
          "oneapi::mkl::blas::tpmv"}},
        {"cublasCtpsv_v2",
         {std::vector<int>{5, 6}, std::vector<int>{},
          std::vector<std::string>{"std::complex<float>",
                                   "std::complex<float>"},
          std::vector<std::string>{}, std::vector<int>{2}, 1, -1, 3,
          "oneapi::mkl::blas::tpsv"}},
        {"cublasZtpsv_v2",
         {std::vector<int>{5, 6}, std::vector<int>{},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>"},
          std::vector<std::string>{}, std::vector<int>{2}, 1, -1, 3,
          "oneapi::mkl::blas::tpsv"}},
        {"cublasCtrmv_v2",
         {std::vector<int>{5, 7}, std::vector<int>{},
          std::vector<std::string>{"std::complex<float>",
                                   "std::complex<float>"},
          std::vector<std::string>{}, std::vector<int>{2}, 1, -1, 3,
          "oneapi::mkl::blas::trmv"}},
        {"cublasZtrmv_v2",
         {std::vector<int>{5, 7}, std::vector<int>{},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>"},
          std::vector<std::string>{}, std::vector<int>{2}, 1, -1, 3,
          "oneapi::mkl::blas::trmv"}},
        {"cublasCtrsv_v2",
         {std::vector<int>{5, 7}, std::vector<int>{},
          std::vector<std::string>{"std::complex<float>",
                                   "std::complex<float>"},
          std::vector<std::string>{}, std::vector<int>{2}, 1, -1, 3,
          "oneapi::mkl::blas::trsv"}},
        {"cublasZtrsv_v2",
         {std::vector<int>{5, 7}, std::vector<int>{},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>"},
          std::vector<std::string>{}, std::vector<int>{2}, 1, -1, 3,
          "oneapi::mkl::blas::trsv"}},
        {"cublasChemv_v2",
         {std::vector<int>{4, 6, 9}, std::vector<int>{3, 8},
          std::vector<std::string>{"std::complex<float>", "std::complex<float>",
                                   "std::complex<float>"},
          std::vector<std::string>{"std::complex<float>",
                                   "std::complex<float>"},
          std::vector<int>{}, 1, -1, -1, "oneapi::mkl::blas::hemv"}},
        {"cublasZhemv_v2",
         {std::vector<int>{4, 6, 9}, std::vector<int>{3, 8},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>",
                                   "std::complex<double>"},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>"},
          std::vector<int>{}, 1, -1, -1, "oneapi::mkl::blas::hemv"}},
        {"cublasChbmv_v2",
         {std::vector<int>{5, 7, 10}, std::vector<int>{4, 9},
          std::vector<std::string>{"std::complex<float>", "std::complex<float>",
                                   "std::complex<float>"},
          std::vector<std::string>{"std::complex<float>",
                                   "std::complex<float>"},
          std::vector<int>{}, 1, -1, -1, "oneapi::mkl::blas::hbmv"}},
        {"cublasZhbmv_v2",
         {std::vector<int>{5, 7, 10}, std::vector<int>{4, 9},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>",
                                   "std::complex<double>"},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>"},
          std::vector<int>{}, 1, -1, -1, "oneapi::mkl::blas::hbmv"}},
        {"cublasChpmv_v2",
         {std::vector<int>{4, 5, 8}, std::vector<int>{3, 7},
          std::vector<std::string>{"std::complex<float>", "std::complex<float>",
                                   "std::complex<float>"},
          std::vector<std::string>{"std::complex<float>",
                                   "std::complex<float>"},
          std::vector<int>{}, 1, -1, -1, "oneapi::mkl::blas::hpmv"}},
        {"cublasZhpmv_v2",
         {std::vector<int>{4, 5, 8}, std::vector<int>{3, 7},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>",
                                   "std::complex<double>"},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>"},
          std::vector<int>{}, 1, -1, -1, "oneapi::mkl::blas::hpmv"}},
        {"cublasCher_v2",
         {std::vector<int>{4, 6}, std::vector<int>{3},
          std::vector<std::string>{"std::complex<float>",
                                   "std::complex<float>"},
          std::vector<std::string>{"float"}, std::vector<int>{}, 1, -1, -1,
          "oneapi::mkl::blas::her"}},
        {"cublasZher_v2",
         {std::vector<int>{4, 6}, std::vector<int>{3},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>"},
          std::vector<std::string>{"double"}, std::vector<int>{}, 1, -1, -1,
          "oneapi::mkl::blas::her"}},
        {"cublasCher2_v2",
         {std::vector<int>{4, 6, 8}, std::vector<int>{3},
          std::vector<std::string>{"std::complex<float>", "std::complex<float>",
                                   "std::complex<float>"},
          std::vector<std::string>{"std::complex<float>"}, std::vector<int>{},
          1, -1, -1, "oneapi::mkl::blas::her2"}},
        {"cublasZher2_v2",
         {std::vector<int>{4, 6, 8}, std::vector<int>{3},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>",
                                   "std::complex<double>"},
          std::vector<std::string>{"std::complex<double>"}, std::vector<int>{},
          1, -1, -1, "oneapi::mkl::blas::her2"}},
        {"cublasChpr_v2",
         {std::vector<int>{4, 6}, std::vector<int>{3},
          std::vector<std::string>{"std::complex<float>",
                                   "std::complex<float>"},
          std::vector<std::string>{"float"}, std::vector<int>{}, 1, -1, -1,
          "oneapi::mkl::blas::hpr"}},
        {"cublasZhpr_v2",
         {std::vector<int>{4, 6}, std::vector<int>{3},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>"},
          std::vector<std::string>{"double"}, std::vector<int>{}, 1, -1, -1,
          "oneapi::mkl::blas::hpr"}},
        {"cublasChpr2_v2",
         {std::vector<int>{4, 6, 8}, std::vector<int>{3},
          std::vector<std::string>{"std::complex<float>", "std::complex<float>",
                                   "std::complex<float>"},
          std::vector<std::string>{"std::complex<float>"}, std::vector<int>{},
          1, -1, -1, "oneapi::mkl::blas::hpr2"}},
        {"cublasZhpr2_v2",
         {std::vector<int>{4, 6, 8}, std::vector<int>{3},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>",
                                   "std::complex<double>"},
          std::vector<std::string>{"std::complex<double>"}, std::vector<int>{},
          1, -1, -1, "oneapi::mkl::blas::hpr2"}},
        /*BLAS level 3*/
        {"cublasCgemm_v2",
         {std::vector<int>{7, 9, 12}, std::vector<int>{6, 11},
          std::vector<std::string>{"std::complex<float>", "std::complex<float>",
                                   "std::complex<float>"},
          std::vector<std::string>{"std::complex<float>",
                                   "std::complex<float>"},
          std::vector<int>{1, 2}, -1, -1, -1, "oneapi::mkl::blas::gemm"}},
        {"cublasZgemm_v2",
         {std::vector<int>{7, 9, 12}, std::vector<int>{6, 11},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>",
                                   "std::complex<double>"},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>"},
          std::vector<int>{1, 2}, -1, -1, -1, "oneapi::mkl::blas::gemm"}},
        {"cublasCgemm3m",
         {std::vector<int>{7, 9, 12}, std::vector<int>{6, 11},
          std::vector<std::string>{"std::complex<float>", "std::complex<float>",
                                   "std::complex<float>"},
          std::vector<std::string>{"std::complex<float>",
                                   "std::complex<float>"},
          std::vector<int>{1, 2}, -1, -1, -1, "oneapi::mkl::blas::gemm"}},
        {"cublasZgemm3m",
         {std::vector<int>{7, 9, 12}, std::vector<int>{6, 11},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>",
                                   "std::complex<double>"},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>"},
          std::vector<int>{1, 2}, -1, -1, -1, "oneapi::mkl::blas::gemm"}},
        {"cublasCgemmStridedBatched",
         {std::vector<int>{7, 10, 14}, std::vector<int>{6, 13},
          std::vector<std::string>{"std::complex<float>", "std::complex<float>",
                                   "std::complex<float>"},
          std::vector<std::string>{"std::complex<float>",
                                   "std::complex<float>"},
          std::vector<int>{1, 2}, -1, -1, -1, "oneapi::mkl::blas::gemm_batch"}},
        {"cublasZgemmStridedBatched",
         {std::vector<int>{7, 10, 14}, std::vector<int>{6, 13},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>",
                                   "std::complex<double>"},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>"},
          std::vector<int>{1, 2}, -1, -1, -1, "oneapi::mkl::blas::gemm_batch"}},
        {"cublasCsymm_v2",
         {std::vector<int>{6, 8, 11}, std::vector<int>{5, 10},
          std::vector<std::string>{"std::complex<float>", "std::complex<float>",
                                   "std::complex<float>"},
          std::vector<std::string>{"std::complex<float>",
                                   "std::complex<float>"},
          std::vector<int>{}, 2, 1, -1, "oneapi::mkl::blas::symm"}},
        {"cublasZsymm_v2",
         {std::vector<int>{6, 8, 11}, std::vector<int>{5, 10},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>",
                                   "std::complex<double>"},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>"},
          std::vector<int>{}, 2, 1, -1, "oneapi::mkl::blas::symm"}},
        {"cublasCsyrk_v2",
         {std::vector<int>{6, 9}, std::vector<int>{5, 8},
          std::vector<std::string>{"std::complex<float>",
                                   "std::complex<float>"},
          std::vector<std::string>{"std::complex<float>",
                                   "std::complex<float>"},
          std::vector<int>{2}, 1, -1, -1, "oneapi::mkl::blas::syrk"}},
        {"cublasZsyrk_v2",
         {std::vector<int>{6, 9}, std::vector<int>{5, 8},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>"},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>"},
          std::vector<int>{2}, 1, -1, -1, "oneapi::mkl::blas::syrk"}},
        {"cublasCsyr2k_v2",
         {std::vector<int>{6, 8, 11}, std::vector<int>{5, 10},
          std::vector<std::string>{"std::complex<float>", "std::complex<float>",
                                   "std::complex<float>"},
          std::vector<std::string>{"std::complex<float>",
                                   "std::complex<float>"},
          std::vector<int>{2}, 1, -1, -1, "oneapi::mkl::blas::syr2k"}},
        {"cublasZsyr2k_v2",
         {std::vector<int>{6, 8, 11}, std::vector<int>{5, 10},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>",
                                   "std::complex<double>"},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>"},
          std::vector<int>{2}, 1, -1, -1, "oneapi::mkl::blas::syr2k"}},
        {"cublasCtrsm_v2",
         {std::vector<int>{8, 10}, std::vector<int>{7},
          std::vector<std::string>{"std::complex<float>",
                                   "std::complex<float>"},
          std::vector<std::string>{"std::complex<float>"}, std::vector<int>{3},
          2, 1, 4, "oneapi::mkl::blas::trsm"}},
        {"cublasZtrsm_v2",
         {std::vector<int>{8, 10}, std::vector<int>{7},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>"},
          std::vector<std::string>{"std::complex<double>"}, std::vector<int>{3},
          2, 1, 4, "oneapi::mkl::blas::trsm"}},
        {"cublasChemm_v2",
         {std::vector<int>{6, 8, 11}, std::vector<int>{5, 10},
          std::vector<std::string>{"std::complex<float>", "std::complex<float>",
                                   "std::complex<float>"},
          std::vector<std::string>{"std::complex<float>",
                                   "std::complex<float>"},
          std::vector<int>{}, 2, 1, -1, "oneapi::mkl::blas::hemm"}},
        {"cublasZhemm_v2",
         {std::vector<int>{6, 8, 11}, std::vector<int>{5, 10},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>",
                                   "std::complex<double>"},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>"},
          std::vector<int>{}, 2, 1, -1, "oneapi::mkl::blas::hemm"}},
        {"cublasCherk_v2",
         {std::vector<int>{6, 9}, std::vector<int>{5, 8},
          std::vector<std::string>{"std::complex<float>",
                                   "std::complex<float>"},
          std::vector<std::string>{"float", "float"}, std::vector<int>{2}, 1,
          -1, -1, "oneapi::mkl::blas::herk"}},
        {"cublasZherk_v2",
         {std::vector<int>{6, 9}, std::vector<int>{5, 8},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>"},
          std::vector<std::string>{"double", "double"}, std::vector<int>{2}, 1,
          -1, -1, "oneapi::mkl::blas::herk"}},
        {"cublasCher2k_v2",
         {std::vector<int>{6, 8, 11}, std::vector<int>{5, 10},
          std::vector<std::string>{"std::complex<float>", "std::complex<float>",
                                   "std::complex<float>"},
          std::vector<std::string>{"std::complex<float>", "float"},
          std::vector<int>{2}, 1, -1, -1, "oneapi::mkl::blas::her2k"}},
        {"cublasZher2k_v2",
         {std::vector<int>{6, 8, 11}, std::vector<int>{5, 10},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>",
                                   "std::complex<double>"},
          std::vector<std::string>{"std::complex<double>", "double"},
          std::vector<int>{2}, 1, -1, -1, "oneapi::mkl::blas::her2k"}},
        // Needn't declare bufferB ,but need copy the data ptrB points to
        // where ptrC points.
        {"cublasCtrmm_v2",
         {std::vector<int>{8, 12}, std::vector<int>{7},
          std::vector<std::string>{"std::complex<float>",
                                   "std::complex<float>"},
          std::vector<std::string>{"std::complex<float>"}, std::vector<int>{3},
          2, 1, 4, "oneapi::mkl::blas::trmm"}},
        {"cublasZtrmm_v2",
         {std::vector<int>{8, 12}, std::vector<int>{7},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>"},
          std::vector<std::string>{"std::complex<double>"}, std::vector<int>{3},
          2, 1, 4, "oneapi::mkl::blas::trmm"}},
    };

const std::map<std::string, MapNames::BLASFuncComplexReplInfo>
    MapNames::BatchedBLASFuncReplInfoMap{
        {"cublasHgemmBatched",
         {std::vector<int>{7, 9, 12}, std::vector<int>{6, 11},
          std::vector<std::string>{MapNames::getClNamespace() + "::half",
                                   MapNames::getClNamespace() + "::half",
                                   MapNames::getClNamespace() + "::half"},
          std::vector<std::string>{MapNames::getClNamespace() + "::half",
                                   MapNames::getClNamespace() + "::half"},
          std::vector<int>{1, 2}, -1, -1, -1, "oneapi::mkl::blas::gemm_batch"}},
        {"cublasSgemmBatched",
         {std::vector<int>{7, 9, 12}, std::vector<int>{6, 11},
          std::vector<std::string>{"float", "float", "float"},
          std::vector<std::string>{"float", "float"}, std::vector<int>{1, 2},
          -1, -1, -1, "oneapi::mkl::blas::gemm_batch"}},
        {"cublasDgemmBatched",
         {std::vector<int>{7, 9, 12}, std::vector<int>{6, 11},
          std::vector<std::string>{"double", "double", "double"},
          std::vector<std::string>{"double", "double"}, std::vector<int>{1, 2},
          -1, -1, -1, "oneapi::mkl::blas::gemm_batch"}},
        {"cublasCgemmBatched",
         {std::vector<int>{7, 9, 12}, std::vector<int>{6, 11},
          std::vector<std::string>{"std::complex<float>", "std::complex<float>",
                                   "std::complex<float>"},
          std::vector<std::string>{"std::complex<float>",
                                   "std::complex<float>"},
          std::vector<int>{1, 2}, -1, -1, -1, "oneapi::mkl::blas::gemm_batch"}},
        {"cublasZgemmBatched",
         {std::vector<int>{7, 9, 12}, std::vector<int>{6, 11},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>",
                                   "std::complex<double>"},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>"},
          std::vector<int>{1, 2}, -1, -1, -1, "oneapi::mkl::blas::gemm_batch"}},
        {"cublasStrsmBatched",
         {std::vector<int>{8, 10}, std::vector<int>{7},
          std::vector<std::string>{"float", "float"},
          std::vector<std::string>{"float"}, std::vector<int>{3},
         2, 1, 4, "oneapi::mkl::blas::trsm_batch"}},
        {"cublasDtrsmBatched",
         {std::vector<int>{8, 10}, std::vector<int>{7},
          std::vector<std::string>{"double", "double"},
          std::vector<std::string>{"double"}, std::vector<int>{3},
          2, 1, 4, "oneapi::mkl::blas::trsm_batch"}},
        {"cublasCtrsmBatched",
         {std::vector<int>{8, 10}, std::vector<int>{7},
          std::vector<std::string>{"std::complex<float>", "std::complex<float>"},
          std::vector<std::string>{"std::complex<float>"},
          std::vector<int>{3}, 2, 1, 4, "oneapi::mkl::blas::trsm_batch"}},
        {"cublasZtrsmBatched",
         {std::vector<int>{8, 10}, std::vector<int>{7},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>"},
          std::vector<std::string>{"std::complex<double>"},
          std::vector<int>{3},2, 1, 4, "oneapi::mkl::blas::trsm_batch"}},
    };

const std::map<std::string, MapNames::BLASFuncComplexReplInfo>
    MapNames::LegacyBLASFuncReplInfoMap{
        /*BLAS level 1 */
        {"cublasIsamax",
         {std::vector<int>{1}, std::vector<int>{},
          std::vector<std::string>{"float", "int64_t"},
          std::vector<std::string>{}, std::vector<int>{}, -1, -1, -1,
          "oneapi::mkl::blas::iamax"}},
        {"cublasIdamax",
         {std::vector<int>{1}, std::vector<int>{},
          std::vector<std::string>{"double", "int64_t"},
          std::vector<std::string>{}, std::vector<int>{}, -1, -1, -1,
          "oneapi::mkl::blas::iamax"}},
        {"cublasIsamin",
         {std::vector<int>{1}, std::vector<int>{},
          std::vector<std::string>{"float", "int64_t"},
          std::vector<std::string>{}, std::vector<int>{}, -1, -1, -1,
          "oneapi::mkl::blas::iamin"}},
        {"cublasIdamin",
         {std::vector<int>{1}, std::vector<int>{},
          std::vector<std::string>{"double", "int64_t"},
          std::vector<std::string>{}, std::vector<int>{}, -1, -1, -1,
          "oneapi::mkl::blas::iamin"}},
        {"cublasSasum",
         {std::vector<int>{1}, std::vector<int>{},
          std::vector<std::string>{"float", "float"},
          std::vector<std::string>{}, std::vector<int>{}, -1, -1, -1,
          "oneapi::mkl::blas::asum"}},
        {"cublasDasum",
         {std::vector<int>{1}, std::vector<int>{},
          std::vector<std::string>{"double", "double"},
          std::vector<std::string>{}, std::vector<int>{}, -1, -1, -1,
          "oneapi::mkl::blas::asum"}},
        {"cublasSaxpy",
         {std::vector<int>{2, 4}, std::vector<int>{},
          std::vector<std::string>{"float", "float"},
          std::vector<std::string>{}, std::vector<int>{}, -1, -1, -1,
          "oneapi::mkl::blas::axpy"}},
        {"cublasDaxpy",
         {std::vector<int>{2, 4}, std::vector<int>{},
          std::vector<std::string>{"double", "double"},
          std::vector<std::string>{}, std::vector<int>{}, -1, -1, -1,
          "oneapi::mkl::blas::axpy"}},
        {"cublasScopy",
         {std::vector<int>{1, 3}, std::vector<int>{},
          std::vector<std::string>{"float", "float"},
          std::vector<std::string>{}, std::vector<int>{}, -1, -1, -1,
          "oneapi::mkl::blas::copy"}},
        {"cublasDcopy",
         {std::vector<int>{1, 3}, std::vector<int>{},
          std::vector<std::string>{"double", "double"},
          std::vector<std::string>{}, std::vector<int>{}, -1, -1, -1,
          "oneapi::mkl::blas::copy"}},
        {"cublasSdot",
         {std::vector<int>{1, 3}, std::vector<int>{},
          std::vector<std::string>{"float", "float", "float"},
          std::vector<std::string>{}, std::vector<int>{}, -1, -1, -1,
          "oneapi::mkl::blas::dot"}},
        {"cublasDdot",
         {std::vector<int>{1, 3}, std::vector<int>{},
          std::vector<std::string>{"double", "double", "double"},
          std::vector<std::string>{}, std::vector<int>{}, -1, -1, -1,
          "oneapi::mkl::blas::dot"}},
        {"cublasSnrm2",
         {std::vector<int>{1}, std::vector<int>{},
          std::vector<std::string>{"float", "float"},
          std::vector<std::string>{}, std::vector<int>{}, -1, -1, -1,
          "oneapi::mkl::blas::nrm2"}},
        {"cublasDnrm2",
         {std::vector<int>{1}, std::vector<int>{},
          std::vector<std::string>{"double", "double"},
          std::vector<std::string>{}, std::vector<int>{}, -1, -1, -1,
          "oneapi::mkl::blas::nrm2"}},
        {"cublasSrot",
         {std::vector<int>{1, 3}, std::vector<int>{},
          std::vector<std::string>{"float", "float"},
          std::vector<std::string>{}, std::vector<int>{}, -1, -1, -1,
          "oneapi::mkl::blas::rot"}},
        {"cublasDrot",
         {std::vector<int>{1, 3}, std::vector<int>{},
          std::vector<std::string>{"double", "double"},
          std::vector<std::string>{}, std::vector<int>{}, -1, -1, -1,
          "oneapi::mkl::blas::rot"}},
        {"cublasSrotg",
         {std::vector<int>{0, 1, 2, 3}, std::vector<int>{},
          std::vector<std::string>{"float", "float", "float", "float"},
          std::vector<std::string>{}, std::vector<int>{}, -1, -1, -1,
          "oneapi::mkl::blas::rotg"}},
        {"cublasDrotg",
         {std::vector<int>{0, 1, 2, 3}, std::vector<int>{},
          std::vector<std::string>{"double", "double", "double", "double"},
          std::vector<std::string>{}, std::vector<int>{}, -1, -1, -1,
          "oneapi::mkl::blas::rotg"}},
        {"cublasSrotm",
         {std::vector<int>{1, 3, 5}, std::vector<int>{},
          std::vector<std::string>{"float", "float", "float"},
          std::vector<std::string>{}, std::vector<int>{}, -1, -1, -1,
          "oneapi::mkl::blas::rotm"}},
        {"cublasDrotm",
         {std::vector<int>{1, 3, 5}, std::vector<int>{},
          std::vector<std::string>{"double", "double", "double"},
          std::vector<std::string>{}, std::vector<int>{}, -1, -1, -1,
          "oneapi::mkl::blas::rotm"}},
        {"cublasSrotmg",
         {std::vector<int>{0, 1, 2, 4}, std::vector<int>{3},
          std::vector<std::string>{"float", "float", "float", "float"},
          std::vector<std::string>{"float"}, std::vector<int>{}, -1, -1, -1,
          "oneapi::mkl::blas::rotmg"}},
        {"cublasDrotmg",
         {std::vector<int>{0, 1, 2, 4}, std::vector<int>{3},
          std::vector<std::string>{"double", "double", "double", "double"},
          std::vector<std::string>{"double"}, std::vector<int>{}, -1, -1, -1,
          "oneapi::mkl::blas::rotmg"}},
        {"cublasSscal",
         {std::vector<int>{2}, std::vector<int>{},
          std::vector<std::string>{"float"}, std::vector<std::string>{},
          std::vector<int>{}, -1, -1, -1, "oneapi::mkl::blas::scal"}},
        {"cublasDscal",
         {std::vector<int>{2}, std::vector<int>{},
          std::vector<std::string>{"double"}, std::vector<std::string>{},
          std::vector<int>{}, -1, -1, -1, "oneapi::mkl::blas::scal"}},
        {"cublasSswap",
         {std::vector<int>{1, 3}, std::vector<int>{},
          std::vector<std::string>{"float", "float"},
          std::vector<std::string>{}, std::vector<int>{}, -1, -1, -1,
          "oneapi::mkl::blas::swap"}},
        {"cublasDswap",
         {std::vector<int>{1, 3}, std::vector<int>{},
          std::vector<std::string>{"double", "double"},
          std::vector<std::string>{}, std::vector<int>{}, -1, -1, -1,
          "oneapi::mkl::blas::swap"}},
        /*BLAS level 2 */
        {"cublasSgbmv",
         {std::vector<int>{6, 8, 11}, std::vector<int>{},
          std::vector<std::string>{"float", "float", "float"},
          std::vector<std::string>{}, std::vector<int>{0}, -1, -1, -1,
          "oneapi::mkl::blas::gbmv"}},
        {"cublasDgbmv",
         {std::vector<int>{6, 8, 11}, std::vector<int>{},
          std::vector<std::string>{"double", "double", "double"},
          std::vector<std::string>{}, std::vector<int>{0}, -1, -1, -1,
          "oneapi::mkl::blas::gbmv"}},
        {"cublasSgemv",
         {std::vector<int>{4, 6, 9}, std::vector<int>{},
          std::vector<std::string>{"float", "float", "float"},
          std::vector<std::string>{}, std::vector<int>{0}, -1, -1, -1,
          "oneapi::mkl::blas::gemv"}},
        {"cublasDgemv",
         {std::vector<int>{4, 6, 9}, std::vector<int>{},
          std::vector<std::string>{"double", "double", "double"},
          std::vector<std::string>{}, std::vector<int>{0}, -1, -1, -1,
          "oneapi::mkl::blas::gemv"}},
        {"cublasSger",
         {std::vector<int>{3, 5, 7}, std::vector<int>{},
          std::vector<std::string>{"float", "float", "float"},
          std::vector<std::string>{}, std::vector<int>{}, -1, -1, -1,
          "oneapi::mkl::blas::ger"}},
        {"cublasDger",
         {std::vector<int>{3, 5, 7}, std::vector<int>{},
          std::vector<std::string>{"double", "double", "double"},
          std::vector<std::string>{}, std::vector<int>{}, -1, -1, -1,
          "oneapi::mkl::blas::ger"}},
        {"cublasSsbmv",
         {std::vector<int>{4, 6, 9}, std::vector<int>{},
          std::vector<std::string>{"float", "float", "float"},
          std::vector<std::string>{}, std::vector<int>{}, 0, -1, -1,
          "oneapi::mkl::blas::sbmv"}},
        {"cublasDsbmv",
         {std::vector<int>{4, 6, 9}, std::vector<int>{},
          std::vector<std::string>{"double", "double", "double"},
          std::vector<std::string>{}, std::vector<int>{}, 0, -1, -1,
          "oneapi::mkl::blas::sbmv"}},
        {"cublasSspmv",
         {std::vector<int>{3, 4, 7}, std::vector<int>{},
          std::vector<std::string>{"float", "float", "float"},
          std::vector<std::string>{}, std::vector<int>{}, 0, -1, -1,
          "oneapi::mkl::blas::spmv"}},
        {"cublasDspmv",
         {std::vector<int>{3, 4, 7}, std::vector<int>{},
          std::vector<std::string>{"double", "double", "double"},
          std::vector<std::string>{}, std::vector<int>{}, 0, -1, -1,
          "oneapi::mkl::blas::spmv"}},
        {"cublasSspr",
         {std::vector<int>{3, 5}, std::vector<int>{},
          std::vector<std::string>{"float", "float"},
          std::vector<std::string>{}, std::vector<int>{}, 0, -1, -1,
          "oneapi::mkl::blas::spr"}},
        {"cublasDspr",
         {std::vector<int>{3, 5}, std::vector<int>{},
          std::vector<std::string>{"double", "double"},
          std::vector<std::string>{}, std::vector<int>{}, 0, -1, -1,
          "oneapi::mkl::blas::spr"}},
        {"cublasSspr2",
         {std::vector<int>{3, 5, 7}, std::vector<int>{},
          std::vector<std::string>{"float", "float", "float"},
          std::vector<std::string>{}, std::vector<int>{}, 0, -1, -1,
          "oneapi::mkl::blas::spr2"}},
        {"cublasDspr2",
         {std::vector<int>{3, 5, 7}, std::vector<int>{},
          std::vector<std::string>{"double", "double", "double"},
          std::vector<std::string>{}, std::vector<int>{}, 0, -1, -1,
          "oneapi::mkl::blas::spr2"}},
        {"cublasSsymv",
         {std::vector<int>{3, 5, 8}, std::vector<int>{},
          std::vector<std::string>{"float", "float", "float"},
          std::vector<std::string>{}, std::vector<int>{}, 0, -1, -1,
          "oneapi::mkl::blas::symv"}},
        {"cublasDsymv",
         {std::vector<int>{3, 5, 8}, std::vector<int>{},
          std::vector<std::string>{"double", "double", "double"},
          std::vector<std::string>{}, std::vector<int>{}, 0, -1, -1,
          "oneapi::mkl::blas::symv"}},
        {"cublasSsyr",
         {std::vector<int>{3, 5}, std::vector<int>{},
          std::vector<std::string>{"float", "float"},
          std::vector<std::string>{}, std::vector<int>{}, 0, -1, -1,
          "oneapi::mkl::blas::syr"}},
        {"cublasDsyr",
         {std::vector<int>{3, 5}, std::vector<int>{},
          std::vector<std::string>{"double", "double"},
          std::vector<std::string>{}, std::vector<int>{}, 0, -1, -1,
          "oneapi::mkl::blas::syr"}},
        {"cublasSsyr2",
         {std::vector<int>{3, 5, 7}, std::vector<int>{},
          std::vector<std::string>{"float", "float", "float"},
          std::vector<std::string>{}, std::vector<int>{}, 0, -1, -1,
          "oneapi::mkl::blas::syr2"}},
        {"cublasDsyr2",
         {std::vector<int>{3, 5, 7}, std::vector<int>{},
          std::vector<std::string>{"double", "double", "double"},
          std::vector<std::string>{}, std::vector<int>{}, 0, -1, -1,
          "oneapi::mkl::blas::syr2"}},
        {"cublasStbmv",
         {std::vector<int>{5, 7}, std::vector<int>{},
          std::vector<std::string>{"float", "float"},
          std::vector<std::string>{}, std::vector<int>{1}, 0, -1, 2,
          "oneapi::mkl::blas::tbmv"}},
        {"cublasDtbmv",
         {std::vector<int>{5, 7}, std::vector<int>{},
          std::vector<std::string>{"double", "double"},
          std::vector<std::string>{}, std::vector<int>{1}, 0, -1, 2,
          "oneapi::mkl::blas::tbmv"}},
        {"cublasStbsv",
         {std::vector<int>{5, 7}, std::vector<int>{},
          std::vector<std::string>{"float", "float"},
          std::vector<std::string>{}, std::vector<int>{1}, 0, -1, 2,
          "oneapi::mkl::blas::tbsv"}},
        {"cublasDtbsv",
         {std::vector<int>{5, 7}, std::vector<int>{},
          std::vector<std::string>{"double", "double"},
          std::vector<std::string>{}, std::vector<int>{1}, 0, -1, 2,
          "oneapi::mkl::blas::tbsv"}},
        {"cublasStpmv",
         {std::vector<int>{4, 5}, std::vector<int>{},
          std::vector<std::string>{"float", "float"},
          std::vector<std::string>{}, std::vector<int>{1}, 0, -1, 2,
          "oneapi::mkl::blas::tpmv"}},
        {"cublasDtpmv",
         {std::vector<int>{4, 5}, std::vector<int>{},
          std::vector<std::string>{"double", "double"},
          std::vector<std::string>{}, std::vector<int>{1}, 0, -1, 2,
          "oneapi::mkl::blas::tpmv"}},
        {"cublasStpsv",
         {std::vector<int>{4, 5}, std::vector<int>{},
          std::vector<std::string>{"float", "float"},
          std::vector<std::string>{}, std::vector<int>{1}, 0, -1, 2,
          "oneapi::mkl::blas::tpsv"}},
        {"cublasDtpsv",
         {std::vector<int>{4, 5}, std::vector<int>{},
          std::vector<std::string>{"double", "double"},
          std::vector<std::string>{}, std::vector<int>{1}, 0, -1, 2,
          "oneapi::mkl::blas::tpsv"}},
        {"cublasStrmv",
         {std::vector<int>{4, 6}, std::vector<int>{},
          std::vector<std::string>{"float", "float"},
          std::vector<std::string>{}, std::vector<int>{1}, 0, -1, 2,
          "oneapi::mkl::blas::trmv"}},
        {"cublasDtrmv",
         {std::vector<int>{4, 6}, std::vector<int>{},
          std::vector<std::string>{"double", "double"},
          std::vector<std::string>{}, std::vector<int>{1}, 0, -1, 2,
          "oneapi::mkl::blas::trmv"}},
        {"cublasStrsv",
         {std::vector<int>{4, 6}, std::vector<int>{},
          std::vector<std::string>{"float", "float"},
          std::vector<std::string>{}, std::vector<int>{1}, 0, -1, 2,
          "oneapi::mkl::blas::trsv"}},
        {"cublasDtrsv",
         {std::vector<int>{4, 6}, std::vector<int>{},
          std::vector<std::string>{"double", "double"},
          std::vector<std::string>{}, std::vector<int>{1}, 0, -1, 2,
          "oneapi::mkl::blas::trsv"}},
        /*BLAS level 3 */
        {"cublasSgemm",
         {std::vector<int>{6, 8, 11}, std::vector<int>{},
          std::vector<std::string>{"float", "float", "float"},
          std::vector<std::string>{}, std::vector<int>{0, 1}, -1, -1, -1,
          "oneapi::mkl::blas::gemm"}},
        {"cublasDgemm",
         {std::vector<int>{6, 8, 11}, std::vector<int>{},
          std::vector<std::string>{"double", "double", "double"},
          std::vector<std::string>{}, std::vector<int>{0, 1}, -1, -1, -1,
          "oneapi::mkl::blas::gemm"}},
        {"cublasSsymm",
         {std::vector<int>{5, 7, 10}, std::vector<int>{},
          std::vector<std::string>{"float", "float", "float"},
          std::vector<std::string>{}, std::vector<int>{}, 1, 0, -1,
          "oneapi::mkl::blas::symm"}},
        {"cublasDsymm",
         {std::vector<int>{5, 7, 10}, std::vector<int>{},
          std::vector<std::string>{"double", "double", "double"},
          std::vector<std::string>{}, std::vector<int>{}, 1, 0, -1,
          "oneapi::mkl::blas::symm"}},
        {"cublasSsyrk",
         {std::vector<int>{5, 8}, std::vector<int>{},
          std::vector<std::string>{"float", "float"},
          std::vector<std::string>{}, std::vector<int>{1}, 0, -1, -1,
          "oneapi::mkl::blas::syrk"}},
        {"cublasDsyrk",
         {std::vector<int>{5, 8}, std::vector<int>{},
          std::vector<std::string>{"double", "double"},
          std::vector<std::string>{}, std::vector<int>{1}, 0, -1, -1,
          "oneapi::mkl::blas::syrk"}},
        {"cublasSsyr2k",
         {std::vector<int>{5, 7, 10}, std::vector<int>{},
          std::vector<std::string>{"float", "float", "float"},
          std::vector<std::string>{}, std::vector<int>{1}, 0, -1, -1,
          "oneapi::mkl::blas::syr2k"}},
        {"cublasDsyr2k",
         {std::vector<int>{5, 7, 10}, std::vector<int>{},
          std::vector<std::string>{"double", "double", "double"},
          std::vector<std::string>{}, std::vector<int>{1}, 0, -1, -1,
          "oneapi::mkl::blas::syr2k"}},
        {"cublasStrsm",
         {std::vector<int>{7, 9}, std::vector<int>{},
          std::vector<std::string>{"float", "float"},
          std::vector<std::string>{}, std::vector<int>{2}, 1, 0, 3,
          "oneapi::mkl::blas::trsm"}},
        {"cublasDtrsm",
         {std::vector<int>{7, 9}, std::vector<int>{},
          std::vector<std::string>{"double", "double"},
          std::vector<std::string>{}, std::vector<int>{2}, 1, 0, 3,
          "oneapi::mkl::blas::trsm"}},
        {"cublasStrmm",
         {std::vector<int>{7, 9}, std::vector<int>{},
          std::vector<std::string>{"float", "float"},
          std::vector<std::string>{}, std::vector<int>{2}, 1, 0, 3,
          "oneapi::mkl::blas::trmm"}},
        {"cublasDtrmm",
         {std::vector<int>{7, 9}, std::vector<int>{},
          std::vector<std::string>{"double", "double"},
          std::vector<std::string>{}, std::vector<int>{2}, 1, 0, 3,
          "oneapi::mkl::blas::trmm"}},
        // level 1
        {"cublasIcamax",
         {std::vector<int>{1}, std::vector<int>{},
          std::vector<std::string>{"std::complex<float>", "int64_t"},
          std::vector<std::string>{}, std::vector<int>{}, -1, -1, -1,
          "oneapi::mkl::blas::iamax"}},
        {"cublasIzamax",
         {std::vector<int>{1}, std::vector<int>{},
          std::vector<std::string>{"std::complex<double>", "int64_t"},
          std::vector<std::string>{}, std::vector<int>{}, -1, -1, -1,
          "oneapi::mkl::blas::iamax"}},
        {"cublasIcamin",
         {std::vector<int>{1}, std::vector<int>{},
          std::vector<std::string>{"std::complex<float>", "int64_t"},
          std::vector<std::string>{}, std::vector<int>{}, -1, -1, -1,
          "oneapi::mkl::blas::iamin"}},
        {"cublasIzamin",
         {std::vector<int>{1}, std::vector<int>{},
          std::vector<std::string>{"std::complex<double>", "int64_t"},
          std::vector<std::string>{}, std::vector<int>{}, -1, -1, -1,
          "oneapi::mkl::blas::iamin"}},
        {"cublasScasum",
         {std::vector<int>{1}, std::vector<int>{},
          std::vector<std::string>{"std::complex<float>", "float"},
          std::vector<std::string>{}, std::vector<int>{}, -1, -1, -1,
          "oneapi::mkl::blas::asum"}},
        {"cublasDzasum",
         {std::vector<int>{1}, std::vector<int>{},
          std::vector<std::string>{"std::complex<double>", "double"},
          std::vector<std::string>{}, std::vector<int>{}, -1, -1, -1,
          "oneapi::mkl::blas::asum"}},
        {"cublasCaxpy",
         {std::vector<int>{2, 4}, std::vector<int>{1},
          std::vector<std::string>{"std::complex<float>",
                                   "std::complex<float>"},
          std::vector<std::string>{"std::complex<float>"}, std::vector<int>{},
          -1, -1, -1, "oneapi::mkl::blas::axpy"}},
        {"cublasZaxpy",
         {std::vector<int>{2, 4}, std::vector<int>{1},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>"},
          std::vector<std::string>{"std::complex<double>"}, std::vector<int>{},
          -1, -1, -1, "oneapi::mkl::blas::axpy"}},
        {"cublasCcopy",
         {std::vector<int>{1, 3}, std::vector<int>{},
          std::vector<std::string>{"std::complex<float>",
                                   "std::complex<float>"},
          std::vector<std::string>{}, std::vector<int>{}, -1, -1, -1,
          "oneapi::mkl::blas::copy"}},
        {"cublasZcopy",
         {std::vector<int>{1, 3}, std::vector<int>{},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>"},
          std::vector<std::string>{}, std::vector<int>{}, -1, -1, -1,
          "oneapi::mkl::blas::copy"}},
        {"cublasCdotu",
         {std::vector<int>{1, 3}, std::vector<int>{},
          std::vector<std::string>{"std::complex<float>", "std::complex<float>",
                                   "std::complex<float>"},
          std::vector<std::string>{}, std::vector<int>{}, -1, -1, -1,
          "oneapi::mkl::blas::dotu"}},
        {"cublasCdotc",
         {std::vector<int>{1, 3}, std::vector<int>{},
          std::vector<std::string>{"std::complex<float>", "std::complex<float>",
                                   "std::complex<float>"},
          std::vector<std::string>{}, std::vector<int>{}, -1, -1, -1,
          "oneapi::mkl::blas::dotc"}},
        {"cublasZdotu",
         {std::vector<int>{1, 3}, std::vector<int>{},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>",
                                   "std::complex<double>"},
          std::vector<std::string>{}, std::vector<int>{}, -1, -1, -1,
          "oneapi::mkl::blas::dotu"}},
        {"cublasZdotc",
         {std::vector<int>{1, 3}, std::vector<int>{},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>",
                                   "std::complex<double>"},
          std::vector<std::string>{}, std::vector<int>{}, -1, -1, -1,
          "oneapi::mkl::blas::dotc"}},
        {"cublasScnrm2",
         {std::vector<int>{1}, std::vector<int>{},
          std::vector<std::string>{"std::complex<float>", "float"},
          std::vector<std::string>{}, std::vector<int>{}, -1, -1, -1,
          "oneapi::mkl::blas::nrm2"}},
        {"cublasDznrm2",
         {std::vector<int>{1}, std::vector<int>{},
          std::vector<std::string>{"std::complex<double>", "double"},
          std::vector<std::string>{}, std::vector<int>{}, -1, -1, -1,
          "oneapi::mkl::blas::nrm2"}},
        {"cublasCsrot",
         {std::vector<int>{1, 3}, std::vector<int>{},
          std::vector<std::string>{"std::complex<float>",
                                   "std::complex<float>"},
          std::vector<std::string>{}, std::vector<int>{}, -1, -1, -1,
          "oneapi::mkl::blas::rot"}},
        {"cublasZdrot",
         {std::vector<int>{1, 3}, std::vector<int>{},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>"},
          std::vector<std::string>{}, std::vector<int>{}, -1, -1, -1,
          "oneapi::mkl::blas::rot"}},
        {"cublasCscal",
         {std::vector<int>{2}, std::vector<int>{1},
          std::vector<std::string>{"std::complex<float>"},
          std::vector<std::string>{"std::complex<float>"}, std::vector<int>{},
          -1, -1, -1, "oneapi::mkl::blas::scal"}},
        {"cublasZscal",
         {std::vector<int>{2}, std::vector<int>{1},
          std::vector<std::string>{"std::complex<double>"},
          std::vector<std::string>{"std::complex<double>"}, std::vector<int>{},
          -1, -1, -1, "oneapi::mkl::blas::scal"}},
        {"cublasCsscal",
         {std::vector<int>{2}, std::vector<int>{},
          std::vector<std::string>{"std::complex<float>"},
          std::vector<std::string>{}, std::vector<int>{}, -1, -1, -1,
          "oneapi::mkl::blas::scal"}},
        {"cublasZdscal",
         {std::vector<int>{2}, std::vector<int>{},
          std::vector<std::string>{"std::complex<double>"},
          std::vector<std::string>{}, std::vector<int>{}, -1, -1, -1,
          "oneapi::mkl::blas::scal"}},
        {"cublasCswap",
         {std::vector<int>{1, 3}, std::vector<int>{},
          std::vector<std::string>{"std::complex<float>",
                                   "std::complex<float>"},
          std::vector<std::string>{}, std::vector<int>{}, -1, -1, -1,
          "oneapi::mkl::blas::swap"}},
        {"cublasZswap",
         {std::vector<int>{1, 3}, std::vector<int>{},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>"},
          std::vector<std::string>{}, std::vector<int>{}, -1, -1, -1,
          "oneapi::mkl::blas::swap"}},
        /*BLAS level 2 */
        {"cublasCgbmv",
         {std::vector<int>{6, 8, 11}, std::vector<int>{5, 10},
          std::vector<std::string>{"std::complex<float>", "std::complex<float>",
                                   "std::complex<float>"},
          std::vector<std::string>{"std::complex<float>",
                                   "std::complex<float>"},
          std::vector<int>{0}, -1, -1, -1, "oneapi::mkl::blas::gbmv"}},
        {"cublasZgbmv",
         {std::vector<int>{6, 8, 11}, std::vector<int>{5, 10},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>",
                                   "std::complex<double>"},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>"},
          std::vector<int>{0}, -1, -1, -1, "oneapi::mkl::blas::gbmv"}},
        {"cublasCgemv",
         {std::vector<int>{4, 6, 9}, std::vector<int>{3, 8},
          std::vector<std::string>{"std::complex<float>", "std::complex<float>",
                                   "std::complex<float>"},
          std::vector<std::string>{"std::complex<float>",
                                   "std::complex<float>"},
          std::vector<int>{0}, -1, -1, -1, "oneapi::mkl::blas::gemv"}},
        {"cublasZgemv",
         {std::vector<int>{4, 6, 9}, std::vector<int>{3, 8},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>",
                                   "std::complex<double>"},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>"},
          std::vector<int>{0}, -1, -1, -1, "oneapi::mkl::blas::gemv"}},
        {"cublasCgeru",
         {std::vector<int>{3, 5, 7}, std::vector<int>{2},
          std::vector<std::string>{"std::complex<float>", "std::complex<float>",
                                   "std::complex<float>"},
          std::vector<std::string>{"std::complex<float>"}, std::vector<int>{},
          -1, -1, -1, "oneapi::mkl::blas::geru"}},
        {"cublasCgerc",
         {std::vector<int>{3, 5, 7}, std::vector<int>{2},
          std::vector<std::string>{"std::complex<float>", "std::complex<float>",
                                   "std::complex<float>"},
          std::vector<std::string>{"std::complex<float>"}, std::vector<int>{},
          -1, -1, -1, "oneapi::mkl::blas::gerc"}},
        {"cublasZgeru",
         {std::vector<int>{3, 5, 7}, std::vector<int>{2},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>",
                                   "std::complex<double>"},
          std::vector<std::string>{"std::complex<double>"}, std::vector<int>{},
          -1, -1, -1, "oneapi::mkl::blas::geru"}},
        {"cublasZgerc",
         {std::vector<int>{3, 5, 7}, std::vector<int>{2},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>",
                                   "std::complex<double>"},
          std::vector<std::string>{"std::complex<double>"}, std::vector<int>{},
          -1, -1, -1, "oneapi::mkl::blas::gerc"}},
        {"cublasCtbmv",
         {std::vector<int>{5, 7}, std::vector<int>{},
          std::vector<std::string>{"std::complex<float>",
                                   "std::complex<float>"},
          std::vector<std::string>{}, std::vector<int>{1}, 0, -1, 2,
          "oneapi::mkl::blas::tbmv"}},
        {"cublasZtbmv",
         {std::vector<int>{5, 7}, std::vector<int>{},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>"},
          std::vector<std::string>{}, std::vector<int>{1}, 0, -1, 2,
          "oneapi::mkl::blas::tbmv"}},
        {"cublasCtbsv",
         {std::vector<int>{5, 7}, std::vector<int>{},
          std::vector<std::string>{"std::complex<float>",
                                   "std::complex<float>"},
          std::vector<std::string>{}, std::vector<int>{1}, 0, -1, 2,
          "oneapi::mkl::blas::tbsv"}},
        {"cublasZtbsv",
         {std::vector<int>{5, 7}, std::vector<int>{},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>"},
          std::vector<std::string>{}, std::vector<int>{1}, 0, -1, 2,
          "oneapi::mkl::blas::tbsv"}},
        {"cublasCtpmv",
         {std::vector<int>{4, 5}, std::vector<int>{},
          std::vector<std::string>{"std::complex<float>",
                                   "std::complex<float>"},
          std::vector<std::string>{}, std::vector<int>{1}, 0, -1, 2,
          "oneapi::mkl::blas::tpmv"}},
        {"cublasZtpmv",
         {std::vector<int>{4, 5}, std::vector<int>{},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>"},
          std::vector<std::string>{}, std::vector<int>{1}, 0, -1, 2,
          "oneapi::mkl::blas::tpmv"}},
        {"cublasCtpsv",
         {std::vector<int>{4, 5}, std::vector<int>{},
          std::vector<std::string>{"std::complex<float>",
                                   "std::complex<float>"},
          std::vector<std::string>{}, std::vector<int>{1}, 0, -1, 2,
          "oneapi::mkl::blas::tpsv"}},
        {"cublasZtpsv",
         {std::vector<int>{4, 5}, std::vector<int>{},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>"},
          std::vector<std::string>{}, std::vector<int>{1}, 0, -1, 2,
          "oneapi::mkl::blas::tpsv"}},
        {"cublasCtrmv",
         {std::vector<int>{4, 6}, std::vector<int>{},
          std::vector<std::string>{"std::complex<float>",
                                   "std::complex<float>"},
          std::vector<std::string>{}, std::vector<int>{1}, 0, -1, 2,
          "oneapi::mkl::blas::trmv"}},
        {"cublasZtrmv",
         {std::vector<int>{4, 6}, std::vector<int>{},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>"},
          std::vector<std::string>{}, std::vector<int>{1}, 0, -1, 2,
          "oneapi::mkl::blas::trmv"}},
        {"cublasCtrsv",
         {std::vector<int>{4, 6}, std::vector<int>{},
          std::vector<std::string>{"std::complex<float>",
                                   "std::complex<float>"},
          std::vector<std::string>{}, std::vector<int>{1}, 0, -1, 2,
          "oneapi::mkl::blas::trsv"}},
        {"cublasZtrsv",
         {std::vector<int>{4, 6}, std::vector<int>{},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>"},
          std::vector<std::string>{}, std::vector<int>{1}, 0, -1, 2,
          "oneapi::mkl::blas::trsv"}},
        {"cublasChemv",
         {std::vector<int>{3, 5, 8}, std::vector<int>{2, 7},
          std::vector<std::string>{"std::complex<float>", "std::complex<float>",
                                   "std::complex<float>"},
          std::vector<std::string>{"std::complex<float>",
                                   "std::complex<float>"},
          std::vector<int>{}, 0, -1, -1, "oneapi::mkl::blas::hemv"}},
        {"cublasZhemv",
         {std::vector<int>{3, 5, 8}, std::vector<int>{2, 7},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>",
                                   "std::complex<double>"},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>"},
          std::vector<int>{}, 0, -1, -1, "oneapi::mkl::blas::hemv"}},
        {"cublasChbmv",
         {std::vector<int>{4, 6, 9}, std::vector<int>{3, 8},
          std::vector<std::string>{"std::complex<float>", "std::complex<float>",
                                   "std::complex<float>"},
          std::vector<std::string>{"std::complex<float>",
                                   "std::complex<float>"},
          std::vector<int>{}, 0, -1, -1, "oneapi::mkl::blas::hbmv"}},
        {"cublasZhbmv",
         {std::vector<int>{4, 6, 9}, std::vector<int>{3, 8},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>",
                                   "std::complex<double>"},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>"},
          std::vector<int>{}, 0, -1, -1, "oneapi::mkl::blas::hbmv"}},
        {"cublasChpmv",
         {std::vector<int>{3, 4, 7}, std::vector<int>{2, 6},
          std::vector<std::string>{"std::complex<float>", "std::complex<float>",
                                   "std::complex<float>"},
          std::vector<std::string>{"std::complex<float>",
                                   "std::complex<float>"},
          std::vector<int>{}, 0, -1, -1, "oneapi::mkl::blas::hpmv"}},
        {"cublasZhpmv",
         {std::vector<int>{3, 4, 7}, std::vector<int>{2, 6},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>",
                                   "std::complex<double>"},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>"},
          std::vector<int>{}, 0, -1, -1, "oneapi::mkl::blas::hpmv"}},
        {"cublasCher",
         {std::vector<int>{3, 5}, std::vector<int>{},
          std::vector<std::string>{"std::complex<float>",
                                   "std::complex<float>"},
          std::vector<std::string>{}, std::vector<int>{}, 0, -1, -1,
          "oneapi::mkl::blas::her"}},
        {"cublasZher",
         {std::vector<int>{3, 5}, std::vector<int>{},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>"},
          std::vector<std::string>{}, std::vector<int>{}, 0, -1, -1,
          "oneapi::mkl::blas::her"}},
        {"cublasCher2",
         {std::vector<int>{3, 5, 7}, std::vector<int>{2},
          std::vector<std::string>{"std::complex<float>", "std::complex<float>",
                                   "std::complex<float>"},
          std::vector<std::string>{"std::complex<float>"}, std::vector<int>{},
          0, -1, -1, "oneapi::mkl::blas::her2"}},
        {"cublasZher2",
         {std::vector<int>{3, 5, 7}, std::vector<int>{2},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>",
                                   "std::complex<double>"},
          std::vector<std::string>{"std::complex<double>"}, std::vector<int>{},
          0, -1, -1, "oneapi::mkl::blas::her2"}},
        {"cublasChpr",
         {std::vector<int>{3, 5}, std::vector<int>{},
          std::vector<std::string>{"std::complex<float>",
                                   "std::complex<float>"},
          std::vector<std::string>{}, std::vector<int>{}, 0, -1, -1,
          "oneapi::mkl::blas::hpr"}},
        {"cublasZhpr",
         {std::vector<int>{3, 5}, std::vector<int>{},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>"},
          std::vector<std::string>{}, std::vector<int>{}, 0, -1, -1,
          "oneapi::mkl::blas::hpr"}},
        {"cublasChpr2",
         {std::vector<int>{3, 5, 7}, std::vector<int>{2},
          std::vector<std::string>{"std::complex<float>", "std::complex<float>",
                                   "std::complex<float>"},
          std::vector<std::string>{"std::complex<float>"}, std::vector<int>{},
          0, -1, -1, "oneapi::mkl::blas::hpr2"}},
        {"cublasZhpr2",
         {std::vector<int>{3, 5, 7}, std::vector<int>{2},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>",
                                   "std::complex<double>"},
          std::vector<std::string>{"std::complex<double>"}, std::vector<int>{},
          0, -1, -1, "oneapi::mkl::blas::hpr2"}},
        /*BLAS level 3 */
        {"cublasCgemm",
         {std::vector<int>{6, 8, 11}, std::vector<int>{5, 10},
          std::vector<std::string>{"std::complex<float>", "std::complex<float>",
                                   "std::complex<float>"},
          std::vector<std::string>{"std::complex<float>",
                                   "std::complex<float>"},
          std::vector<int>{0, 1}, -1, -1, -1, "oneapi::mkl::blas::gemm"}},
        {"cublasZgemm",
         {std::vector<int>{6, 8, 11}, std::vector<int>{5, 10},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>",
                                   "std::complex<double>"},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>"},
          std::vector<int>{0, 1}, -1, -1, -1, "oneapi::mkl::blas::gemm"}},
        {"cublasCsyrk",
         {std::vector<int>{5, 8}, std::vector<int>{4, 7},
          std::vector<std::string>{"std::complex<float>",
                                   "std::complex<float>"},
          std::vector<std::string>{"std::complex<float>",
                                   "std::complex<float>"},
          std::vector<int>{1}, 0, -1, -1, "oneapi::mkl::blas::syrk"}},
        {"cublasZsyrk",
         {std::vector<int>{5, 8}, std::vector<int>{4, 7},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>"},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>"},
          std::vector<int>{1}, 0, -1, -1, "oneapi::mkl::blas::syrk"}},
        {"cublasCherk",
         {std::vector<int>{5, 8}, std::vector<int>{},
          std::vector<std::string>{"std::complex<float>",
                                   "std::complex<float>"},
          std::vector<std::string>{}, std::vector<int>{1}, 0, -1, -1,
          "oneapi::mkl::blas::herk"}},
        {"cublasZherk",
         {std::vector<int>{5, 8}, std::vector<int>{},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>"},
          std::vector<std::string>{}, std::vector<int>{1}, 0, -1, -1,
          "oneapi::mkl::blas::herk"}},
        {"cublasCsyr2k",
         {std::vector<int>{5, 7, 10}, std::vector<int>{4, 9},
          std::vector<std::string>{"std::complex<float>", "std::complex<float>",
                                   "std::complex<float>"},
          std::vector<std::string>{"std::complex<float>",
                                   "std::complex<float>"},
          std::vector<int>{1}, 0, -1, -1, "oneapi::mkl::blas::syr2k"}},
        {"cublasZsyr2k",
         {std::vector<int>{5, 7, 10}, std::vector<int>{4, 9},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>",
                                   "std::complex<double>"},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>"},
          std::vector<int>{1}, 0, -1, -1, "oneapi::mkl::blas::syr2k"}},
        {"cublasCher2k",
         {std::vector<int>{5, 7, 10}, std::vector<int>{4},
          std::vector<std::string>{"std::complex<float>", "std::complex<float>",
                                   "std::complex<float>"},
          std::vector<std::string>{"std::complex<float>"}, std::vector<int>{1},
          0, -1, -1, "oneapi::mkl::blas::her2k"}},
        {"cublasZher2k",
         {std::vector<int>{5, 7, 10}, std::vector<int>{4},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>",
                                   "std::complex<double>"},
          std::vector<std::string>{"std::complex<double>"}, std::vector<int>{1},
          0, -1, -1, "oneapi::mkl::blas::her2k"}},
        {"cublasCsymm",
         {std::vector<int>{5, 7, 10}, std::vector<int>{4, 9},
          std::vector<std::string>{"std::complex<float>", "std::complex<float>",
                                   "std::complex<float>"},
          std::vector<std::string>{"std::complex<float>",
                                   "std::complex<float>"},
          std::vector<int>{}, 1, 0, -1, "oneapi::mkl::blas::symm"}},
        {"cublasZsymm",
         {std::vector<int>{5, 7, 10}, std::vector<int>{4, 9},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>",
                                   "std::complex<double>"},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>"},
          std::vector<int>{}, 1, 0, -1, "oneapi::mkl::blas::symm"}},
        {"cublasChemm",
         {std::vector<int>{5, 7, 10}, std::vector<int>{4, 9},
          std::vector<std::string>{"std::complex<float>", "std::complex<float>",
                                   "std::complex<float>"},
          std::vector<std::string>{"std::complex<float>",
                                   "std::complex<float>"},
          std::vector<int>{}, 1, 0, -1, "oneapi::mkl::blas::hemm"}},
        {"cublasZhemm",
         {std::vector<int>{5, 7, 10}, std::vector<int>{4, 9},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>",
                                   "std::complex<double>"},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>"},
          std::vector<int>{}, 1, 0, -1, "oneapi::mkl::blas::hemm"}},
        {"cublasCtrsm",
         {std::vector<int>{7, 9}, std::vector<int>{6},
          std::vector<std::string>{"std::complex<float>",
                                   "std::complex<float>"},
          std::vector<std::string>{"std::complex<float>"}, std::vector<int>{2},
          1, 0, 3, "oneapi::mkl::blas::trsm"}},
        {"cublasZtrsm",
         {std::vector<int>{7, 9}, std::vector<int>{6},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>"},
          std::vector<std::string>{"std::complex<double>"}, std::vector<int>{2},
          1, 0, 3, "oneapi::mkl::blas::trsm"}},
        {"cublasCtrmm",
         {std::vector<int>{7, 9}, std::vector<int>{6},
          std::vector<std::string>{"std::complex<float>",
                                   "std::complex<float>"},
          std::vector<std::string>{"std::complex<float>"}, std::vector<int>{2},
          1, 0, 3, "oneapi::mkl::blas::trmm"}},
        {"cublasZtrmm",
         {std::vector<int>{7, 9}, std::vector<int>{6},
          std::vector<std::string>{"std::complex<double>",
                                   "std::complex<double>"},
          std::vector<std::string>{"std::complex<double>"}, std::vector<int>{2},
          1, 0, 3, "oneapi::mkl::blas::trmm"}},
    };

// MKL API does not have computeType and algo parameters.
// computeType(alpha/beta)               AType/BType     CType           IsSupportInMKL
// CUDA_R_16F(2)/CUBLAS_COMPUTE_16F(64)  CUDA_R_16F(2)   CUDA_R_16F(2)   yes
// CUDA_R_32I(10)                        CUDA_R_8I(3)    CUDA_R_32I(10)  no
// CUDA_R_32F(0)/CUBLAS_COMPUTE_32F(68)  CUDA_R_16F(2)   CUDA_R_16F(2)   no (can cast alpha/beta to half)
// CUDA_R_32F(0)                         CUDA_R_8I(3)    CUDA_R_32I(10)  no
// CUDA_R_32F(0)/CUBLAS_COMPUTE_32F(68)  CUDA_R_16F(2)   CUDA_R_32F(0)   yes
// CUDA_R_32F(0)/CUBLAS_COMPUTE_32F(68)  CUDA_R_32F(0)   CUDA_R_32F(0)   yes
// CUDA_R_64F(1)/CUBLAS_COMPUTE_64F(70)  CUDA_R_64F(1)   CUDA_R_64F(1)   yes
// CUDA_C_32F(4)                         CUDA_C_8I(7)    CUDA_C_32F(4)   no
// CUDA_C_32F(4)                         CUDA_C_32F(4)   CUDA_C_32F(4)   yes
// CUDA_C_64F(5)                         CUDA_C_64F(5)   CUDA_C_64F(5)   yes
const std::map<std::string, MapNames::BLASGemmExTypeInfo>
    MapNames::BLASGemmExTypeInfoMap{
        {"2:2:2",
         {MapNames::getClNamespace() + "::half",
          MapNames::getClNamespace() + "::half",
          MapNames::getClNamespace() + "::half",
          MapNames::getClNamespace() + "::half",
          MapNames::getClNamespace() + "::half",
          MapNames::getClNamespace() + "::half"}},
        {"64:2:2",
         {MapNames::getClNamespace() + "::half",
          MapNames::getClNamespace() + "::half",
          MapNames::getClNamespace() + "::half",
          MapNames::getClNamespace() + "::half",
          MapNames::getClNamespace() + "::half",
          MapNames::getClNamespace() + "::half"}},
        {"0:2:2",
         {"float", MapNames::getClNamespace() + "::half",
          MapNames::getClNamespace() + "::half",
          MapNames::getClNamespace() + "::half",
          MapNames::getClNamespace() + "::half",
          MapNames::getClNamespace() + "::half"}},
        {"68:2:2",
         {"float", MapNames::getClNamespace() + "::half",
          MapNames::getClNamespace() + "::half",
          MapNames::getClNamespace() + "::half",
          MapNames::getClNamespace() + "::half",
          MapNames::getClNamespace() + "::half"}},
        {"0:2:0",
         {"float", "float", MapNames::getClNamespace() + "::half",
          MapNames::getClNamespace() + "::half", "float", "float"}},
        {"68:2:0",
         {"float", "float", MapNames::getClNamespace() + "::half",
          MapNames::getClNamespace() + "::half", "float", "float"}},
        {"0:0:0", {"float", "float", "float", "float", "float", "float"}},
        {"68:0:0", {"float", "float", "float", "float", "float", "float"}},
        {"1:1:1", {"double", "double", "double", "double", "double", "double"}},
        {"70:1:1", {"double", "double", "double", "double", "double", "double"}},
        {"4:4:4",
         {MapNames::getClNamespace() + "::float2", "std::complex<float>",
          MapNames::getClNamespace() + "::float2", "std::complex<float>",
          MapNames::getClNamespace() + "::float2", "std::complex<float>"}},
        {"5:5:5",
         {MapNames::getClNamespace() + "::double2", "std::complex<double>",
          MapNames::getClNamespace() + "::double2", "std::complex<double>",
          MapNames::getClNamespace() + "::double2", "std::complex<double>"}}};

const std::map<std::string, MapNames::BLASGemmExTypeInfo>
    MapNames::BLASTGemmExTypeInfoMap{
        {"2:2",
         {"float", MapNames::getClNamespace() + "::half",
          MapNames::getClNamespace() + "::half",
          MapNames::getClNamespace() + "::half",
          MapNames::getClNamespace() + "::half",
          MapNames::getClNamespace() + "::half"}},
        {"2:0",
         {"float", "float", MapNames::getClNamespace() + "::half",
          MapNames::getClNamespace() + "::half", "float", "float"}},
        {"0:0", {"float", "float", "float", "float", "float", "float"}},
        {"4:4",
         {"std::complex<float>", "std::complex<float>",
          MapNames::getClNamespace() + "::float2", "std::complex<float>",
          MapNames::getClNamespace() + "::float2", "std::complex<float>"}}};

const std::map<std::string, int> MapNames::SyncBLASFunc{
    {"cublasIsamax_v2", 4}, {"cublasIdamax_v2", 4}, {"cublasIcamax_v2", 4},
    {"cublasIzamax_v2", 4}, {"cublasIsamin_v2", 4}, {"cublasIdamin_v2", 4},
    {"cublasIcamin_v2", 4}, {"cublasIzamin_v2", 4}, {"cublasSasum_v2", 4},
    {"cublasDasum_v2", 4},  {"cublasScasum_v2", 4}, {"cublasDzasum_v2", 4},
    {"cublasSrotg_v2", 1},  {"cublasDrotg_v2", 1},  {"cublasCrotg_v2", 1},
    {"cublasZrotg_v2", 1},  {"cublasSrotmg_v2", 4}, {"cublasDrotmg_v2", 4},
    {"cublasSdot_v2", 6},   {"cublasDdot_v2", 6},   {"cublasCdotu_v2", 6},
    {"cublasCdotc_v2", 6},  {"cublasZdotu_v2", 6},  {"cublasZdotc_v2", 6},
    {"cublasSnrm2_v2", 4},  {"cublasDnrm2_v2", 4},  {"cublasScnrm2_v2", 4},
    {"cublasDznrm2_v2", 4}};

// SOLVER functions names and parameters replacements information mapping
const std::map<std::string, MapNames::SOLVERFuncReplInfo>
    MapNames::SOLVERFuncReplInfoMap{
        {"cusolverDnSpotrf_bufferSize",
         MapNames::SOLVERFuncReplInfo::migrateReturnAndRedundant(
             true, std::vector<int>{3, 5},
             "oneapi::mkl::lapack::potrf_scratchpad_size<float>")},
        {"cusolverDnDpotrf_bufferSize",
         MapNames::SOLVERFuncReplInfo::migrateReturnAndRedundant(
             true, std::vector<int>{3, 5},
             "oneapi::mkl::lapack::potrf_scratchpad_size<double>")},
        {"cusolverDnCpotrf_bufferSize",
         MapNames::SOLVERFuncReplInfo::migrateReturnAndRedundant(
             true, std::vector<int>{3, 5},
             "oneapi::mkl::lapack::potrf_scratchpad_size<std::complex<float>>")},
        {"cusolverDnZpotrf_bufferSize",
         MapNames::SOLVERFuncReplInfo::migrateReturnAndRedundant(
             true, std::vector<int>{3, 5},
             "oneapi::mkl::lapack::potrf_scratchpad_size<std::complex<double>>")},
        {"cusolverDnSgetrf_bufferSize",
         MapNames::SOLVERFuncReplInfo::migrateReturnAndRedundant(
             true, std::vector<int>{3, 5},
             "oneapi::mkl::lapack::getrf_scratchpad_size<float>")},
        {"cusolverDnDgetrf_bufferSize",
         MapNames::SOLVERFuncReplInfo::migrateReturnAndRedundant(
             true, std::vector<int>{3, 5},
             "oneapi::mkl::lapack::getrf_scratchpad_size<double>")},
        {"cusolverDnCgetrf_bufferSize",
         MapNames::SOLVERFuncReplInfo::migrateReturnAndRedundant(
             true, std::vector<int>{3, 5},
             "oneapi::mkl::lapack::getrf_scratchpad_size<std::complex<float>>")},
        {"cusolverDnZgetrf_bufferSize",
         MapNames::SOLVERFuncReplInfo::migrateReturnAndRedundant(
             true, std::vector<int>{3, 5},
             "oneapi::mkl::lapack::getrf_scratchpad_size<std::complex<double>>")},
        {"cusolverDnSgeqrf_bufferSize",
         MapNames::SOLVERFuncReplInfo::migrateReturnAndRedundant(
             true, std::vector<int>{3, 5}, "oneapi::mkl::lapack::geqrf_scratchpad_size<float>")},
        {"cusolverDnDgeqrf_bufferSize",
         MapNames::SOLVERFuncReplInfo::migrateReturnAndRedundant(
             true, std::vector<int>{3, 5},
             "oneapi::mkl::lapack::geqrf_scratchpad_size<double>")},
        {"cusolverDnCgeqrf_bufferSize",
         MapNames::SOLVERFuncReplInfo::migrateReturnAndRedundant(
             true, std::vector<int>{3, 5},
             "oneapi::mkl::lapack::geqrf_scratchpad_size<std::complex<float>>")},
        {"cusolverDnZgeqrf_bufferSize",
         MapNames::SOLVERFuncReplInfo::migrateReturnAndRedundant(
             true, std::vector<int>{3, 5},
             "oneapi::mkl::lapack::geqrf_scratchpad_size<std::complex<double>>")},
        {"cusolverDnSormqr_bufferSize",
         MapNames::SOLVERFuncReplInfo::migrateReturnAndRedundant(
             true, std::vector<int>{6, 8, 9, 11},
             "oneapi::mkl::lapack::ormqr_scratchpad_size<float>")},
        {"cusolverDnDormqr_bufferSize",
         MapNames::SOLVERFuncReplInfo::migrateReturnAndRedundant(
             true, std::vector<int>{6, 8, 9, 11},
             "oneapi::mkl::lapack::ormqr_scratchpad_size<double>")},
        {"cusolverDnCunmqr_bufferSize",
         MapNames::SOLVERFuncReplInfo::migrateReturnAndRedundant(
             true, std::vector<int>{6, 8, 9, 11},
             "oneapi::mkl::lapack::unmqr_scratchpad_size<std::complex<float>>")},
        {"cusolverDnZunmqr_bufferSize",
         MapNames::SOLVERFuncReplInfo::migrateReturnAndRedundant(
             true, std::vector<int>{6, 8, 9, 11},
             "oneapi::mkl::lapack::unmqr_scratchpad_size<std::complex<double>>")},
        {"cusolverDnSorgqr_bufferSize",
         MapNames::SOLVERFuncReplInfo::migrateReturnAndRedundant(
             true, std::vector<int>{4, 6, 7},
             "oneapi::mkl::lapack::orgqr_scratchpad_size<float>")},
        {"cusolverDnDorgqr_bufferSize",
         MapNames::SOLVERFuncReplInfo::migrateReturnAndRedundant(
             true, std::vector<int>{4, 6, 7},
             "oneapi::mkl::lapack::orgqr_scratchpad_size<double>")},
        {"cusolverDnCungqr_bufferSize",
         MapNames::SOLVERFuncReplInfo::migrateReturnAndRedundant(
             true, std::vector<int>{4, 6, 7},
             "oneapi::mkl::lapack::ungqr_scratchpad_size<std::complex<float>>")},
        {"cusolverDnZungqr_bufferSize",
         MapNames::SOLVERFuncReplInfo::migrateReturnAndRedundant(
             true, std::vector<int>{4, 6, 7},
             "oneapi::mkl::lapack::ungqr_scratchpad_size<std::complex<double>>")},
        {"cusolverDnSsytrd_bufferSize",
         MapNames::SOLVERFuncReplInfo::migrateReturnAndRedundant(
             true, std::vector<int>{3, 5, 6, 7, 8},
             "oneapi::mkl::lapack::sytrd_scratchpad_size<float>")},
        {"cusolverDnDsytrd_bufferSize",
         MapNames::SOLVERFuncReplInfo::migrateReturnAndRedundant(
             true, std::vector<int>{3, 5, 6, 7, 8},
             "oneapi::mkl::lapack::sytrd_scratchpad_size<double>")},
        {"cusolverDnChetrd_bufferSize",
         MapNames::SOLVERFuncReplInfo::migrateReturnAndRedundant(
             true, std::vector<int>{3, 5, 6, 7, 8},
             "oneapi::mkl::lapack::hetrd_scratchpad_size<std::complex<float>>")},
        {"cusolverDnZhetrd_bufferSize",
         MapNames::SOLVERFuncReplInfo::migrateReturnAndRedundant(
             true, std::vector<int>{3, 5, 6, 7, 8},
             "oneapi::mkl::lapack::hetrd_scratchpad_size<std::complex<double>>")},
        {"cusolverDnSsytrf_bufferSize",
         MapNames::SOLVERFuncReplInfo::migrateReturnRedundantAndMissed(
             true, std::vector<int>{2, 4}, std::vector<int>{1},
             std::vector<int>{1}, std::vector<bool>{false},
             std::vector<std::string>{"oneapi::mkl::uplo"},
             std::vector<std::string>{"uplo_ct_mkl_upper_lower"},
             "oneapi::mkl::lapack::sytrf_scratchpad_size<float>")},
        {"cusolverDnDsytrf_bufferSize",
         MapNames::SOLVERFuncReplInfo::migrateReturnRedundantAndMissed(
             true, std::vector<int>{2, 4}, std::vector<int>{1},
             std::vector<int>{1}, std::vector<bool>{false},
             std::vector<std::string>{"oneapi::mkl::uplo"},
             std::vector<std::string>{"uplo_ct_mkl_upper_lower"},
             "oneapi::mkl::lapack::sytrf_scratchpad_size<double>")},
        {"cusolverDnCsytrf_bufferSize",
         MapNames::SOLVERFuncReplInfo::migrateReturnRedundantAndMissed(
             true, std::vector<int>{2, 4}, std::vector<int>{1},
             std::vector<int>{1}, std::vector<bool>{false},
             std::vector<std::string>{"oneapi::mkl::uplo"},
             std::vector<std::string>{"uplo_ct_mkl_upper_lower"},
             "oneapi::mkl::lapack::sytrf_scratchpad_size<std::complex<float>>")},
        {"cusolverDnZsytrf_bufferSize",
         MapNames::SOLVERFuncReplInfo::migrateReturnRedundantAndMissed(
             true, std::vector<int>{2, 4}, std::vector<int>{1},
             std::vector<int>{1}, std::vector<bool>{false},
             std::vector<std::string>{"oneapi::mkl::uplo"},
             std::vector<std::string>{"uplo_ct_mkl_upper_lower"},
             "oneapi::mkl::lapack::sytrf_scratchpad_size<std::complex<double>>")},
        {"cusolverDnSgebrd_bufferSize",
         MapNames::SOLVERFuncReplInfo::migrateReturnRedundantAndMissed(
             true, std::vector<int>{3},
             std::vector<int>{3},
             std::vector<int>{3}, std::vector<bool>{false},
             std::vector<std::string>{"std::int64_t"},
             std::vector<std::string>{"lda_ct"},
             "oneapi::mkl::lapack::gebrd_scratchpad_size<float>")},
        {"cusolverDnDgebrd_bufferSize",
         MapNames::SOLVERFuncReplInfo::migrateReturnRedundantAndMissed(
             true, std::vector<int>{3},
             std::vector<int>{3},
             std::vector<int>{3}, std::vector<bool>{false},
             std::vector<std::string>{"std::int64_t"},
             std::vector<std::string>{"lda_ct"},
             "oneapi::mkl::lapack::gebrd_scratchpad_size<double>")},
        {"cusolverDnCgebrd_bufferSize",
         MapNames::SOLVERFuncReplInfo::migrateReturnRedundantAndMissed(
             true, std::vector<int>{3},
             std::vector<int>{3},
             std::vector<int>{3}, std::vector<bool>{false},
             std::vector<std::string>{"std::int64_t"},
             std::vector<std::string>{"lda_ct"},
             "oneapi::mkl::lapack::gebrd_scratchpad_size<std::complex<float>>")},
        {"cusolverDnZgebrd_bufferSize",
         MapNames::SOLVERFuncReplInfo::migrateReturnRedundantAndMissed(
             true, std::vector<int>{3},
             std::vector<int>{3},
             std::vector<int>{3}, std::vector<bool>{false},
             std::vector<std::string>{"std::int64_t"},
             std::vector<std::string>{"lda_ct"},
             "oneapi::mkl::lapack::gebrd_scratchpad_size<std::complex<double>>")},
        {"cusolverDnSorgbr_bufferSize",
         MapNames::SOLVERFuncReplInfo::migrateReturnRedundantAndCast(
             true, std::vector<int>{5, 7, 8}, std::vector<int>{1},
             std::vector<std::string>{"oneapi::mkl::generate"},
             "oneapi::mkl::lapack::orgbr_scratchpad_size<float>")},
        {"cusolverDnDorgbr_bufferSize",
         MapNames::SOLVERFuncReplInfo::migrateReturnRedundantAndCast(
             true, std::vector<int>{5, 7, 8}, std::vector<int>{1},
             std::vector<std::string>{"oneapi::mkl::generate"},
             "oneapi::mkl::lapack::orgbr_scratchpad_size<double>")},
        {"cusolverDnCungbr_bufferSize",
         MapNames::SOLVERFuncReplInfo::migrateReturnRedundantAndCast(
             true, std::vector<int>{5, 7, 8}, std::vector<int>{1},
             std::vector<std::string>{"oneapi::mkl::generate"},
             "oneapi::mkl::lapack::ungbr_scratchpad_size<std::complex<float>>")},
        {"cusolverDnZungbr_bufferSize",
         MapNames::SOLVERFuncReplInfo::migrateReturnRedundantAndCast(
             true, std::vector<int>{5, 7, 8}, std::vector<int>{1},
             std::vector<std::string>{"oneapi::mkl::generate"},
             "oneapi::mkl::lapack::ungbr_scratchpad_size<std::complex<double>>")},
        {"cusolverDnSormtr_bufferSize",
         MapNames::SOLVERFuncReplInfo::migrateReturnAndRedundant(
             true, std::vector<int>{6, 8, 9, 11},
             "oneapi::mkl::lapack::ormtr_scratchpad_size<float>")},
        {"cusolverDnDormtr_bufferSize",
         MapNames::SOLVERFuncReplInfo::migrateReturnAndRedundant(
             true, std::vector<int>{6, 8, 9, 11},
             "oneapi::mkl::lapack::ormtr_scratchpad_size<double>")},
        {"cusolverDnCunmtr_bufferSize",
         MapNames::SOLVERFuncReplInfo::migrateReturnAndRedundant(
             true, std::vector<int>{6, 8, 9, 11},
             "oneapi::mkl::lapack::unmtr_scratchpad_size<std::complex<float>>")},
        {"cusolverDnZunmtr_bufferSize",
         MapNames::SOLVERFuncReplInfo::migrateReturnAndRedundant(
             true, std::vector<int>{6, 8, 9, 11},
             "oneapi::mkl::lapack::unmtr_scratchpad_size<std::complex<double>>")},
        {"cusolverDnSorgtr_bufferSize",
         MapNames::SOLVERFuncReplInfo::migrateReturnAndRedundant(
             true, std::vector<int>{3, 5, 6},
             "oneapi::mkl::lapack::orgtr_scratchpad_size<float>")},
        {"cusolverDnDorgtr_bufferSize",
         MapNames::SOLVERFuncReplInfo::migrateReturnAndRedundant(
             true, std::vector<int>{3, 5, 6},
             "oneapi::mkl::lapack::orgtr_scratchpad_size<double>")},
        {"cusolverDnCungtr_bufferSize",
         MapNames::SOLVERFuncReplInfo::migrateReturnAndRedundant(
             true, std::vector<int>{3, 5, 6},
             "oneapi::mkl::lapack::ungtr_scratchpad_size<std::complex<float>>")},
        {"cusolverDnZungtr_bufferSize",
         MapNames::SOLVERFuncReplInfo::migrateReturnAndRedundant(
             true, std::vector<int>{3, 5, 6},
             "oneapi::mkl::lapack::ungtr_scratchpad_size<std::complex<double>>")},
        {"cusolverDnSgesvd_bufferSize",
         MapNames::SOLVERFuncReplInfo::migrateReturnCopyRedundantAndMissed(
             true, std::vector<int>{3}, std::vector<int>{1, 1, 2},
             std::vector<int>{3, 3, 3}, std::vector<int>{1, 2},
             std::vector<int>{1, 1}, std::vector<bool>{false, false},
             std::vector<std::string>{"oneapi::mkl::job", "oneapi::mkl::job"},
             std::vector<std::string>{"job_ct_mkl_jobu", "job_ct_mkl_jobvt"},
             "oneapi::mkl::lapack::gesvd_scratchpad_size<float>")},
        {"cusolverDnDgesvd_bufferSize",
         MapNames::SOLVERFuncReplInfo::migrateReturnCopyRedundantAndMissed(
             true, std::vector<int>{3}, std::vector<int>{1, 1, 2},
             std::vector<int>{3, 3, 3}, std::vector<int>{1, 2},
             std::vector<int>{1, 1}, std::vector<bool>{false, false},
             std::vector<std::string>{"oneapi::mkl::job", "oneapi::mkl::job"},
             std::vector<std::string>{"job_ct_mkl_jobu", "job_ct_mkl_jobvt"},
             "oneapi::mkl::lapack::gesvd_scratchpad_size<double>")},
        {"cusolverDnCgesvd_bufferSize",
         MapNames::SOLVERFuncReplInfo::migrateReturnCopyRedundantAndMissed(
             true, std::vector<int>{3}, std::vector<int>{1, 1, 2},
             std::vector<int>{3, 3, 3}, std::vector<int>{1, 2},
             std::vector<int>{1, 1}, std::vector<bool>{false, false},
             std::vector<std::string>{"oneapi::mkl::job", "oneapi::mkl::job"},
             std::vector<std::string>{"job_ct_mkl_jobu", "job_ct_mkl_jobvt"},
             "oneapi::mkl::lapack::gesvd_scratchpad_size<std::complex<float>>")},
        {"cusolverDnZgesvd_bufferSize",
         MapNames::SOLVERFuncReplInfo::migrateReturnCopyRedundantAndMissed(
             true, std::vector<int>{3}, std::vector<int>{1, 1, 2},
             std::vector<int>{3, 3, 3}, std::vector<int>{1, 2},
             std::vector<int>{1, 1}, std::vector<bool>{false, false},
             std::vector<std::string>{"oneapi::mkl::job", "oneapi::mkl::job"},
             std::vector<std::string>{"job_ct_mkl_jobu", "job_ct_mkl_jobvt"},
             "oneapi::mkl::lapack::gesvd_scratchpad_size<std::complex<double>>")},
        {"cusolverDnSpotri_bufferSize",
         MapNames::SOLVERFuncReplInfo::migrateReturnAndRedundant(
             true, std::vector<int>{3, 5},
             "oneapi::mkl::lapack::potri_scratchpad_size<float>")},
        {"cusolverDnDpotri_bufferSize",
         MapNames::SOLVERFuncReplInfo::migrateReturnAndRedundant(
             true, std::vector<int>{3, 5},
             "oneapi::mkl::lapack::potri_scratchpad_size<double>")},
        {"cusolverDnCpotri_bufferSize",
         MapNames::SOLVERFuncReplInfo::migrateReturnAndRedundant(
             true, std::vector<int>{3, 5},
             "oneapi::mkl::lapack::potri_scratchpad_size<std::complex<float>>")},
        {"cusolverDnZpotri_bufferSize",
         MapNames::SOLVERFuncReplInfo::migrateReturnAndRedundant(
             true, std::vector<int>{3, 5},
             "oneapi::mkl::lapack::potri_scratchpad_size<std::complex<double>>")},
        {"cusolverDnSpotrf",
         MapNames::SOLVERFuncReplInfo::migrateBufferAndRedundant(
             std::vector<int>{3, 5}, std::vector<std::string>{"float", "float"},
             std::vector<int>{7}, "oneapi::mkl::lapack::potrf")},
        {"cusolverDnDpotrf",
         MapNames::SOLVERFuncReplInfo::migrateBufferAndRedundant(
             std::vector<int>{3, 5}, std::vector<std::string>{"double", "double"},
             std::vector<int>{7}, "oneapi::mkl::lapack::potrf")},
        {"cusolverDnCpotrf",
         MapNames::SOLVERFuncReplInfo::migrateBufferAndRedundant(
             std::vector<int>{3, 5},
             std::vector<std::string>{"std::complex<float>", "std::complex<float>"},
             std::vector<int>{7}, "oneapi::mkl::lapack::potrf")},
        {"cusolverDnZpotrf",
         MapNames::SOLVERFuncReplInfo::migrateBufferAndRedundant(
             std::vector<int>{3, 5},
             std::vector<std::string>{"std::complex<double>", "std::complex<double>"},
             std::vector<int>{7}, "oneapi::mkl::lapack::potrf")},
        {"cusolverDnSpotrs",
         MapNames::SOLVERFuncReplInfo::migrateBufferRedundantAndWS(
             std::vector<int>{4, 6}, std::vector<std::string>{"float", "float"},
             std::vector<int>{8}, std::vector<int>{7},
             std::vector<int>{0, 1, 2, 3, 5, 7},
             "oneapi::mkl::lapack::potrs_scratchpad_size<float>",
             "oneapi::mkl::lapack::potrs")},
        {"cusolverDnDpotrs",
         MapNames::SOLVERFuncReplInfo::migrateBufferRedundantAndWS(
             std::vector<int>{4, 6},
             std::vector<std::string>{"double", "double"}, std::vector<int>{8},
             std::vector<int>{7}, std::vector<int>{0, 1, 2, 3, 5, 7},
             "oneapi::mkl::lapack::potrs_scratchpad_size<double>",
             "oneapi::mkl::lapack::potrs")},
        {"cusolverDnCpotrs",
         MapNames::SOLVERFuncReplInfo::migrateBufferRedundantAndWS(
             std::vector<int>{4, 6},
             std::vector<std::string>{"std::complex<float>",
                                      "std::complex<float>"},
             std::vector<int>{8}, std::vector<int>{7},
             std::vector<int>{0, 1, 2, 3, 5, 7},
             "oneapi::mkl::lapack::potrs_scratchpad_size<std::complex<float>>",
             "oneapi::mkl::lapack::potrs")},
        {"cusolverDnZpotrs",
         MapNames::SOLVERFuncReplInfo::migrateBufferRedundantAndWS(
             std::vector<int>{4, 6},
             std::vector<std::string>{"std::complex<double>",
                                      "std::complex<double>"},
             std::vector<int>{8}, std::vector<int>{7},
             std::vector<int>{0, 1, 2, 3, 5, 7},
             "oneapi::mkl::lapack::potrs_scratchpad_size<std::complex<double>>",
             "oneapi::mkl::lapack::potrs")},
        {"cusolverDnSpotri",
         MapNames::SOLVERFuncReplInfo::migrateBufferAndRedundant(
             std::vector<int>{3, 5}, std::vector<std::string>{"float", "float"},
             std::vector<int>{7}, "oneapi::mkl::lapack::potri")},
        {"cusolverDnDpotri",
         MapNames::SOLVERFuncReplInfo::migrateBufferAndRedundant(
             std::vector<int>{3, 5},
             std::vector<std::string>{"double", "double"}, std::vector<int>{7},
             "oneapi::mkl::lapack::potri")},
        {"cusolverDnCpotri",
         MapNames::SOLVERFuncReplInfo::migrateBufferAndRedundant(
             std::vector<int>{3, 5},
             std::vector<std::string>{"std::complex<float>",
                                      "std::complex<float>"},
             std::vector<int>{7}, "oneapi::mkl::lapack::potri")},
        {"cusolverDnZpotri",
         MapNames::SOLVERFuncReplInfo::migrateBufferAndRedundant(
             std::vector<int>{3, 5},
             std::vector<std::string>{"std::complex<double>",
                                      "std::complex<double>"},
             std::vector<int>{7}, "oneapi::mkl::lapack::potri")},
        {"cusolverDnSgetrf",
         MapNames::SOLVERFuncReplInfo::migrateBufferMoveRedundantAndWSS(
             std::vector<int>{3, 5, 6},
             std::vector<std::string>{"float", "float", "int"},
             std::vector<int>{7}, std::vector<int>{6}, std::vector<int>{5},
             std::vector<int>{5}, std::vector<int>{0, 1, 2, 4},
             "oneapi::mkl::lapack::getrf_scratchpad_size<float>",
             "oneapi::mkl::lapack::getrf")},
        {"cusolverDnDgetrf",
         MapNames::SOLVERFuncReplInfo::migrateBufferMoveRedundantAndWSS(
             std::vector<int>{3, 5, 6},
             std::vector<std::string>{"double", "double", "int"},
             std::vector<int>{7}, std::vector<int>{6}, std::vector<int>{5},
             std::vector<int>{5}, std::vector<int>{0, 1, 2, 4},
             "oneapi::mkl::lapack::getrf_scratchpad_size<double>",
             "oneapi::mkl::lapack::getrf")},
        {"cusolverDnCgetrf",
         MapNames::SOLVERFuncReplInfo::migrateBufferMoveRedundantAndWSS(
             std::vector<int>{3, 5, 6},
             std::vector<std::string>{"std::complex<float>",
                                      "std::complex<float>", "int"},
             std::vector<int>{7}, std::vector<int>{6}, std::vector<int>{5},
             std::vector<int>{5}, std::vector<int>{0, 1, 2, 4},
             "oneapi::mkl::lapack::getrf_scratchpad_size<std::complex<float>>",
             "oneapi::mkl::lapack::getrf")},
        {"cusolverDnZgetrf",
         MapNames::SOLVERFuncReplInfo::migrateBufferMoveRedundantAndWSS(
             std::vector<int>{3, 5, 6},
             std::vector<std::string>{"std::complex<double>",
                                      "std::complex<double>", "int"},
             std::vector<int>{7}, std::vector<int>{6}, std::vector<int>{5},
             std::vector<int>{5}, std::vector<int>{0, 1, 2, 4},
             "oneapi::mkl::lapack::getrf_scratchpad_size<std::complex<double>>",
             "oneapi::mkl::lapack::getrf")},
        {"cusolverDnSgetrs",
         MapNames::SOLVERFuncReplInfo::migrateBufferRedundantAndWS(
             std::vector<int>{4, 6, 7},
             std::vector<std::string>{"float", "int", "float"},
             std::vector<int>{9}, std::vector<int>{8},
             std::vector<int>{0, 1, 2, 3, 5, 8},
             "oneapi::mkl::lapack::getrs_scratchpad_size<float>",
             "oneapi::mkl::lapack::getrs")},
        {"cusolverDnDgetrs",
         MapNames::SOLVERFuncReplInfo::migrateBufferRedundantAndWS(
             std::vector<int>{4, 6, 7},
             std::vector<std::string>{"double", "int", "double"},
             std::vector<int>{9}, std::vector<int>{8},
             std::vector<int>{0, 1, 2, 3, 5, 8},
             "oneapi::mkl::lapack::getrs_scratchpad_size<double>",
             "oneapi::mkl::lapack::getrs")},
        {"cusolverDnCgetrs",
         MapNames::SOLVERFuncReplInfo::migrateBufferRedundantAndWS(
             std::vector<int>{4, 6, 7},
             std::vector<std::string>{"std::complex<float>", "int",
                                      "std::complex<float>"},
             std::vector<int>{9}, std::vector<int>{8},
             std::vector<int>{0, 1, 2, 3, 5, 8},
             "oneapi::mkl::lapack::getrs_scratchpad_size<std::complex<float>>",
             "oneapi::mkl::lapack::getrs")},
        {"cusolverDnZgetrs",
         MapNames::SOLVERFuncReplInfo::migrateBufferRedundantAndWS(
             std::vector<int>{4, 6, 7},
             std::vector<std::string>{"std::complex<double>", "int",
                                      "std::complex<double>"},
             std::vector<int>{9}, std::vector<int>{8},
             std::vector<int>{0, 1, 2, 3, 5, 8},
             "oneapi::mkl::lapack::getrs_scratchpad_size<std::complex<double>>",
             "oneapi::mkl::lapack::getrs")},
        {"cusolverDnSgeqrf",
         MapNames::SOLVERFuncReplInfo::migrateBufferAndRedundant(
             std::vector<int>{3, 5, 6},
             std::vector<std::string>{"float", "float", "float", "int"},
             std::vector<int>{8},
             "oneapi::mkl::lapack::geqrf")},
        {"cusolverDnDgeqrf",
         MapNames::SOLVERFuncReplInfo::migrateBufferAndRedundant(
             std::vector<int>{3, 5, 6},
             std::vector<std::string>{"double", "double", "double", "int"},
             std::vector<int>{8},
             "oneapi::mkl::lapack::geqrf")},
        {"cusolverDnCgeqrf",
         MapNames::SOLVERFuncReplInfo::migrateBufferAndRedundant(
             std::vector<int>{3, 5, 6},
             std::vector<std::string>{"std::complex<float>",
                                      "std::complex<float>",
                                      "std::complex<float>", "int"},
             std::vector<int>{8},
             "oneapi::mkl::lapack::geqrf")},
        {"cusolverDnZgeqrf",
         MapNames::SOLVERFuncReplInfo::migrateBufferAndRedundant(
             std::vector<int>{3, 5, 6},
             std::vector<std::string>{"std::complex<double>",
                                      "std::complex<double>",
                                      "std::complex<double>", "int"},
             std::vector<int>{8},
             "oneapi::mkl::lapack::geqrf")},
        {"cusolverDnSormqr",
         MapNames::SOLVERFuncReplInfo::migrateBufferAndRedundant(
             std::vector<int>{6, 8, 9, 11},
             std::vector<std::string>{"float", "float", "float", "float"},
             std::vector<int>{13}, "oneapi::mkl::lapack::ormqr")},
        {"cusolverDnDormqr",
         MapNames::SOLVERFuncReplInfo::migrateBufferAndRedundant(
             std::vector<int>{6, 8, 9, 11},
             std::vector<std::string>{
                 "double",
                 "double",
                 "double",
                 "double",
             },
             std::vector<int>{13}, "oneapi::mkl::lapack::ormqr")},
        {"cusolverDnCunmqr",
         MapNames::SOLVERFuncReplInfo::migrateBufferAndRedundant(
             std::vector<int>{6, 8, 9, 11},
             std::vector<std::string>{
                 "std::complex<float>", "std::complex<float>",
                 "std::complex<float>", "std::complex<float>"},
             std::vector<int>{13}, "oneapi::mkl::lapack::unmqr")},
        {"cusolverDnZunmqr",
         MapNames::SOLVERFuncReplInfo::migrateBufferAndRedundant(
             std::vector<int>{6, 8, 9, 11},
             std::vector<std::string>{
                 "std::complex<double>", "std::complex<double>",
                 "std::complex<double>", "std::complex<double>"},
             std::vector<int>{13}, "oneapi::mkl::lapack::unmqr")},
        {"cusolverDnSorgqr",
         MapNames::SOLVERFuncReplInfo::migrateBufferAndRedundant(
             std::vector<int>{4, 6, 7},
             std::vector<std::string>{"float", "float", "float"},
             std::vector<int>{9},
             "oneapi::mkl::lapack::orgqr")},
        {"cusolverDnDorgqr",
         MapNames::SOLVERFuncReplInfo::migrateBufferAndRedundant(
             std::vector<int>{4, 6, 7},
             std::vector<std::string>{"double", "double", "double"},
             std::vector<int>{9},
             "oneapi::mkl::lapack::orgqr")},
        {"cusolverDnCungqr",
         MapNames::SOLVERFuncReplInfo::migrateBufferAndRedundant(
             std::vector<int>{4, 6, 7},
             std::vector<std::string>{"std::complex<float>",
                                      "std::complex<float>",
                                      "std::complex<float>"},
             std::vector<int>{9},
             "oneapi::mkl::lapack::ungqr")},
        {"cusolverDnZungqr",
         MapNames::SOLVERFuncReplInfo::migrateBufferAndRedundant(
             std::vector<int>{4, 6, 7},
             std::vector<std::string>{"std::complex<double>",
                                      "std::complex<double>",
                                      "std::complex<double>"},
             std::vector<int>{9},
             "oneapi::mkl::lapack::ungqr")},
        {"cusolverDnSsytrf",
         MapNames::SOLVERFuncReplInfo::migrateBufferAndRedundant(
             std::vector<int>{3, 5, 6},
             std::vector<std::string>{"float", "int", "float"},
             std::vector<int>{8}, "oneapi::mkl::lapack::sytrf")},
        {"cusolverDnDsytrf",
         MapNames::SOLVERFuncReplInfo::migrateBufferAndRedundant(
             std::vector<int>{3, 5, 6},
             std::vector<std::string>{"double", "int", "double"},
             std::vector<int>{8}, "oneapi::mkl::lapack::sytrf")},
        {"cusolverDnCsytrf",
         MapNames::SOLVERFuncReplInfo::migrateBufferAndRedundant(
             std::vector<int>{3, 5, 6},
             std::vector<std::string>{"std::complex<float>", "int",
                                      "std::complex<float>"},
             std::vector<int>{8}, "oneapi::mkl::lapack::sytrf")},
        {"cusolverDnZsytrf",
         MapNames::SOLVERFuncReplInfo::migrateBufferAndRedundant(
             std::vector<int>{3, 5, 6},
             std::vector<std::string>{"std::complex<double>", "int",
                                      "std::complex<double>"},
             std::vector<int>{8}, "oneapi::mkl::lapack::sytrf")},
        {"cusolverDnSgebrd",
         MapNames::SOLVERFuncReplInfo::migrateBufferAndRedundant(
             std::vector<int>{3, 5, 6, 7, 8, 9},
             std::vector<std::string>{"float", "float", "float", "float",
                                      "float", "float"},
             std::vector<int>{11}, "oneapi::mkl::lapack::gebrd")},
        {"cusolverDnDgebrd",
         MapNames::SOLVERFuncReplInfo::migrateBufferAndRedundant(
             std::vector<int>{3, 5, 6, 7, 8, 9},
             std::vector<std::string>{"double", "double", "double", "double",
                                      "double", "double"},
             std::vector<int>{11}, "oneapi::mkl::lapack::gebrd")},
        {"cusolverDnCgebrd",
         MapNames::SOLVERFuncReplInfo::migrateBufferAndRedundant(
             std::vector<int>{3, 5, 6, 7, 8, 9},
             std::vector<std::string>{
                 "std::complex<float>", "float", "float", "std::complex<float>",
                 "std::complex<float>", "std::complex<float>"},
             std::vector<int>{11}, "oneapi::mkl::lapack::gebrd")},
        {"cusolverDnZgebrd",
         MapNames::SOLVERFuncReplInfo::migrateBufferAndRedundant(
             std::vector<int>{3, 5, 6, 7, 8, 9},
             std::vector<std::string>{"std::complex<double>", "double",
                                      "double", "std::complex<double>",
                                      "std::complex<double>",
                                      "std::complex<double>"},
             std::vector<int>{11}, "oneapi::mkl::lapack::gebrd")},
        {"cusolverDnSorgbr",
         MapNames::SOLVERFuncReplInfo::migrateBufferRedundantAndCast(
             std::vector<int>{5, 7, 8},
             std::vector<std::string>{"float", "float", "float"},
             std::vector<int>{10}, std::vector<int>{1},
             std::vector<std::string>{"oneapi::mkl::generate"}, "oneapi::mkl::lapack::orgbr")},
        {"cusolverDnDorgbr",
         MapNames::SOLVERFuncReplInfo::migrateBufferRedundantAndCast(
             std::vector<int>{5, 7, 8},
             std::vector<std::string>{"double", "double", "double"},
             std::vector<int>{10}, std::vector<int>{1},
             std::vector<std::string>{"oneapi::mkl::generate"}, "oneapi::mkl::lapack::orgbr")},
        {"cusolverDnCungbr",
         MapNames::SOLVERFuncReplInfo::migrateBufferRedundantAndCast(
             std::vector<int>{5, 7, 8},
             std::vector<std::string>{"std::complex<float>",
                                      "std::complex<float>",
                                      "std::complex<float>"},
             std::vector<int>{10}, std::vector<int>{1},
             std::vector<std::string>{"oneapi::mkl::generate"}, "oneapi::mkl::lapack::ungbr")},
        {"cusolverDnZungbr",
         MapNames::SOLVERFuncReplInfo::migrateBufferRedundantAndCast(
             std::vector<int>{5, 7, 8},
             std::vector<std::string>{"std::complex<double>",
                                      "std::complex<double>",
                                      "std::complex<double>"},
             std::vector<int>{10}, std::vector<int>{1},
             std::vector<std::string>{"oneapi::mkl::generate"}, "oneapi::mkl::lapack::ungbr")},
        {"cusolverDnSsytrd",
         MapNames::SOLVERFuncReplInfo::migrateBufferAndRedundant(
             std::vector<int>{3, 5, 6, 7, 8},
             std::vector<std::string>{"float", "float", "float", "float",
                                      "float"}, std::vector<int>{10},
             "oneapi::mkl::lapack::sytrd")},
        {"cusolverDnDsytrd",
         MapNames::SOLVERFuncReplInfo::migrateBufferAndRedundant(
             std::vector<int>{3, 5, 6, 7, 8},
             std::vector<std::string>{"double", "double", "double", "double",
                                      "double"}, std::vector<int>{10},
             "oneapi::mkl::lapack::sytrd")},
        {"cusolverDnChetrd",
         MapNames::SOLVERFuncReplInfo::migrateBufferAndRedundant(
             std::vector<int>{3, 5, 6, 7, 8},
             std::vector<std::string>{"std::complex<float>", "float", "float",
                                      "std::complex<float>",
                                      "std::complex<float>"}, std::vector<int>{10},
             "oneapi::mkl::lapack::hetrd")},
        {"cusolverDnZhetrd",
         MapNames::SOLVERFuncReplInfo::migrateBufferAndRedundant(
             std::vector<int>{3, 5, 6, 7, 8},
             std::vector<std::string>{"std::complex<double>", "double",
                                      "double", "std::complex<double>",
                                      "std::complex<double>"}, std::vector<int>{10},
             "oneapi::mkl::lapack::hetrd")},
        {"cusolverDnSormtr",
         MapNames::SOLVERFuncReplInfo::migrateBufferAndRedundant(
             std::vector<int>{6, 8, 9, 11},
             std::vector<std::string>{"float", "float", "float", "float"},
             std::vector<int>{13}, "oneapi::mkl::lapack::ormtr")},
        {"cusolverDnDormtr",
         MapNames::SOLVERFuncReplInfo::migrateBufferAndRedundant(
             std::vector<int>{6, 8, 9, 11},
             std::vector<std::string>{"double", "double", "double", "double"},
             std::vector<int>{13}, "oneapi::mkl::lapack::ormtr")},
        {"cusolverDnCunmtr",
         MapNames::SOLVERFuncReplInfo::migrateBufferAndRedundant(
             std::vector<int>{6, 8, 9, 11},
             std::vector<std::string>{
                 "std::complex<float>", "std::complex<float>",
                 "std::complex<float>", "std::complex<float>"},
             std::vector<int>{13}, "oneapi::mkl::lapack::unmtr")},
        {"cusolverDnZunmtr",
         MapNames::SOLVERFuncReplInfo::migrateBufferAndRedundant(
             std::vector<int>{6, 8, 9, 11},
             std::vector<std::string>{
                 "std::complex<double>", "std::complex<double>",
                 "std::complex<double>", "std::complex<double>"},
             std::vector<int>{13}, "oneapi::mkl::lapack::unmtr")},
        {"cusolverDnSorgtr",
         MapNames::SOLVERFuncReplInfo::migrateBufferAndRedundant(
             std::vector<int>{3, 5, 6},
             std::vector<std::string>{"float", "float", "float"},
             std::vector<int>{8}, "oneapi::mkl::lapack::orgtr")},
        {"cusolverDnDorgtr",
         MapNames::SOLVERFuncReplInfo::migrateBufferAndRedundant(
             std::vector<int>{3, 5, 6},
             std::vector<std::string>{"double", "double", "double"},
             std::vector<int>{8}, "oneapi::mkl::lapack::orgtr")},
        {"cusolverDnCungtr",
         MapNames::SOLVERFuncReplInfo::migrateBufferAndRedundant(
             std::vector<int>{3, 5, 6},
             std::vector<std::string>{"std::complex<float>",
                                      "std::complex<float>",
                                      "std::complex<float>"},
             std::vector<int>{8}, "oneapi::mkl::lapack::ungtr")},
        {"cusolverDnZungtr",
         MapNames::SOLVERFuncReplInfo::migrateBufferAndRedundant(
             std::vector<int>{3, 5, 6},
             std::vector<std::string>{"std::complex<double>",
                                      "std::complex<double>",
                                      "std::complex<double>"},
             std::vector<int>{8}, "oneapi::mkl::lapack::ungtr")},
        {"cusolverDnSgesvd",
         MapNames::SOLVERFuncReplInfo::migrateBufferRedundantAndCast(
             std::vector<int>{5, 7, 8, 10, 12},
             std::vector<std::string>{"float", "float", "float", "float",
                                      "float"},
             std::vector<int>{14, 15}, std::vector<int>{1, 2},
             std::vector<std::string>{"oneapi::mkl::job", "oneapi::mkl::job"},
             "oneapi::mkl::lapack::gesvd")},
        {"cusolverDnDgesvd",
         MapNames::SOLVERFuncReplInfo::migrateBufferRedundantAndCast(
             std::vector<int>{5, 7, 8, 10, 12},
             std::vector<std::string>{"double", "double", "double", "double",
                                      "double"},
             std::vector<int>{14, 15}, std::vector<int>{1, 2},
             std::vector<std::string>{"oneapi::mkl::job", "oneapi::mkl::job"},
             "oneapi::mkl::lapack::gesvd")},
        {"cusolverDnCgesvd",
         MapNames::SOLVERFuncReplInfo::migrateBufferRedundantAndCast(
             std::vector<int>{5, 7, 8, 10, 12},
             std::vector<std::string>{
                 "std::complex<float>", "float", "std::complex<float>",
                 "std::complex<float>", "std::complex<float>"}, std::vector<int>{14, 15},
             std::vector<int>{1, 2},
             std::vector<std::string>{"oneapi::mkl::job", "oneapi::mkl::job"},
             "oneapi::mkl::lapack::gesvd")},
        {"cusolverDnZgesvd",
         MapNames::SOLVERFuncReplInfo::migrateBufferRedundantAndCast(
             std::vector<int>{5, 7, 8, 10, 12},
             std::vector<std::string>{"std::complex<double>", "double",
                                      "std::complex<double>",
                                      "std::complex<double>",
                                      "std::complex<double>"},std::vector<int>{14, 15},
             std::vector<int>{1, 2},
             std::vector<std::string>{"oneapi::mkl::job", "oneapi::mkl::job"},
             "oneapi::mkl::lapack::gesvd")},
    };

// Random Engine Type mapping
const MapNames::MapTy MapNames::RandomEngineTypeMap{
    {"CURAND_RNG_PSEUDO_DEFAULT", "oneapi::mkl::rng::philox4x32x10"},
    {"CURAND_RNG_PSEUDO_XORWOW", "oneapi::mkl::rng::philox4x32x10"},
    {"CURAND_RNG_PSEUDO_MRG32K3A", "oneapi::mkl::rng::mrg32k3a"},
    {"CURAND_RNG_PSEUDO_MTGP32", "oneapi::mkl::rng::mt2203"},
    {"CURAND_RNG_PSEUDO_MT19937", "oneapi::mkl::rng::mt19937"},
    {"CURAND_RNG_PSEUDO_PHILOX4_32_10", "oneapi::mkl::rng::philox4x32x10"},
    {"CURAND_RNG_QUASI_DEFAULT", "oneapi::mkl::rng::sobol"},
    {"CURAND_RNG_QUASI_SOBOL32", "oneapi::mkl::rng::sobol"},
    {"CURAND_RNG_QUASI_SCRAMBLED_SOBOL32", "oneapi::mkl::rng::sobol"},
    {"CURAND_RNG_QUASI_SOBOL64", "oneapi::mkl::rng::sobol"},
    {"CURAND_RNG_QUASI_SCRAMBLED_SOBOL64", "oneapi::mkl::rng::sobol"},
};

// Device Random Generator Type mapping
const MapNames::MapTy MapNames::DeviceRandomGeneratorTypeMap{
    {"curandStateXORWOW_t", "oneapi::mkl::rng::device::philox4x32x10"},
    {"curandState_t", "oneapi::mkl::rng::device::philox4x32x10"},
    {"curandState", "oneapi::mkl::rng::device::philox4x32x10"},
    {"curandStatePhilox4_32_10_t", "oneapi::mkl::rng::device::philox4x32x10"},
    {"curandStateMRG32k3a_t", "oneapi::mkl::rng::device::mrg32k3a"},
};

const std::map<std::string, MapNames::RandomGenerateFuncReplInfo>
    MapNames::RandomGenerateFuncReplInfoMap{
        {"curandGenerate", {"uint32_t", "oneapi::mkl::rng::uniform_bits", "uint32_t"}},
        {"curandGenerateLongLong",
         {"uint64_t", "oneapi::mkl::rng::uniform_bits", "uint64_t"}},
        {"curandGenerateLogNormal", {"float", "oneapi::mkl::rng::lognormal", "float"}},
        {"curandGenerateLogNormalDouble",
         {"double", "oneapi::mkl::rng::lognormal", "double"}},
        {"curandGenerateNormal", {"float", "oneapi::mkl::rng::gaussian", "float"}},
        {"curandGenerateNormalDouble",
         {"double", "oneapi::mkl::rng::gaussian", "double"}},
        {"curandGeneratePoisson", {"int32_t", "oneapi::mkl::rng::poisson", "int32_t"}},
        {"curandGenerateUniform", {"float", "oneapi::mkl::rng::uniform", "float"}},
        {"curandGenerateUniformDouble",
         {"double", "oneapi::mkl::rng::uniform", "double"}},
    };

// Atomic function names mapping
const std::unordered_map<std::string, std::string> MapNames::AtomicFuncNamesMap{
        {"atomicAdd", "dpct::atomic_fetch_add"},
        {"atomicSub", "dpct::atomic_fetch_sub"},
        {"atomicAnd", "dpct::atomic_fetch_and"},
        {"atomicOr", "dpct::atomic_fetch_or"},
        {"atomicXor", "dpct::atomic_fetch_xor"},
        {"atomicMin", "dpct::atomic_fetch_min"},
        {"atomicMax", "dpct::atomic_fetch_max"},
        {"atomicExch", "dpct::atomic_exchange"},
        {"atomicCAS", "dpct::atomic_compare_exchange_strong"},
        {"atomicInc", "dpct::atomic_fetch_compare_inc"},
    };

const MapNames::MapTy MapNames::Dim3MemberNamesMap{
    {"x", "[2]"}, {"y", "[1]"}, {"z", "[0]"},
    // ...
};

const MapNames::MapTy MapNames::MacrosMap{
    {"__CUDA_ARCH__", "DPCT_COMPATIBILITY_TEMP"}, /**/
    {"__NVCC__", "DPCT_COMPATIBILITY_TEMP"},      /**/
    {"__CUDACC__", "CL_SYCL_LANGUAGE_VERSION"},
    {"__DRIVER_TYPES_H__", "__DPCT_HPP__"},
    {"__CUDA_RUNTIME_H__", "__DPCT_HPP__"},
    //...
};

// Files to not preprocess, i.e. ignore #include <file>
const MapNames::SetTy MapNames::ThrustFileExcludeSet{
    "thrust/detail/adjacent_difference.inl",
    "thrust/detail/binary_search.inl",
    "thrust/detail/complex/complex.inl",
    "thrust/detail/copy.h",
    "thrust/detail/copy_if.h",
    "thrust/detail/count.inl",
    "thrust/detail/equal.inl",
    "thrust/detail/malloc_and_free.h",
    "thrust/detail/pair.inl",
    "thrust/detail/pointer.inl",
    "thrust/detail/raw_pointer_cast.h",
    "thrust/detail/sequence.inl",
    "thrust/detail/sort.inl",
    "thrust/detail/temporary_buffer.h",
    "thrust/detail/vector_base.inl"};

// Texture names mapping.
const MapNames::MapTy TextureRule::TextureMemberNames{
    {"addressMode", "addr_mode"},
    {"filterMode", "filter_mode"},
    {"normalized", "coord_normalized"},
    {"normalizedCoords", "coord_normalized"},
    {"channelDesc", "channel"}};

// DeviceProp names mapping.
const MapNames::MapTy DevicePropVarRule::PropNamesMap{
    {"clockRate", "max_clock_frequency"},
    {"computeMode", "mode"},
    {"major", "major_version"},
    {"minor", "minor_version"},
    {"integrated", "integrated"},
    {"warpSize", "max_sub_group_size"},
    {"multiProcessorCount", "max_compute_units"},
    {"maxThreadsPerBlock", "max_work_group_size"},
    {"maxThreadsPerMultiProcessor", "max_work_items_per_compute_unit"},
    {"name", "name"},
    {"totalGlobalMem", "global_mem_size"},
    {"sharedMemPerBlock", "local_mem_size"},
    {"maxGridSize", "max_nd_range_size"},
    // ...
};

// DeviceProp names mapping.
const MapNames::MapTy MapNames::MemberNamesMap{
    {"x", "x()"}, {"y", "y()"}, {"z", "z()"}, {"w", "w()"},
    // ...
};

const MapNames::SetTy MapNames::HostAllocSet {
    "cudaHostAllocDefault",
    "cudaHostAllocMapped",
    "cudaHostAllocPortable",
    "cudaHostAllocWriteCombined",
};

const MapNames::MapTy MapNames::MathRewriterMap{
#define ENTRY_RENAMED(SOURCEAPINAME, TARGETAPINAME) \
  {SOURCEAPINAME, TARGETAPINAME},
#define ENTRY_RENAMED_SINGLE(SOURCEAPINAME, TARGETAPINAME) \
  {SOURCEAPINAME, TARGETAPINAME},
#define ENTRY_RENAMED_DOUBLE(SOURCEAPINAME, TARGETAPINAME) \
  {SOURCEAPINAME, TARGETAPINAME},
#define ENTRY_EMULATED(SOURCEAPINAME, TARGETAPINAME)
#define ENTRY_OPERATOR(SOURCEAPINAME, TARGETAPINAME)
#define ENTRY_TYPECAST(SOURCEAPINAME)
#define ENTRY_UNSUPPORTED(SOURCEAPINAME)
#include "APINamesMath.inc"
#undef ENTRY_RENAMED
#undef ENTRY_RENAMED_SINGLE
#undef ENTRY_RENAMED_DOUBLE
#undef ENTRY_EMULATED
#undef ENTRY_OPERATOR
#undef ENTRY_TYPECAST
#undef ENTRY_UNSUPPORTED
};

// Function Attributes names migration
const MapNames::MapTy KernelFunctionInfoRule::AttributesNamesMap{
    {"maxThreadsPerBlock", "max_work_group_size"},
};

std::map<std::string, bool> MigrationStatistics::MigrationTable{
#define ENTRY(INTERFACENAME, APINAME, VALUE, FLAG, TARGET, COMMENT)            \
  {#APINAME, VALUE},
#include "APINames.inc"
#include "APINames_cuBLAS.inc"
#include "APINames_cuFFT.inc"
#include "APINames_cuGRAPH.inc"
#include "APINames_cuSPARSE.inc"
#include "APINames_cuRAND.inc"
#include "APINames_cuSOLVER.inc"
#include "APINames_nvJPEG.inc"
#include "APINames_thrust.inc"
#undef ENTRY
};

bool MigrationStatistics::IsMigrated(const std::string &APIName) {
  auto Search = MigrationTable.find(APIName);
  if (Search != MigrationTable.end()) {
    return Search->second;
  } else {
#ifdef DPCT_DEBUG_BUILD
    llvm::errs() << "[NOTE] Find new API\"" << APIName
                 << "\" , please update migrated API database.\n";
    DebugInfo::ShowStatus(MigrationError);
    dpctExit(MigrationError);
#else
    return false;
#endif
  }
}

std::vector<std::string> MigrationStatistics::GetAllAPINames(void) {
  std::vector<std::string> AllAPINames;
  for (const auto &APIName : MigrationTable) {
    AllAPINames.push_back(APIName.first);
  }

  return AllAPINames;
}

MapNames::MapTy TextureRule::Pitched2DResourceTypeNames{
    {"devPtr", "data"},
    {"desc", "chn"},
    {"width", "x"},
    {"height", "y"},
    {"pitchInBytes", "pitch"}};
MapNames::MapTy TextureRule::LinearResourceTypeNames{
    {"devPtr", "data"}, {"sizeInBytes", "x"}, {"desc", "chn"}};

const MapNames::MapTy MemoryDataTypeRule::PitchMemberNames{
    {"pitch", "pitch"}, {"ptr", "data"}, {"xsize", "x"}, {"ysize", "y"}};
const MapNames::MapTy MemoryDataTypeRule::ExtentMemberNames{
    {"width", "[0]"}, {"height", "[1]"}, {"depth", "[2]"}};

const MapNames::MapTy MemoryDataTypeRule::Parms3DMemberNames{
    {"srcArray", "from_data"}, {"srcPtr", "from_data"}, {"srcPos", "from_pos"},
    {"dstArray", "to_data"},   {"dstPtr", "to_data"},   {"dstPos", "to_pos"},
    {"extent", "size"},        {"kind", "direction"}};

const std::map<std::string, std::string> WarpFunctionRewriter::WarpFunctionsMap{
#define ENTRY_WARP(SOURCEAPINAME, TARGETAPINAME) {SOURCEAPINAME, TARGETAPINAME},
#include "APINamesWarp.inc"
#undef ENTRY_WARP
};
