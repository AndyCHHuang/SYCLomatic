/****************************************************************************
*
* ENTRY(APINAME,  ProcessedOrNot, Priority, MigrationDesc)
*  APIName: name of CUDA API
*
*  ProcessedOrNot:  false|true
*    false: this API has not been processed.
*    true:  this API has been processed, need check MigrationDesc field to
            see if it has be migrated successfully.
*
*  Priority: migration priority, eg. P0 - P4
*    P0:  should support in Beta release.
*    P4:  should support in Gold.
*
*  MigrationDesc: Successful[: Comment] | Unsupported: Comment
*    Successful:   this API has been migrated.
*    Unsupported:  this API can not be migrated currently.
*                  Must add Comment to explain why this API is Unsupported.
*    Comment:      extra comment on the migration.
*
****************************************************************************/

// API Names refer to "v10.0.130"
// Device management functions of runtime API
ENTRY(cudaChooseDevice, false, P0, "comment")
ENTRY(cudaDeviceGetAttribute, true, P0, "Successful")
ENTRY(cudaDeviceGetByPCIBusId, false, P4, "comment")
ENTRY(cudaDeviceGetCacheConfig, true, P4, "Successful")
ENTRY(cudaDeviceGetLimit, false, P0, "comment")
ENTRY(cudaDeviceGetP2PAttribute, true, P0, "Successful: SYCLCT1004")
ENTRY(cudaDeviceGetPCIBusId, true, P0, "Successful: SYCLCT1004")
ENTRY(cudaDeviceGetSharedMemConfig, false, P4, "comment")
ENTRY(cudaDeviceGetStreamPriorityRange, true, P0, "Successful: SYCLCT1014")
ENTRY(cudaDeviceReset, true, P0, "Successful")
ENTRY(cudaDeviceSetCacheConfig, true, P0, "Successful")
ENTRY(cudaDeviceSetLimit, true, P0, "Successful: SYCLCT1004")
ENTRY(cudaDeviceSetSharedMemConfig, false, P0, "comment")
ENTRY(cudaDeviceSynchronize, true, P0, "Successful")
ENTRY(cudaGetDevice, true, P0, "Successful")
ENTRY(cudaGetDeviceCount, true, P0, "Successful")
ENTRY(cudaGetDeviceFlags, false, P4, "comment")
ENTRY(cudaGetDeviceProperties, true, P0, "Successful")
ENTRY(cudaIpcCloseMemHandle, false, P0, "comment")
ENTRY(cudaIpcGetEventHandle, false, P0, "comment")
ENTRY(cudaIpcGetMemHandle, false, P0, "comment")
ENTRY(cudaIpcOpenEventHandle, false, P0, "comment")
ENTRY(cudaIpcOpenMemHandle, false, P0, "comment")
ENTRY(cudaSetDevice, true, P0, "Successful")
ENTRY(cudaSetDeviceFlags, false, P0, "comment")
ENTRY(cudaSetValidDevices, false, P4, "comment")

// thread management functions of API
ENTRY(cudaThreadExit, true, P0, "comment")
ENTRY(cudaThreadGetCacheConfig, false, P4, "comment")
ENTRY(cudaThreadGetLimit, false, P4, "comment")
ENTRY(cudaThreadSetCacheConfig, false, P0, "comment")
ENTRY(cudaThreadSetLimit, true, P0, "Successful")
ENTRY(cudaThreadSynchronize, true, P0, "Successful")

// error handling functions of runtime API
ENTRY(cudaGetErrorName, true, P0, "Successful")
ENTRY(cudaGetErrorString, true, P0, "Successful")
ENTRY(cudaGetLastError, true, P0, "Successful")
ENTRY(cudaPeekAtLastError, true, P0, "Successful")

// stream management functions of API
ENTRY(cudaStreamAddCallback, true, P0, "Successful: SYCLCT1015")
ENTRY(cudaStreamAttachMemAsync, true, P0, "Successful")
ENTRY(cudaStreamBeginCapture, true, P4, "Successful")
ENTRY(cudaStreamCreate, true, P0, "Successful")
ENTRY(cudaStreamCreateWithFlags, true, P0, "Successful: SYCLCT1014")
ENTRY(cudaStreamCreateWithPriority, true, P0, "Successful: SYCLCT1014")
ENTRY(cudaStreamDestroy, true, P0, "Successful")
ENTRY(cudaStreamEndCapture, true, P4, "Successful")
ENTRY(cudaStreamGetFlags, true, P4, "Successful: SYCLCT1014")
ENTRY(cudaStreamGetPriority, true, P4, "Successful: SYCLCT1014")
ENTRY(cudaStreamIsCapturing, true, P4, "Successful")
ENTRY(cudaStreamQuery, true, P0, "Successful")
ENTRY(cudaStreamSynchronize, true, P0, "Successful")
ENTRY(cudaStreamWaitEvent, true, P0, "Successful")

// event management functions of runtime API
ENTRY(cudaEventCreate, true, P0, "Successful")
ENTRY(cudaEventCreateWithFlags, true, P0, "Successful")
ENTRY(cudaEventDestroy, true, P0, "Successful")
ENTRY(cudaEventElapsedTime, true, P0, "Successful")
ENTRY(cudaEventQuery, false, P0, "comment")
ENTRY(cudaEventRecord, true, P0, "Successful: SYCLCT1012")
ENTRY(cudaEventSynchronize, true, P0, "Successful")

// external resource interoperability functions of runtime API
ENTRY(cudaDestroyExternalMemory, false, P4, "comment")
ENTRY(cudaDestroyExternalSemaphore, false, P4, "comment")
ENTRY(cudaExternalMemoryGetMappedBuffer, false, P4, "comment")
ENTRY(cudaExternalMemoryGetMappedMipmappedArray, false, P4, "comment")
ENTRY(cudaImportExternalMemory, false, P4, "comment")
ENTRY(cudaImportExternalSemaphore, false, P4, "comment")
ENTRY(cudaSignalExternalSemaphoresAsync, false, P4, "comment")
ENTRY(cudaWaitExternalSemaphoresAsync, false, P4, "comment")

// execution control functions of runtime API
ENTRY(cudaFuncGetAttributes, true, P0, "comment")
ENTRY(cudaFuncSetAttribute, false, P0, "comment")
ENTRY(cudaFuncSetCacheConfig, true, P0, "Successful: SYCLCT1004, no alternatives in DPC++ for cache config")
ENTRY(cudaFuncSetSharedMemConfig, false, P0, "comment")
ENTRY(cudaLaunchCooperativeKernel, false, P4, "comment")
ENTRY(cudaLaunchCooperativeKernelMultiDevice, false, P4, "comment")
ENTRY(cudaLaunchHostFunc, false, P4, "comment")
ENTRY(cudaLaunchKernel, false, P0, "comment")
ENTRY(cudaSetDoubleForDevice, false, P0, "comment")
ENTRY(cudaSetDoubleForHost, false, P0, "comment")

// occupancy calculation functions of runtime API
ENTRY(cudaOccupancyMaxActiveBlocksPerMultiprocessor, false, P0, "comment")
ENTRY(cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags, false, P0, "comment")

// deprecated execution control functions of runtime API
ENTRY(cudaConfigureCall, false, P0, "comment")
ENTRY(cudaLaunch, false, P0, "comment")
ENTRY(cudaSetupArgument, false, P0, "comment")

// memory management functions of runtime API
ENTRY(cudaArrayGetInfo, false, P0, "comment")
ENTRY(cudaFree, true, P0, "Successful")
ENTRY(cudaFreeArray, false, P0, "comment")
ENTRY(cudaFreeHost, false, P0, "comment")
ENTRY(cudaFreeMipmappedArray, false, P0, "comment")
ENTRY(cudaGetMipmappedArrayLevel, false, P0, "comment")
ENTRY(cudaGetSymbolAddress, true, P0, "comment")
ENTRY(cudaGetSymbolSize, false, P0, "comment")
ENTRY(cudaHostAlloc, false, P0, "comment")
ENTRY(cudaHostGetDevicePointer, false, P0, "comment")
ENTRY(cudaHostGetFlags, false, P4, "comment")
ENTRY(cudaHostRegister, false, P0, "comment")
ENTRY(cudaHostUnregister, false, P0, "comment")
ENTRY(cudaMalloc, true, P0, "Successful")
ENTRY(cudaMalloc3D, false, P0, "comment")
ENTRY(cudaMalloc3DArray, false, P0, "comment")
ENTRY(cudaMallocArray, false, P0, "comment")
ENTRY(cudaMallocHost, false, P0, "comment")
ENTRY(cudaMallocManaged, false, P0, "comment")
ENTRY(cudaMallocMipmappedArray, false, P0, "comment")
ENTRY(cudaMallocPitch, false, P0, "comment")
ENTRY(cudaMemAdvise, false, P0, "comment")
ENTRY(cudaMemGetInfo, false, P0, "comment")
ENTRY(cudaMemPrefetchAsync, false, P0, "comment")
ENTRY(cudaMemRangeGetAttribute, false, P4, "comment")
ENTRY(cudaMemRangeGetAttributes, false, P4, "comment")
ENTRY(cudaMemcpy, true, P0, "Successful")
ENTRY(cudaMemcpy2D, false, P0, "comment")
ENTRY(cudaMemcpy2DArrayToArray, false, P0, "comment")
ENTRY(cudaMemcpy2DAsync, false, P0, "comment")
ENTRY(cudaMemcpy2DFromArray, false, P0, "comment")
ENTRY(cudaMemcpy2DFromArrayAsync, false, P0, "comment")
ENTRY(cudaMemcpy2DToArray, false, P0, "comment")
ENTRY(cudaMemcpy2DToArrayAsync, false, P0, "comment")
ENTRY(cudaMemcpy3D, false, P0, "comment")
ENTRY(cudaMemcpy3DAsync, false, P0, "comment")
ENTRY(cudaMemcpy3DPeer, false, P0, "comment")
ENTRY(cudaMemcpy3DPeerAsync, false, P0, "comment")
ENTRY(cudaMemcpyArrayToArray, false, P0, "comment")
ENTRY(cudaMemcpyAsync, true, P0, "Successful")
ENTRY(cudaMemcpyFromArray, false, P0, "comment")
ENTRY(cudaMemcpyFromArrayAsync, false, P0, "comment")
ENTRY(cudaMemcpyFromSymbol, true, P0, "Successful")
ENTRY(cudaMemcpyFromSymbolAsync, true, P0, "Successful")
ENTRY(cudaMemcpyPeer, false, P0, "comment")
ENTRY(cudaMemcpyPeerAsync, false, P0, "comment")
ENTRY(cudaMemcpyToArray, false, P0, "comment")
ENTRY(cudaMemcpyToArrayAsync, false, P0, "comment")
ENTRY(cudaMemcpyToSymbol, true, P0, "Successful")
ENTRY(cudaMemcpyToSymbolAsync, true, P0, "Successful")
ENTRY(cudaMemset, true, P0, "Successful")
ENTRY(cudaMemset2D, false, P0, "comment")
ENTRY(cudaMemset2DAsync, false, P0, "comment")
ENTRY(cudaMemset3D, false, P0, "comment")
ENTRY(cudaMemset3DAsync, false, P4, "comment")
ENTRY(cudaMemsetAsync, false, P0, "comment")
ENTRY(make_cudaExtent, false, P0, "comment")
ENTRY(make_cudaPitchedPtr, false, P0, "comment")
ENTRY(make_cudaPos, false, P0, "comment")

// unified addressing functions of runtime API
ENTRY(cudaPointerGetAttributes, false, P0, "comment")

// peer device memory access functions of runtime API
ENTRY(cudaDeviceCanAccessPeer, false, P0, "comment")
ENTRY(cudaDeviceDisablePeerAccess, false, P0, "comment")
ENTRY(cudaDeviceEnablePeerAccess, false, P0, "comment")

// OpenGL interoperability functions of runtime API
ENTRY(cudaGLGetDevices, false, P4, "comment")
ENTRY(cudaGraphicsGLRegisterBuffer, false, P0, "comment")
ENTRY(cudaGraphicsGLRegisterImage, false, P0, "comment")
ENTRY(cudaWGLGetDevice, false, P4, "comment")

// deprecated OpenGL interoperability functionality.
ENTRY(cudaGLMapBufferObject, false, P0, "comment")
ENTRY(cudaGLMapBufferObjectAsync, false, P4, "comment")
ENTRY(cudaGLRegisterBufferObject, false, P0, "comment")
ENTRY(cudaGLSetBufferObjectMapFlags, false, P4, "comment")
ENTRY(cudaGLSetGLDevice, false, P0, "comment")
ENTRY(cudaGLUnmapBufferObject, false, P0, "comment")
ENTRY(cudaGLUnmapBufferObjectAsync, false, P4, "comment")
ENTRY(cudaGLUnregisterBufferObject, false, P0, "comment")

// Direct3D 9 interoperability functions of runtime API
ENTRY(cudaD3D9ResourceGetSurfaceDimensions, false, P4, "comment")
ENTRY(cudaD3D9ResourceSetMapFlags, false, P4, "comment")
ENTRY(cudaD3D9UnmapResources, false, P4, "comment")
ENTRY(cudaD3D9UnregisterResource, false, P4, "comment")
ENTRY(cudaD3D10GetDevice, false, P4, "comment")

// deprecated Direct3D 9 interoperability functions.
ENTRY(cudaD3D10GetDevices, false, P4, "comment")
ENTRY(cudaGraphicsD3D10RegisterResource, false, P4, "comment")
ENTRY(cudaD3D10GetDirect3DDevice, false, P4, "comment")
ENTRY(cudaD3D10MapResources, false, P4, "comment")
ENTRY(cudaD3D10RegisterResource, false, P4, "comment")
ENTRY(cudaD3D10ResourceGetMappedArray, false, P4, "comment")
ENTRY(cudaD3D10ResourceGetMappedPitch, false, P4, "comment")
ENTRY(cudaD3D10ResourceGetMappedPointer, false, P4, "comment")
ENTRY(cudaD3D10ResourceGetMappedSize, false, P4, "comment")
ENTRY(cudaD3D10ResourceGetSurfaceDimensions, false, P4, "comment")
ENTRY(cudaD3D10ResourceSetMapFlags, false, P4, "comment")

// Direct3D 10 interoperability functions of runtime API
ENTRY(cudaD3D10SetDirect3DDevice, false, P4, "comment")
ENTRY(cudaD3D10UnmapResources, false, P4, "comment")
ENTRY(cudaD3D10UnregisterResource, false, P4, "comment")

// Direct3D 11 interoperability functions of runtime API
ENTRY(cudaD3D11GetDevice, false, P4, "comment")
ENTRY(cudaD3D11GetDevices, false, P4, "comment")
ENTRY(cudaGraphicsD3D11RegisterResource, false, P4, "comment")

// Direct3D 11 interoperability functions of runtime API
ENTRY(cudaD3D11GetDirect3DDevice, false, P4, "comment")
ENTRY(cudaD3D11SetDirect3DDevice, false, P4, "comment")

// VDPAU interoperability functions of runtime API
ENTRY(cudaGraphicsVDPAURegisterOutputSurface, false, P4, "comment")
ENTRY(cudaGraphicsVDPAURegisterVideoSurface, false, P4, "comment")
ENTRY(cudaVDPAUGetDevice, false, P4, "comment")
ENTRY(cudaVDPAUSetVDPAUDevice, false, P4, "comment")

// EGL interoperability functions of runtime API
ENTRY(cudaEGLStreamConsumerAcquireFrame, false, P4, "comment")
ENTRY(cudaEGLStreamConsumerConnect, false, P4, "comment")
ENTRY(cudaEGLStreamConsumerConnectWithFlags, false, P4, "comment")
ENTRY(cudaEGLStreamConsumerDisconnect, false, P4, "comment")
ENTRY(cudaEGLStreamConsumerReleaseFrame, false, P4, "comment")
ENTRY(cudaEGLStreamProducerConnect, false, P4, "comment")
ENTRY(cudaEGLStreamProducerDisconnect, false, P4, "comment")
ENTRY(cudaEGLStreamProducerPresentFrame, false, P4, "comment")
ENTRY(cudaEGLStreamProducerReturnFrame, false, P4, "comment")
ENTRY(cudaEventCreateFromEGLSync, false, P4, "comment")
ENTRY(cudaGraphicsEGLRegisterImage, false, P4, "comment")
ENTRY(cudaGraphicsResourceGetMappedEglFrame, false, P4, "comment")

// graphics interoperability functions of runtime API
ENTRY(cudaGraphicsMapResources, false, P0, "comment")
ENTRY(cudaGraphicsResourceGetMappedMipmappedArray, false, P4, "comment")
ENTRY(cudaGraphicsResourceGetMappedPointer, false, P0, "comment")
ENTRY(cudaGraphicsResourceSetMapFlags, false, P0, "comment")
ENTRY(cudaGraphicsSubResourceGetMappedArray, false, P0, "comment")
ENTRY(cudaGraphicsUnmapResources, false, P0, "comment")
ENTRY(cudaGraphicsUnregisterResource, false, P0, "comment")

// low level texture reference management functions of runtime API
ENTRY(cudaBindTexture, false, P0, "comment")
ENTRY(cudaBindTexture2D, false, P0, "comment")
ENTRY(cudaBindTextureToArray, false, P0, "comment")
ENTRY(cudaBindTextureToMipmappedArray, false, P4, "comment")
ENTRY(cudaCreateChannelDesc, false, P0, "comment")
ENTRY(cudaGetChannelDesc, false, P0, "comment")
ENTRY(cudaGetTextureAlignmentOffset, false, P0, "comment")
ENTRY(cudaGetTextureReference, false, P0, "comment")
ENTRY(cudaUnbindTexture, false, P0, "comment")

// low level surface reference management functions of runtime API
ENTRY(cudaBindSurfaceToArray, false, P0, "comment")
ENTRY(cudaGetSurfaceReference, false, P4, "comment")

// low level texture object management functions of runtime API
ENTRY(cudaCreateTextureObject, false, P0, "comment")
ENTRY(cudaDestroyTextureObject, false, P0, "comment")
ENTRY(cudaGetTextureObjectResourceDesc, false, P0, "comment")
ENTRY(cudaGetTextureObjectResourceViewDesc, false, P4, "comment")
ENTRY(cudaGetTextureObjectTextureDesc, false, P4, "comment")

// low level texture object management functions of runtime API
ENTRY(cudaCreateSurfaceObject, false, P0, "comment")
ENTRY(cudaDestroySurfaceObject, false, P0, "comment")
ENTRY(cudaGetSurfaceObjectResourceDesc, false, P4, "comment")

// Version Management
ENTRY(cudaDriverGetVersion, false, P0, "comment")
ENTRY(cudaRuntimeGetVersion, false, P0, "comment")

// the graph management functions of CUDA runtime API
ENTRY(cudaGraphAddChildGraphNode, false, P4, "comment")
ENTRY(cudaGraphAddDependencies, false, P4, "comment")
ENTRY(cudaGraphAddEmptyNode, false, P4, "comment")
ENTRY(cudaGraphAddHostNode, false, P4, "comment")
ENTRY(cudaGraphAddKernelNode, false, P4, "comment")
ENTRY(cudaGraphAddMemcpyNode, false, P4, "comment")
ENTRY(cudaGraphAddMemsetNode, false, P4, "comment")
ENTRY(cudaGraphChildGraphNodeGetGraph, false, P4, "comment")
ENTRY(cudaGraphClone, false, P4, "comment")
ENTRY(cudaGraphCreate, false, P4, "comment")
ENTRY(cudaGraphDestroy, false, P4, "comment")
ENTRY(cudaGraphDestroyNode, false, P4, "comment")
ENTRY(cudaGraphExecDestroy, false, P4, "comment")
ENTRY(cudaGraphGetEdges, false, P4, "comment")
ENTRY(cudaGraphGetNodes, false, P4, "comment")
ENTRY(cudaGraphGetRootNodes, false, P4, "comment")
ENTRY(cudaGraphHostNodeGetParams, false, P4, "comment")
ENTRY(cudaGraphHostNodeSetParams, false, P4, "comment")
ENTRY(cudaGraphInstantiate, false, P4, "comment")
ENTRY(cudaGraphKernelNodeGetParams, false, P4, "comment")
ENTRY(cudaGraphKernelNodeSetParams, false, P4, "comment")
ENTRY(cudaGraphLaunch, false, P4, "comment")
ENTRY(cudaGraphMemcpyNodeGetParams, false, P4, "comment")
ENTRY(cudaGraphMemcpyNodeSetParams, false, P4, "comment")
ENTRY(cudaGraphMemsetNodeGetParams, false, P4, "comment")
ENTRY(cudaGraphMemsetNodeSetParams, false, P4, "comment")
ENTRY(cudaGraphNodeFindInClone, false, P4, "comment")
ENTRY(cudaGraphNodeGetDependencies, false, P4, "comment")
ENTRY(cudaGraphNodeGetDependentNodes, false, P4, "comment")
ENTRY(cudaGraphNodeGetType, false, P4, "comment")
ENTRY(cudaGraphRemoveDependencies, false, P4, "comment")

// C++ high level API functions of runtime API
ENTRY(cudaOccupancyMaxPotentialBlockSize, true, P0, "Unsupported: No such API in DPC++")
ENTRY(cudaOccupancyMaxPotentialBlockSizeVariableSMem, false, P0, "comment")
ENTRY(cudaOccupancyMaxPotentialBlockSizeVariableSMemWithFlags, false, P4, "comment")
ENTRY(cudaOccupancyMaxPotentialBlockSizeWithFlags, false, P4, "comment")

// profiler control functions of runtime API
ENTRY(cudaProfilerInitialize, false, P4, "comment")
ENTRY(cudaProfilerStart, false, P0, "comment")
ENTRY(cudaProfilerStop, false, P0, "comment")

// Atomic API
ENTRY(atomicAdd, true, P0, "Successful")
ENTRY(atomicSub, true, P0, "Successful")
ENTRY(atomicExch, true, P0, "Successful")
ENTRY(atomicMin, true, P0, "Successful")
ENTRY(atomicMax, true, P0, "Successful")
ENTRY(atomicInc, false, P0, "no direct mapping yet")
ENTRY(atomicDec, false, P0, "no direct mapping yet")
ENTRY(atomicCAS, true, P0, "Successful")
ENTRY(atomicAnd, true, P0, "Successful")
ENTRY(atomicOr, true, P0, "Successful")
ENTRY(atomicXor, true, P0, "Successful")

// Half Arithmetic Functions
ENTRY(__h2div, true, P4, "Successful")
ENTRY(__hadd_sat, true, P4, "Unsupported: No saturation functions in DPC++")
ENTRY(__hdiv, true, P4, "Successful")
ENTRY(__hfma, true, P0, "Successful")
ENTRY(__hfma_sat, true, P4, "Unsupported: No saturation functions in DPC++")
ENTRY(__hmul, true, P4, "Successful")
ENTRY(__hmul_sat, true, P4, "Unsupported: No saturation functions in DPC++")
ENTRY(__hneg, true, P4, "Successful")
ENTRY(__hsub, true, P4, "Successful")
ENTRY(__hsub_sat, true, P4, "Unsupported: No saturation functions in DPC++")

// Half2 Arithmetic Functions
ENTRY(__hadd2_sat, true, P4, "Unsupported: No saturation functions in DPC++")
ENTRY(__hfma2, true, P0, "Successful")
ENTRY(__hfma2_sat, true, P4, "Unsupported: No saturation functions in DPC++")
ENTRY(__hmul2, true, P4, "Successful")
ENTRY(__hmul2_sat, true, P4, "Unsupported: No saturation functions in DPC++")
ENTRY(__hneg2, true, P4, "Successful")
ENTRY(__hsub2, true, P4, "Successful")
ENTRY(__hsub2_sat, true, P4, "Unsupported: No saturation functions in DPC++")

// Half Comparison Functions
ENTRY(__heq, true, P4, "Successful")
ENTRY(__hequ, true, P4, "Unsupported: No unordered comparison functions in DPC++")
ENTRY(__hge, true, P4, "Successful")
ENTRY(__hgeu, true, P4, "Unsupported: No unordered comparison functions in DPC++")
ENTRY(__hgt, true, P4, "Successful")
ENTRY(__hgtu, true, P4, "Unsupported: No unordered comparison functions in DPC++")
ENTRY(__hisinf, true, P4, "Successful")
ENTRY(__hisnan, true, P4, "Successful")
ENTRY(__hle, true, P4, "Successful")
ENTRY(__hleu, true, P4, "Unsupported: No unordered comparison functions in DPC++")
ENTRY(__hlt, true, P4, "Successful")
ENTRY(__hltu, true, P4, "Unsupported: No unordered comparison functions in DPC++")
ENTRY(__hne, true, P4, "Successful")
ENTRY(__hneu, true, P4, "Unsupported: No unordered comparison functions in DPC++")

// Half2 Comparison Functions
ENTRY(__hbeq2, true, P4, "Unsupported: Return types not compatible")
ENTRY(__hbequ2, true, P4, "Unsupported: No unordered comparison functions in DPC++")
ENTRY(__hbge2, true, P4, "Unsupported: Return types not compatible")
ENTRY(__hbgeu2, true, P4, "Unsupported: No unordered comparison functions in DPC++")
ENTRY(__hbgt2, true, P4, "Unsupported: Return types not compatible")
ENTRY(__hbgtu2, true, P4, "Unsupported: No unordered comparison functions in DPC++")
ENTRY(__hble2, true, P4, "Unsupported: Return types not compatible")
ENTRY(__hbleu2, true, P4, "Unsupported: No unordered comparison functions in DPC++")
ENTRY(__hblt2, true, P4, "Unsupported: Return types not compatible")
ENTRY(__hbltu2, true, P4, "Unsupported: No unordered comparison functions in DPC++")
ENTRY(__hbne2, true, P4, "Unsupported: Return types not compatible")
ENTRY(__hbneu2, true, P4, "Unsupported: No unordered comparison functions in DPC++")
ENTRY(__heq2, true, P4, "Unsupported: Return types not compatible")
ENTRY(__hequ2, true, P4, "Unsupported: No unordered comparison functions in DPC++")
ENTRY(__hge2, true, P4, "Unsupported: Return types not compatible")
ENTRY(__hgeu2, true, P4, "Unsupported: No unordered comparison functions in DPC++")
ENTRY(__hgt2, true, P4, "Unsupported: Return types not compatible")
ENTRY(__hgtu2, true, P4, "Unsupported: No unordered comparison functions in DPC++")
ENTRY(__hisnan2, true, P4, "Unsupported: Return types not compatible")
ENTRY(__hle2, true, P4, "Unsupported: Return types not compatible")
ENTRY(__hleu2, true, P4, "Unsupported: No unordered comparison functions in DPC++")
ENTRY(__hlt2, true, P4, "Unsupported: Return types not compatible")
ENTRY(__hltu2, true, P4, "Unsupported: No unordered comparison functions in DPC++")
ENTRY(__hne2, true, P4, "Unsupported: Return types not compatible")
ENTRY(__hneu2, true, P4, "Unsupported: No unordered comparison functions in DPC++")

//  Half Precision Conversion And Data Movement
ENTRY(__float22half2_rn, true, P4, "Successful")
ENTRY(__float2half, true, P0, "Successful")
ENTRY(__float2half2_rn, true, P0, "Successful")
ENTRY(__float2half_rd, true, P4, "Successful")
ENTRY(__float2half_rn, true, P4, "Successful")
ENTRY(__float2half_ru, true, P4, "Successful")
ENTRY(__float2half_rz, true, P4, "Successful")
ENTRY(__floats2half2_rn, true, P4, "Successful")
ENTRY(__half22float2, true, P4, "Successful")
ENTRY(__half2float, true, P0, "Successful")
ENTRY(__half2half2, true, P4, "Successful")
ENTRY(__half2int_rd, true, P4, "Successful")
ENTRY(__half2int_rn, true, P4, "Successful")
ENTRY(__half2int_ru, true, P4, "Successful")
ENTRY(__half2int_rz, true, P4, "Successful")
ENTRY(__half2ll_rd, true, P4, "Successful")
ENTRY(__half2ll_rn, true, P4, "Successful")
ENTRY(__half2ll_ru, true, P4, "Successful")
ENTRY(__half2ll_rz, true, P4, "Successful")
ENTRY(__half2short_rd, true, P4, "Successful")
ENTRY(__half2short_rn, true, P4, "Successful")
ENTRY(__half2short_ru, true, P4, "Successful")
ENTRY(__half2short_rz, true, P4, "Successful")
ENTRY(__half2uint_rd, true, P4, "Successful")
ENTRY(__half2uint_rn, true, P4, "Successful")
ENTRY(__half2uint_ru, true, P4, "Successful")
ENTRY(__half2uint_rz, true, P4, "Successful")
ENTRY(__half2ull_rd, true, P4, "Successful")
ENTRY(__half2ull_rn, true, P4, "Successful")
ENTRY(__half2ull_ru, true, P4, "Successful")
ENTRY(__half2ull_rz, true, P4, "Successful")
ENTRY(__half2ushort_rd, true, P4, "Successful")
ENTRY(__half2ushort_rn, true, P4, "Successful")
ENTRY(__half2ushort_ru, true, P4, "Successful")
ENTRY(__half2ushort_rz, true, P4, "Successful")
ENTRY(__half_as_short, true, P4, "Successful")
ENTRY(__half_as_ushort, true, P4, "Successful")
ENTRY(__halves2half2, true, P4, "Successful")
ENTRY(__high2float, true, P0, "Successful")
ENTRY(__high2half, true, P4, "Successful")
ENTRY(__high2half2, true, P4, "Successful")
ENTRY(__highs2half2, true, P4, "Successful")
ENTRY(__int2half_rd, true, P4, "Successful")
ENTRY(__int2half_rn, true, P4, "Successful")
ENTRY(__int2half_ru, true, P4, "Successful")
ENTRY(__int2half_rz, true, P4, "Successful")
ENTRY(__ll2half_rd, true, P4, "Successful")
ENTRY(__ll2half_rn, true, P4, "Successful")
ENTRY(__ll2half_ru, true, P4, "Successful")
ENTRY(__ll2half_rz, true, P4, "Successful")
ENTRY(__low2float, true, P0, "Successful")
ENTRY(__low2half, true, P4, "Successful")
ENTRY(__low2half2, true, P4, "Successful")
ENTRY(__lowhigh2highlow, true, P4, "Successful")
ENTRY(__lows2half2, true, P4, "Successful")
ENTRY(__short2half_rd, true, P4, "Successful")
ENTRY(__short2half_rn, true, P4, "Successful")
ENTRY(__short2half_ru, true, P4, "Successful")
ENTRY(__short2half_rz, true, P4, "Successful")
ENTRY(__short_as_half, true, P4, "Successful")
ENTRY(__uint2half_rd, true, P4, "Successful")
ENTRY(__uint2half_rn, true, P4, "Successful")
ENTRY(__uint2half_ru, true, P4, "Successful")
ENTRY(__uint2half_rz, true, P4, "Successful")
ENTRY(__ull2half_rd, true, P4, "Successful")
ENTRY(__ull2half_rn, true, P4, "Successful")
ENTRY(__ull2half_ru, true, P4, "Successful")
ENTRY(__ull2half_rz, true, P4, "Successful")
ENTRY(__ushort2half_rd, true, P4, "Successful")
ENTRY(__ushort2half_rn, true, P4, "Successful")
ENTRY(__ushort2half_ru, true, P4, "Successful")
ENTRY(__ushort2half_rz, true, P4, "Successful")
ENTRY(__ushort_as_half, true, P4, "Successful")

// Half Math Functions
ENTRY(hceil, true, P4, "Successful")
ENTRY(hcos, true, P0, "Successful")
ENTRY(hexp, true, P4, "Successful")
ENTRY(hexp10, true, P4, "Successful")
ENTRY(hexp2, true, P4, "Successful")
ENTRY(hfloor, true, P4, "Successful")
ENTRY(hlog, true, P0, "Successful")
ENTRY(hlog10, true, P4, "Successful")
ENTRY(hlog2, true, P4, "Successful")
ENTRY(hrcp, true, P4, "Unsupported: No reciprocal functions for half precision in DPC++")
ENTRY(hrint, true, P4, "Successful")
ENTRY(hrsqrt, true, P4, "Successful")
ENTRY(hsin, true, P0, "Successful")
ENTRY(hsqrt, true, P4, "Successful")
ENTRY(htrunc, true, P4, "Successful")

// Half2 Math Functions
ENTRY(h2ceil, true, P4, "Successful")
ENTRY(h2cos, true, P4, "Successful")
ENTRY(h2exp, true, P4, "Successful")
ENTRY(h2exp10, true, P4, "Successful")
ENTRY(h2exp2, true, P4, "Successful")
ENTRY(h2floor, true, P4, "Successful")
ENTRY(h2log, true, P4, "Successful")
ENTRY(h2log10, true, P4, "Successful")
ENTRY(h2log2, true, P4, "Successful")
ENTRY(h2rcp, true, P4, "Unsupported: No reciprocal functions for half precision in DPC++")
ENTRY(h2rint, true, P4, "Successful")
ENTRY(h2rsqrt, true, P4, "Successful")
ENTRY(h2sin, true, P4, "Successful")
ENTRY(h2sqrt, true, P4, "Successful")
ENTRY(h2trunc, true, P4, "Successful")

// Single Precision Mathematical Functions
ENTRY(log, true, P0, "Successful")
ENTRY(logf, true, P0, "Successful")
ENTRY(acosf, true, P0, "Successful")
ENTRY(acoshf, true, P0, "Successful")
ENTRY(asinf, true, P0, "Successful")
ENTRY(asinhf, true, P0, "Successful")
ENTRY(atan2f, true, P0, "Successful")
ENTRY(atanf, true, P0, "Successful")
ENTRY(atanhf, true, P0, "Successful")
ENTRY(cbrtf, true, P0, "Successful")
ENTRY(ceilf, true, P0, "Successful")
ENTRY(copysignf, true, P0, "Successful")
ENTRY(cosf, true, P0, "Successful")
ENTRY(coshf, true, P0, "Successful")
ENTRY(cospif, true, P0, "Successful")
ENTRY(cyl_bessel_i0f, true, P4, "Unsupported: [TODO]: explain why unsupported")
ENTRY(cyl_bessel_i1f, true, P4, "Unsupported: [TODO]: explain why unsupported")
ENTRY(erfcf, true, P0, "Successful")
ENTRY(erfcinvf, true, P4, "Unsupported: [TODO]: explain why unsupported")
ENTRY(erfcxf, true, P4, "Unsupported: [TODO]: explain why unsupported")
ENTRY(erff, true, P0, "Successful")
ENTRY(erfinvf, true, P4, "Unsupported: [TODO]: explain why unsupported")
ENTRY(exp10f, true, P0, "Successful")
ENTRY(exp2f, true, P0, "Successful")
ENTRY(expf, true, P0, "Successful")
ENTRY(expm1f, true, P0, "Successful")
ENTRY(fabsf, true, P0, "Successful")
ENTRY(fdimf, true, P0, "Successful")
ENTRY(fdividef, true, P0, "Successful")
ENTRY(floorf, true, P0, "Successful")
ENTRY(fmaf, true, P0, "Successful")
ENTRY(fmaxf, true, P0, "Successful")
ENTRY(fminf, true, P0, "Successful")
ENTRY(fmodf, true, P0, "Successful")
ENTRY(frexpf, true, P0, "Successful")
ENTRY(hypotf, true, P0, "Successful")
ENTRY(ilogbf, true, P0, "Successful")
ENTRY(isfinite, true, P0, "Successful")
ENTRY(isinf, true, P0, "Successful")
ENTRY(isnan, true, P0, "Successful")
ENTRY(j0f, true, P0, "Unsupported: [TODO]: explain why unsupported")
ENTRY(j1f, true, P0, "Unsupported: [TODO]: explain why unsupported")
ENTRY(jnf, true, P0, "Unsupported: [TODO]: explain why unsupported")
ENTRY(ldexpf, true, P0, "Successful")
ENTRY(lgammaf, true, P0, "Successful")
ENTRY(llrintf, true, P4, "Successful")
ENTRY(llroundf, true, P4, "Successful")
ENTRY(log10f, true, P0, "Successful")
ENTRY(log1pf, true, P0, "Successful")
ENTRY(log2f, true, P0, "Successful")
ENTRY(logbf, true, P0, "Successful")
ENTRY(lrintf, true, P0, "Successful")
ENTRY(lroundf, true, P4, "Successful")
ENTRY(modff, true, P0, "Successful")
ENTRY(nanf, true, P0, "Successful")
ENTRY(nearbyintf, true, P0, "Successful: SYCLCT1017")
ENTRY(nextafterf, true, P0, "Successful")
ENTRY(norm3df, true, P4, "Unsupported: [TODO]: explain why unsupported")
ENTRY(norm4df, true, P4, "Unsupported: [TODO]: explain why unsupported")
ENTRY(normcdff, true, P4, "Unsupported: [TODO]: explain why unsupported")
ENTRY(normcdfinvf, true, P4, "Unsupported: [TODO]: explain why unsupported")
ENTRY(normf, true, P0, "Unsupported: [TODO]: explain why unsupported")
ENTRY(powf, true, P0, "Successful")
ENTRY(rcbrtf, true, P0, "Unsupported: [TODO]: explain why unsupported")
ENTRY(remainderf, true, P0, "Successful")
ENTRY(remquof, true, P0, "Successful")
ENTRY(rhypotf, true, P4, "Successful: SYCLCT1017")
ENTRY(rintf, true, P0, "Successful")
ENTRY(rnorm3df, true, P4, "Unsupported: [TODO]: explain why unsupported")
ENTRY(rnorm4df, true, P4, "Unsupported: [TODO]: explain why unsupported")
ENTRY(rnormf, true, P4, "Unsupported: [TODO]: explain why unsupported")
ENTRY(roundf, true, P0, "Successful")
ENTRY(rsqrtf, true, P0, "Successful")
ENTRY(scalblnf, true, P4, "Unsupported: [TODO]: explain why unsupported")
ENTRY(scalbnf, true, P0, "Unsupported: [TODO]: explain why unsupported")
ENTRY(signbit, true, P0, "Successful")
ENTRY(sincosf, true, P0, "Successful")
ENTRY(sincospif, true, P4, "Successful: SYCLCT1017")
ENTRY(sinf, true, P0, "Successful")
ENTRY(sinhf, true, P0, "Successful")
ENTRY(sinpif, true, P0, "Successful")
ENTRY(sqrtf, true, P0, "Successful")
ENTRY(tanf, true, P0, "Successful")
ENTRY(tanhf, true, P0, "Successful")
ENTRY(tgammaf, true, P0, "Successful")
ENTRY(truncf, true, P0, "Successful")
ENTRY(y0f, true, P0, "Unsupported: [TODO]: explain why unsupported")
ENTRY(y1f, true, P0, "Unsupported: [TODO]: explain why unsupported")
ENTRY(ynf, true, P0, "Unsupported: [TODO]: explain why unsupported")

// Double Precision Mathematical Functions
ENTRY(acos, true, P0, "Successful")
ENTRY(acosh, true, P0, "Successful")
ENTRY(asin, true, P0, "Successful")
ENTRY(asinh, true, P0, "Successful")
ENTRY(atan, true, P0, "Successful")
ENTRY(atan2, true, P0, "Successful")
ENTRY(atanh, true, P0, "Successful")
ENTRY(cbrt, true, P0, "Successful")
ENTRY(ceil, true, P0, "Successful")
ENTRY(copysign, true, P0, "Successful")
ENTRY(cos, true, P0, "Successful")
ENTRY(cosh, true, P0, "Successful")
ENTRY(cospi, true, P0, "Successful")
ENTRY(cyl_bessel_i0, true, P4, "Unsupported: [TODO]: explain why unsupported")
ENTRY(cyl_bessel_i1, true, P4, "Unsupported: [TODO]: explain why unsupported")
ENTRY(erf, true, P0, "Successful")
ENTRY(erfc, true, P0, "Successful")
ENTRY(erfcinv, true, P0, "Unsupported: [TODO]: explain why unsupported")
ENTRY(erfcx, true, P0, "Unsupported: [TODO]: explain why unsupported")
ENTRY(erfinv, true, P0, "Unsupported: [TODO]: explain why unsupported")
ENTRY(exp, true, P0, "Successful")
ENTRY(exp10, true, P0, "Successful")
ENTRY(exp2, true, P0, "Successful")
ENTRY(expm1, true, P0, "Successful")
ENTRY(fabs, true, P0, "Successful")
ENTRY(fdim, true, P0, "Successful")
ENTRY(floor, true, P0, "Successful")
ENTRY(fma, true, P0, "Successful")
ENTRY(fmax, true, P0, "Successful")
ENTRY(fmin, true, P0, "Successful")
ENTRY(fmod, true, P0, "Successful")
ENTRY(frexp, true, P0, "Successful")
ENTRY(hypot, true, P0, "Successful")
ENTRY(ilogb, true, P0, "Successful")
ENTRY(j0, true, P0, "Unsupported: [TODO]: explain why unsupported")
ENTRY(j1, true, P0, "Unsupported: [TODO]: explain why unsupported")
ENTRY(jn, true, P0, "Unsupported: [TODO]: explain why unsupported")
ENTRY(ldexp, true, P0, "Successful")
ENTRY(lgamma, true, P0, "Successful")
ENTRY(llrint, true, P0, "Successful")
ENTRY(llround, true, P0, "Successful")
ENTRY(log10, true, P0, "Successful")
ENTRY(log1p, true, P0, "Successful")
ENTRY(log2, true, P0, "Successful")
ENTRY(logb, true, P0, "Successful")
ENTRY(lrint, true, P0, "Successful")
ENTRY(lround, true, P0, "Successful")
ENTRY(modf, true, P0, "Successful")
ENTRY(nan, true, P0, "Successful")
ENTRY(nearbyint, true, P0, "Successful: SYCLCT1017")
ENTRY(nextafter, true, P0, "Successful")
ENTRY(norm, true, P0, "Unsupported: [TODO]: explain why unsupported")
ENTRY(norm3d, true, P0, "Unsupported: [TODO]: explain why unsupported")
ENTRY(norm4d, true, P4, "Unsupported: [TODO]: explain why unsupported")
ENTRY(normcdf, true, P4, "Unsupported: [TODO]: explain why unsupported")
ENTRY(normcdfinv, true, P4, "Unsupported: [TODO]: explain why unsupported")
ENTRY(pow, true, P0, "Successful")
ENTRY(rcbrt, true, P0, "Unsupported: [TODO]: explain why unsupported")
ENTRY(remainder, true, P0, "Successful")
ENTRY(remquo, true, P0, "Successful")
ENTRY(rhypot, true, P4, "Successful: SYCLCT1017")
ENTRY(rint, true, P0, "Successful")
ENTRY(rnorm, true, P0, "Unsupported: [TODO]: explain why unsupported")
ENTRY(rnorm3d, true, P4, "Unsupported: [TODO]: explain why unsupported")
ENTRY(rnorm4d, true, P4, "Unsupported: [TODO]: explain why unsupported")
ENTRY(round, true, P0, "Successful")
ENTRY(rsqrt, true, P0, "Successful")
ENTRY(scalbln, true, P0, "Unsupported: [TODO]: explain why unsupported")
ENTRY(scalbn, true, P0, "Unsupported: [TODO]: explain why unsupported")
ENTRY(sin, true, P0, "Successful")
ENTRY(sincos, true, P0, "Successful")
ENTRY(sincospi, true, P4, "Successful: SYCLCT1017")
ENTRY(sinh, true, P0, "Successful")
ENTRY(sinpi, true, P0, "Successful")
ENTRY(sqrt, true, P0, "Successful")
ENTRY(tan, true, P0, "Successful")
ENTRY(tanh, true, P0, "Successful")
ENTRY(tgamma, true, P0, "Successful")
ENTRY(trunc, true, P0, "Successful")
ENTRY(y0, true, P0, "Unsupported: [TODO]: explain why unsupported")
ENTRY(y1, true, P0, "Unsupported: [TODO]: explain why unsupported")
ENTRY(yn, true, P0, "Unsupported: [TODO]: explain why unsupported")

// Single Precision Intrinsics
ENTRY(__cosf, true, P0, "Successful")
ENTRY(__exp10f, true, P4, "Successful")
ENTRY(__expf, true, P0, "Successful")
ENTRY(__fadd_rd, true, P0, "Successful: SYCLCT1013")
ENTRY(__fadd_rn, true, P0, "Successful: SYCLCT1013")
ENTRY(__fadd_ru, true, P0, "Successful: SYCLCT1013")
ENTRY(__fadd_rz, true, P4, "Successful: SYCLCT1013")
ENTRY(__fdiv_rd, true, P0, "Successful: SYCLCT1013")
ENTRY(__fdiv_rn, true, P4, "Successful: SYCLCT1013")
ENTRY(__fdiv_ru, true, P0, "Successful: SYCLCT1013")
ENTRY(__fdiv_rz, true, P4, "Successful: SYCLCT1013")
ENTRY(__fdividef, true, P0, "Successful")
ENTRY(__fmaf_rd, true, P4, "Successful: SYCLCT1013")
ENTRY(__fmaf_rn, true, P0, "Successful: SYCLCT1013")
ENTRY(__fmaf_ru, true, P4, "Successful: SYCLCT1013")
ENTRY(__fmaf_rz, true, P4, "Successful: SYCLCT1013")
ENTRY(__fmul_rd, true, P0, "Successful: SYCLCT1013")
ENTRY(__fmul_rn, true, P0, "Successful: SYCLCT1013")
ENTRY(__fmul_ru, true, P0, "Successful: SYCLCT1013")
ENTRY(__fmul_rz, true, P4, "Successful: SYCLCT1013")
ENTRY(__frcp_rd, true, P4, "Successful: SYCLCT1013")
ENTRY(__frcp_rn, true, P4, "Successful: SYCLCT1013")
ENTRY(__frcp_ru, true, P4, "Successful: SYCLCT1013")
ENTRY(__frcp_rz, true, P4, "Successful: SYCLCT1013")
ENTRY(__frsqrt_rn, true, P4, "Successful: SYCLCT1013")
ENTRY(__fsqrt_rd, true, P0, "Successful: SYCLCT1013")
ENTRY(__fsqrt_rn, true, P4, "Successful: SYCLCT1013")
ENTRY(__fsqrt_ru, true, P0, "Successful: SYCLCT1013")
ENTRY(__fsqrt_rz, true, P4, "Successful: SYCLCT1013")
ENTRY(__fsub_rd, true, P4, "Successful: SYCLCT1013")
ENTRY(__fsub_rn, true, P4, "Successful: SYCLCT1013")
ENTRY(__fsub_ru, true, P4, "Successful: SYCLCT1013")
ENTRY(__fsub_rz, true, P4, "Successful: SYCLCT1013")
ENTRY(__log10f, true, P4, "Successful")
ENTRY(__log2f, true, P4, "Successful")
ENTRY(__logf, true, P0, "Successful")
ENTRY(__powf, true, P0, "Successful")
ENTRY(__saturatef, true, P0, "Unsupported: No saturation functions in DPC++")
ENTRY(__sincosf, true, P0, "Successful")
ENTRY(__sinf, true, P0, "Successful")
ENTRY(__tanf, true, P4, "Successful")

// Double Precision Intrinsics
ENTRY(__dadd_rd, true, P0, "Successful: SYCLCT1013")
ENTRY(__dadd_rn, true, P0, "Successful: SYCLCT1013")
ENTRY(__dadd_ru, true, P0, "Successful: SYCLCT1013")
ENTRY(__dadd_rz, true, P4, "Successful: SYCLCT1013")
ENTRY(__ddiv_rd, true, P0, "Successful: SYCLCT1013")
ENTRY(__ddiv_rn, true, P4, "Successful: SYCLCT1013")
ENTRY(__ddiv_ru, true, P0, "Successful: SYCLCT1013")
ENTRY(__ddiv_rz, true, P4, "Successful: SYCLCT1013")
ENTRY(__dmul_rd, true, P0, "Successful: SYCLCT1013")
ENTRY(__dmul_rn, true, P0, "Successful: SYCLCT1013")
ENTRY(__dmul_ru, true, P0, "Successful: SYCLCT1013")
ENTRY(__dmul_rz, true, P4, "Successful: SYCLCT1013")
ENTRY(__drcp_rd, true, P4, "Unsupported: No reciprocal functions for double precision in DPC++")
ENTRY(__drcp_rn, true, P4, "Unsupported: No reciprocal functions for double precision in DPC++")
ENTRY(__drcp_ru, true, P4, "Unsupported: No reciprocal functions for double precision in DPC++")
ENTRY(__drcp_rz, true, P4, "Unsupported: No reciprocal functions for double precision in DPC++")
ENTRY(__dsqrt_rd, true, P0, "Successful: SYCLCT1013")
ENTRY(__dsqrt_rn, true, P4, "Successful: SYCLCT1013")
ENTRY(__dsqrt_ru, true, P0, "Successful: SYCLCT1013")
ENTRY(__dsqrt_rz, true, P4, "Successful: SYCLCT1013")
ENTRY(__dsub_rd, true, P4, "Successful: SYCLCT1013")
ENTRY(__dsub_rn, true, P4, "Successful: SYCLCT1013")
ENTRY(__dsub_ru, true, P4, "Successful: SYCLCT1013")
ENTRY(__dsub_rz, true, P4, "Successful: SYCLCT1013")
ENTRY(__fma_rd, true, P4, "Successful: SYCLCT1013")
ENTRY(__fma_rn, true, P0, "Successful: SYCLCT1013")
ENTRY(__fma_ru, true, P4, "Successful: SYCLCT1013")
ENTRY(__fma_rz, true, P4, "Successful: SYCLCT1013")

// Integer Intrinsics
ENTRY(__brev, true, P0, "Unsupported: [TODO]: explain why unsupported")
ENTRY(__brevll, true, P4, "Unsupported: [TODO]: explain why unsupported")
ENTRY(__byte_perm, true, P4, "Unsupported: [TODO]: explain why unsupported")
ENTRY(__clz, true, P0, "Successful")
ENTRY(__clzll, true, P4, "Successful")
ENTRY(__ffs, true, P0, "Unsupported: [TODO]: explain why unsupported")
ENTRY(__ffsll, true, P4, "Unsupported: [TODO]: explain why unsupported")
ENTRY(__funnelshift_l, true, P4, "Unsupported: [TODO]: explain why unsupported")
ENTRY(__funnelshift_lc, true, P4, "Unsupported: [TODO]: explain why unsupported")
ENTRY(__funnelshift_r, true, P4, "Unsupported: [TODO]: explain why unsupported")
ENTRY(__funnelshift_rc, true, P4, "Unsupported: [TODO]: explain why unsupported")
ENTRY(__hadd, true, P0, "Successful")
ENTRY(__mul24, true, P0, "Successful")
ENTRY(__mul64hi, true, P4, "Unsupported: [TODO]: explain why unsupported")
ENTRY(__mulhi, true, P4, "Successful")
ENTRY(__popc, true, P0, "Successful")
ENTRY(__popcll, true, P4, "Successful")
ENTRY(__rhadd, true, P4, "Unsupported: [TODO]: explain why unsupported")
ENTRY(__sad, true, P4, "Unsupported: [TODO]: explain why unsupported")
ENTRY(__uhadd, true, P4, "Unsupported: [TODO]: explain why unsupported")
ENTRY(__umul24, true, P0, "Unsupported: [TODO]: explain why unsupported")
ENTRY(__umul64hi, true, P4, "Unsupported: [TODO]: explain why unsupported")
ENTRY(__umulhi, true, P4, "Unsupported: [TODO]: explain why unsupported")
ENTRY(__urhadd, true, P4, "Unsupported: [TODO]: explain why unsupported")
ENTRY(__usad, true, P0, "Unsupported: [TODO]: explain why unsupported")

// Type Casting Intrinsics
ENTRY(__double2float_rd, true, P4, "Successful")
ENTRY(__double2float_rn, true, P4, "Successful")
ENTRY(__double2float_ru, true, P4, "Successful")
ENTRY(__double2float_rz, true, P4, "Successful")
ENTRY(__double2hiint, true, P0, "Unsupported: [TODO]: explain why unsupported")
ENTRY(__double2int_rd, true, P4, "Successful")
ENTRY(__double2int_rn, true, P4, "Successful")
ENTRY(__double2int_ru, true, P4, "Successful")
ENTRY(__double2int_rz, true, P4, "Successful")
ENTRY(__double2ll_rd, true, P4, "Successful")
ENTRY(__double2ll_rn, true, P4, "Successful")
ENTRY(__double2ll_ru, true, P4, "Successful")
ENTRY(__double2ll_rz, true, P4, "Successful")
ENTRY(__double2loint, true, P0, "Unsupported: [TODO]: explain why unsupported")
ENTRY(__double2uint_rd, true, P4, "Successful")
ENTRY(__double2uint_rn, true, P4, "Successful")
ENTRY(__double2uint_ru, true, P4, "Successful")
ENTRY(__double2uint_rz, true, P4, "Successful")
ENTRY(__double2ull_rd, true, P4, "Successful")
ENTRY(__double2ull_rn, true, P4, "Successful")
ENTRY(__double2ull_ru, true, P4, "Successful")
ENTRY(__double2ull_rz, true, P4, "Successful")
ENTRY(__double_as_longlong, true, P0, "Successful")
ENTRY(__float2int_rd, true, P4, "Successful")
ENTRY(__float2int_rn, true, P4, "Successful")
ENTRY(__float2int_ru, true, P4, "Successful")
ENTRY(__float2int_rz, true, P4, "Successful")
ENTRY(__float2ll_rd, true, P4, "Successful")
ENTRY(__float2ll_rn, true, P4, "Successful")
ENTRY(__float2ll_ru, true, P4, "Successful")
ENTRY(__float2ll_rz, true, P4, "Successful")
ENTRY(__float2uint_rd, true, P4, "Successful")
ENTRY(__float2uint_rn, true, P4, "Successful")
ENTRY(__float2uint_ru, true, P4, "Successful")
ENTRY(__float2uint_rz, true, P4, "Successful")
ENTRY(__float2ull_rd, true, P4, "Successful")
ENTRY(__float2ull_rn, true, P4, "Successful")
ENTRY(__float2ull_ru, true, P4, "Successful")
ENTRY(__float2ull_rz, true, P4, "Successful")
ENTRY(__float_as_int, true, P4, "Successful")
ENTRY(__float_as_uint, true, P4, "Successful")
ENTRY(__hiloint2double, true, P0, "Unsupported: [TODO]: explain why unsupported")
ENTRY(__int2double_rn, true, P4, "Successful")
ENTRY(__int2float_rd, true, P4, "Successful")
ENTRY(__int2float_rn, true, P4, "Successful")
ENTRY(__int2float_ru, true, P4, "Successful")
ENTRY(__int2float_rz, true, P4, "Successful")
ENTRY(__int_as_float, true, P0, "Successful")
ENTRY(__ll2double_rd, true, P4, "Successful")
ENTRY(__ll2double_rn, true, P4, "Successful")
ENTRY(__ll2double_ru, true, P4, "Successful")
ENTRY(__ll2double_rz, true, P4, "Successful")
ENTRY(__ll2float_rd, true, P4, "Successful")
ENTRY(__ll2float_rn, true, P4, "Successful")
ENTRY(__ll2float_ru, true, P4, "Successful")
ENTRY(__ll2float_rz, true, P4, "Successful")
ENTRY(__longlong_as_double, true, P0, "Successful")
ENTRY(__uint2double_rn, true, P4, "Successful")
ENTRY(__uint2float_rd, true, P4, "Successful")
ENTRY(__uint2float_rn, true, P4, "Successful")
ENTRY(__uint2float_ru, true, P4, "Successful")
ENTRY(__uint2float_rz, true, P4, "Successful")
ENTRY(__uint_as_float, true, P4, "Successful")
ENTRY(__ull2double_rd, true, P4, "Successful")
ENTRY(__ull2double_rn, true, P4, "Successful")
ENTRY(__ull2double_ru, true, P4, "Successful")
ENTRY(__ull2double_rz, true, P4, "Successful")
ENTRY(__ull2float_rd, true, P4, "Successful")
ENTRY(__ull2float_rn, true, P4, "Successful")
ENTRY(__ull2float_ru, true, P4, "Successful")
ENTRY(__ull2float_rz, true, P4, "Successful")

// SIMD Intrinsics
ENTRY(__vabs2, false, P4, "comment")
ENTRY(__vabs4, false, P4, "comment")
ENTRY(__vabsdiffs2, false, P4, "comment")
ENTRY(__vabsdiffs4, false, P4, "comment")
ENTRY(__vabsdiffu2, false, P4, "comment")
ENTRY(__vabsdiffu4, false, P4, "comment")
ENTRY(__vabsss2, false, P4, "comment")
ENTRY(__vabsss4, false, P4, "comment")
ENTRY(__vadd2, false, P4, "comment")
ENTRY(__vadd4, false, P4, "comment")
ENTRY(__vaddss2, false, P4, "comment")
ENTRY(__vaddss4, false, P4, "comment")
ENTRY(__vaddus2, false, P4, "comment")
ENTRY(__vaddus4, false, P4, "comment")
ENTRY(__vavgs2, false, P4, "comment")
ENTRY(__vavgs4, false, P4, "comment")
ENTRY(__vavgu2, false, P4, "comment")
ENTRY(__vavgu4, false, P4, "comment")
ENTRY(__vcmpeq2, false, P4, "comment")
ENTRY(__vcmpeq4, false, P4, "comment")
ENTRY(__vcmpges2, false, P4, "comment")
ENTRY(__vcmpges4, false, P4, "comment")
ENTRY(__vcmpgeu2, false, P4, "comment")
ENTRY(__vcmpgeu4, false, P4, "comment")
ENTRY(__vcmpgts2, false, P4, "comment")
ENTRY(__vcmpgts4, false, P4, "comment")
ENTRY(__vcmpgtu2, false, P4, "comment")
ENTRY(__vcmpgtu4, false, P4, "comment")
ENTRY(__vcmples2, false, P4, "comment")
ENTRY(__vcmples4, false, P4, "comment")
ENTRY(__vcmpleu2, false, P4, "comment")
ENTRY(__vcmpleu4, false, P4, "comment")
ENTRY(__vcmplts2, false, P4, "comment")
ENTRY(__vcmplts4, false, P4, "comment")
ENTRY(__vcmpltu2, false, P4, "comment")
ENTRY(__vcmpltu4, false, P4, "comment")
ENTRY(__vcmpne2, false, P4, "comment")
ENTRY(__vcmpne4, false, P4, "comment")
ENTRY(__vhaddu2, false, P4, "comment")
ENTRY(__vhaddu4, false, P4, "comment")
ENTRY(__vmaxs2, false, P4, "comment")
ENTRY(__vmaxs4, false, P4, "comment")
ENTRY(__vmaxu2, false, P4, "comment")
ENTRY(__vmaxu4, false, P4, "comment")
ENTRY(__vmins2, false, P4, "comment")
ENTRY(__vmins4, false, P4, "comment")
ENTRY(__vminu2, false, P4, "comment")
ENTRY(__vminu4, false, P4, "comment")
ENTRY(__vneg2, false, P4, "comment")
ENTRY(__vneg4, false, P4, "comment")
ENTRY(__vnegss2, false, P4, "comment")
ENTRY(__vnegss4, false, P4, "comment")
ENTRY(__vsads2, false, P4, "comment")
ENTRY(__vsads4, false, P4, "comment")
ENTRY(__vsadu2, false, P4, "comment")
ENTRY(__vsadu4, false, P4, "comment")
ENTRY(__vseteq2, false, P4, "comment")
ENTRY(__vseteq4, false, P4, "comment")
ENTRY(__vsetges2, false, P4, "comment")
ENTRY(__vsetges4, false, P4, "comment")
ENTRY(__vsetgeu2, false, P4, "comment")
ENTRY(__vsetgeu4, false, P4, "comment")
ENTRY(__vsetgts2, false, P4, "comment")
ENTRY(__vsetgts4, false, P4, "comment")
ENTRY(__vsetgtu2, false, P4, "comment")
ENTRY(__vsetgtu4, false, P4, "comment")
ENTRY(__vsetles2, false, P4, "comment")
ENTRY(__vsetles4, false, P4, "comment")
ENTRY(__vsetleu2, false, P4, "comment")
ENTRY(__vsetleu4, false, P4, "comment")
ENTRY(__vsetlts2, false, P4, "comment")
ENTRY(__vsetlts4, false, P4, "comment")
ENTRY(__vsetltu2, false, P4, "comment")
ENTRY(__vsetltu4, false, P4, "comment")
ENTRY(__vsetne2, false, P4, "comment")
ENTRY(__vsetne4, false, P4, "comment")
ENTRY(__vsub2, false, P4, "comment")
ENTRY(__vsub4, false, P4, "comment")
ENTRY(__vsubss2, false, P4, "comment")
ENTRY(__vsubss4, false, P4, "comment")
ENTRY(__vsubus2, false, P4, "comment")
ENTRY(__vsubus4, false, P4, "comment")

ENTRY(max, true, P0, "Successful")
ENTRY(min, true, P0, "Successful")
ENTRY(abs, true, P0, "Successful")
ENTRY(acospi, true, P4, "Successful")
ENTRY(tanpi, true, P0, "Successful")

ENTRY(cudaD3D9GetDevice, false, P4, "comment")
ENTRY(cudaD3D9GetDevices, false, P4, "comment")
ENTRY(cudaD3D9GetDirect3DDevice, false, P4, "comment")
ENTRY(cudaD3D9SetDirect3DDevice, false, P4, "comment")
ENTRY(cudaGraphicsD3D9RegisterResource, false, P4, "comment")
ENTRY(cudaD3D9MapResources, false, P4, "comment")
ENTRY(cudaD3D9RegisterResource, false, P4, "comment")
ENTRY(cudaD3D9ResourceGetMappedArray, false, P4, "comment")
ENTRY(cudaD3D9ResourceGetMappedPitch, false, P4, "comment")
ENTRY(cudaD3D9ResourceGetMappedPointer, false, P4, "comment")
ENTRY(cudaD3D9ResourceGetMappedSize, false, P4, "comment")
ENTRY(cudaGetParameterBuffer, false, P4, "comment")
ENTRY(cudaGetParameterBufferV2, false, P4, "comment")
ENTRY(__cudaGetExportTableInternal, false, P4, "comment")
ENTRY(__cudaInitManagedRuntime, false, P4, "comment")
ENTRY(__cudaInitModule, false, P4, "comment")
ENTRY(__cudaRegisterDeviceFunction, false, P4, "comment")
ENTRY(__cudaRegisterFatBinary, false, P0, "comment")
ENTRY(__cudaRegisterFunction, false, P0, "comment")
ENTRY(__cudaRegisterManagedVar, false, P4, "comment")
ENTRY(__cudaRegisterPrelinkedFatBinary, false, P4, "comment")
ENTRY(__cudaRegisterShared, false, P4, "comment")
ENTRY(__cudaRegisterSharedVar, false, P4, "comment")
ENTRY(__cudaRegisterSurface, false, P4, "comment")
ENTRY(__cudaRegisterTexture, false, P4, "comment")
ENTRY(__cudaRegisterVar, false, P4, "comment")
ENTRY(__cudaUnregisterFatBinary, false, P0, "comment")
ENTRY(__hadd2, false, P0, "comment")
ENTRY(h2div, false, P4, "comment")
ENTRY(hdiv, false, P0, "comment")
ENTRY(make_char1, true, P4, "Successful")
ENTRY(make_char2, true, P0, "Successful")
ENTRY(make_char3, true, P4, "Successful")
ENTRY(make_char4, true, P0, "Successful")
ENTRY(make_double1, true, P4, "Successful")
ENTRY(make_double2, true, P0, "Successful")
ENTRY(make_double3, true, P0, "Successful")
ENTRY(make_double4, true, P0, "Successful")
ENTRY(make_float1, true, P4, "Successful")
ENTRY(make_float2, true, P0, "Successful")
ENTRY(make_float3, true, P0, "Successful")
ENTRY(make_float4, true, P0, "Successful")
ENTRY(make_int1, true, P4, "Successful")
ENTRY(make_int2, true, P0, "Successful")
ENTRY(make_int3, true, P0, "Successful")
ENTRY(make_int4, true, P0, "Successful")
ENTRY(make_long1, true, P4, "Successful")
ENTRY(make_long2, true, P4, "Successful")
ENTRY(make_long3, true, P4, "Successful")
ENTRY(make_long4, true, P0, "Successful")
ENTRY(make_longlong1, true, P4, "Successful")
ENTRY(make_longlong2, true, P4, "Successful")
ENTRY(make_longlong3, true, P4, "Successful")
ENTRY(make_longlong4, true, P0, "Successful")
ENTRY(make_short1, true, P4, "Successful")
ENTRY(make_short2, true, P0, "Successful")
ENTRY(make_short3, true, P4, "Successful")
ENTRY(make_short4, true, P0, "Successful")
ENTRY(make_uchar1, true, P0, "Successful")
ENTRY(make_uchar2, true, P0, "Successful")
ENTRY(make_uchar3, true, P4, "Successful")
ENTRY(make_uchar4, true, P0, "Successful")
ENTRY(make_uint1, true, P4, "Successful")
ENTRY(make_uint2, true, P0, "Successful")
ENTRY(make_uint3, true, P0, "Successful")
ENTRY(make_uint4, true, P0, "Successful")
ENTRY(make_ulong1, true, P4, "Successful")
ENTRY(make_ulong2, true, P0, "Successful")
ENTRY(make_ulong3, true, P4, "Successful")
ENTRY(make_ulong4, true, P4, "Successful")
ENTRY(make_ulonglong1, true, P4, "Successful")
ENTRY(make_ulonglong2, true, P0, "Successful")
ENTRY(make_ulonglong3, true, P4, "Successful")
ENTRY(make_ulonglong4, true, P0, "Successful")
ENTRY(make_ushort1, true, P4, "Successful")
ENTRY(make_ushort2, true, P0, "Successful")
ENTRY(make_ushort3, true, P4, "Successful")
ENTRY(make_ushort4, true, P0, "Successful")
ENTRY(__threadfence_block, false, P0, "comment")
ENTRY(__threadfence, false, P0, "comment")
ENTRY(__threadfence_system, false, P0, "comment")
ENTRY(__syncthreads, true, P0, "Successful")
ENTRY(__syncthreads_count, false, P0, "comment")
ENTRY(__syncthreads_and, false, P0, "comment")
ENTRY(__syncthreads_or, false, P0, "comment")
ENTRY(tex1Dfetch, false, P0, "comment")
ENTRY(tex1D, false, P0, "comment")
ENTRY(tex1DLod, false, P4, "comment")
ENTRY(tex1DGrad, false, P4, "comment")
ENTRY(tex2D, false, P0, "comment")
ENTRY(tex2DLod, false, P0, "comment")
ENTRY(tex2DGrad, false, P0, "comment")
ENTRY(tex3D, false, P0, "comment")
ENTRY(tex3DLod, false, P4, "comment")
ENTRY(tex3DGrad, false, P4, "comment")
ENTRY(tex1DLayered, false, P4, "comment")
ENTRY(tex1DLayeredLod, false, P4, "comment")
ENTRY(tex1DLayeredGrad, false, P4, "comment")
ENTRY(tex2DLayered, false, P0, "comment")
ENTRY(tex2DLayeredLod, false, P4, "comment")
ENTRY(tex2DLayeredGrad, false, P4, "comment")
ENTRY(texCubemap, false, P0, "comment")
ENTRY(texCubemapLod, false, P4, "comment")
ENTRY(texCubemapLayered, false, P4, "comment")
ENTRY(texCubemapLayeredLod, false, P4, "comment")
ENTRY(tex2Dgather, false, P0, "comment")
ENTRY(surf1Dread, false, P4, "comment")
ENTRY(surf1Dwrite, false, P0, "comment")
ENTRY(surf2Dread, false, P4, "comment")
ENTRY(surf2Dwrite, false, P0, "comment")
ENTRY(surf3Dread, false, P4, "comment")
ENTRY(surf3Dwrite, false, P0, "comment")
ENTRY(surf1DLayeredread, false, P4, "comment")
ENTRY(surf1DLayeredwrite, false, P4, "comment")
ENTRY(surf2DLayeredread, false, P4, "comment")
ENTRY(surf2DLayeredwrite, false, P0, "comment")
ENTRY(surfCubemapread, false, P4, "comment")
ENTRY(surfCubemapwrite, false, P4, "comment")
ENTRY(surfCubemapLayeredread, false, P4, "comment")
ENTRY(surfCubemapLayeredwrite, false, P4, "comment")
ENTRY(__ldg, false, P0, "comment")
ENTRY(clock, true, P0, "Successful: SYCLCT1008")
ENTRY(clock64, false, P0, "comment")
ENTRY(atomicAdd_system, false, P0, "comment")
ENTRY(atomicSub_system, false, P4, "comment")
ENTRY(atomicExch_system, false, P0, "comment")
ENTRY(atomicMin_system, false, P0, "comment")
ENTRY(atomicMax_system, false, P0, "comment")
ENTRY(atomicInc_system, false, P0, "comment")
ENTRY(atomicDec_system, false, P0, "comment")
ENTRY(atomicCAS_system, false, P0, "comment")
ENTRY(atomicAnd_system, false, P0, "comment")
ENTRY(atomicOr_system, false, P0, "comment")
ENTRY(atomicXor_system, false, P0, "comment")
ENTRY(__all, true, P0, "Successful")
ENTRY(__any, true, P0, "Successful")
ENTRY(__ballot, true, P0, "Unsupported: No such API in DPC++")
ENTRY(__shfl, true, P0, "Successful")
ENTRY(__shfl_up, true, P0, "Successful")
ENTRY(__shfl_down, true, P0, "Successful")
ENTRY(__shfl_xor, true, P0, "Successful")
ENTRY(__prof_trigger, false, P4, "comment")
ENTRY(asm, false, P0, "comment")
ENTRY(__syncwarp, false, P0, "comment")
ENTRY(__all_sync, true, P0, "Successful")
ENTRY(__any_sync, true, P0, "Successful")
ENTRY(__ballot_sync, true, P0, "Unsupported: No such API in DPC++")
ENTRY(__shfl_sync, true, P0, "Successful")
ENTRY(__shfl_up_sync, true, P0, "Successful")
ENTRY(__shfl_down_sync, true, P0, "Successful")
ENTRY(__shfl_xor_sync, true, P0, "Successful")
ENTRY(__activemask, true, P0, "Unsupported: No such API in DPC++")
ENTRY(__match_any_sync, false, P4, "comment")
ENTRY(__match_all_sync, false, P4, "comment")
ENTRY(load_matrix_sync, false, P4, "comment")
ENTRY(store_matrix_sync, false, P4, "comment")
ENTRY(fill_fragment, false, P4, "comment")
ENTRY(mma_sync, false, P4, "comment")
ENTRY(cuCtxCreate_v2, false, P4, "comment")
ENTRY(cuCtxDestroy, false, P4, "comment")
ENTRY(cuCtxGetApiVersion, false, P4, "comment")
ENTRY(cuCtxGetCacheConfig, false, P4, "comment")
ENTRY(cuCtxGetCurrent, false, P4, "comment")
ENTRY(cuCtxGetDevice, false, P4, "comment")
ENTRY(cuCtxGetFlags, false, P4, "comment")
ENTRY(cuCtxGetLimit, false, P4, "comment")
ENTRY(cuCtxGetSharedMemConfig, false, P4, "comment")
ENTRY(cuCtxGetStreamPriorityRange, false, P4, "comment")
ENTRY(cuCtxPopCurrent, false, P4, "comment")
ENTRY(cuCtxPushCurrent, false, P4, "comment")
ENTRY(cuCtxSetCacheConfig, false, P4, "comment")
ENTRY(cuCtxSetCurrent, false, P4, "comment")
ENTRY(cuCtxSetLimit, false, P4, "comment")
ENTRY(cuCtxSetSharedMemConfig, false, P4, "comment")
ENTRY(cuCtxSynchronize, false, P4, "comment")
ENTRY(cuCtxAttach, false, P4, "comment")
ENTRY(cuCtxDetach, false, P4, "comment")
ENTRY(cuD3D10GetDevice, false, P4, "comment")
ENTRY(cuD3D10GetDevices, false, P4, "comment")
ENTRY(cuGraphicsD3D10RegisterResource, false, P4, "comment")
ENTRY(cuD3D10CtxCreate, false, P4, "comment")
ENTRY(cuD3D10CtxCreateOnDevice, false, P4, "comment")
ENTRY(cuD3D10GetDirect3DDevice, false, P4, "comment")
ENTRY(cuD3D10MapResources, false, P4, "comment")
ENTRY(cuD3D10RegisterResource, false, P4, "comment")
ENTRY(cuD3D10ResourceGetMappedArray, false, P4, "comment")
ENTRY(cuD3D10ResourceGetMappedPitch, false, P4, "comment")
ENTRY(cuD3D10ResourceGetMappedPointer, false, P4, "comment")
ENTRY(cuD3D10ResourceGetMappedSize, false, P4, "comment")
ENTRY(cuD3D10ResourceGetSurfaceDimensions, false, P4, "comment")
ENTRY(cuD3D10ResourceSetMapFlags, false, P4, "comment")
ENTRY(cuD3D10UnmapResources, false, P4, "comment")
ENTRY(cuD3D10UnregisterResource, false, P4, "comment")
ENTRY(cuD3D11GetDevice, false, P4, "comment")
ENTRY(cuD3D11GetDevices, false, P4, "comment")
ENTRY(cuGraphicsD3D11RegisterResource, false, P4, "comment")
ENTRY(cuD3D11CtxCreate, false, P4, "comment")
ENTRY(cuD3D11CtxCreateOnDevice, false, P4, "comment")
ENTRY(cuD3D11GetDirect3DDevice, false, P4, "comment")
ENTRY(cuD3D9CtxCreate, false, P4, "comment")
ENTRY(cuD3D9CtxCreateOnDevice, false, P4, "comment")
ENTRY(cuD3D9GetDevice, false, P4, "comment")
ENTRY(cuD3D9GetDevices, false, P4, "comment")
ENTRY(cuD3D9GetDirect3DDevice, false, P4, "comment")
ENTRY(cuGraphicsD3D9RegisterResource, false, P4, "comment")
ENTRY(cuD3D9MapResources, false, P4, "comment")
ENTRY(cuD3D9RegisterResource, false, P4, "comment")
ENTRY(cuD3D9ResourceGetMappedArray, false, P4, "comment")
ENTRY(cuD3D9ResourceGetMappedPitch, false, P4, "comment")
ENTRY(cuD3D9ResourceGetMappedPointer, false, P4, "comment")
ENTRY(cuD3D9ResourceGetMappedSize, false, P4, "comment")
ENTRY(cuD3D9ResourceGetSurfaceDimensions, false, P4, "comment")
ENTRY(cuD3D9ResourceSetMapFlags, false, P4, "comment")
ENTRY(cuD3D9UnmapResources, false, P4, "comment")
ENTRY(cuD3D9UnregisterResource, false, P4, "comment")
ENTRY(cuDeviceGet, false, P4, "comment")
ENTRY(cuDeviceGetAttribute, false, P4, "comment")
ENTRY(cuDeviceGetCount, false, P4, "comment")
ENTRY(cuDeviceGetName, false, P4, "comment")
ENTRY(cuDeviceTotalMem, false, P4, "comment")
ENTRY(cuDeviceComputeCapability, false, P4, "comment")
ENTRY(cuDeviceGetProperties, false, P4, "comment")
ENTRY(cuEGLStreamConsumerAcquireFrame, false, P4, "comment")
ENTRY(cuEGLStreamConsumerConnect, false, P4, "comment")
ENTRY(cuEGLStreamConsumerConnectWithFlags, false, P4, "comment")
ENTRY(cuEGLStreamConsumerDisconnect, false, P4, "comment")
ENTRY(cuEGLStreamConsumerReleaseFrame, false, P4, "comment")
ENTRY(cuEGLStreamProducerConnect, false, P4, "comment")
ENTRY(cuEGLStreamProducerDisconnect, false, P4, "comment")
ENTRY(cuEGLStreamProducerPresentFrame, false, P4, "comment")
ENTRY(cuEGLStreamProducerReturnFrame, false, P4, "comment")
ENTRY(cuGraphicsEGLRegisterImage, false, P4, "comment")
ENTRY(cuGraphicsResourceGetMappedEglFrame, false, P4, "comment")
ENTRY(cuGetErrorName, false, P4, "comment")
ENTRY(cuGetErrorString, false, P4, "comment")
ENTRY(cuEventCreate, false, P4, "comment")
ENTRY(cuEventDestroy, false, P4, "comment")
ENTRY(cuEventElapsedTime, false, P4, "comment")
ENTRY(cuEventQuery, false, P4, "comment")
ENTRY(cuEventRecord, false, P4, "comment")
ENTRY(cuEventSynchronize, false, P4, "comment")
ENTRY(cuStreamBatchMemOp, false, P4, "comment")
ENTRY(cuStreamWaitValue32, false, P4, "comment")
ENTRY(cuStreamWriteValue32, false, P4, "comment")
ENTRY(cuFuncGetAttribute, false, P4, "comment")
ENTRY(cuFuncSetCacheConfig, false, P4, "comment")
ENTRY(cuFuncSetSharedMemConfig, false, P4, "comment")
ENTRY(cuLaunchKernel, false, P4, "comment")
ENTRY(cuFuncSetBlockShape, false, P4, "comment")
ENTRY(cuFuncSetSharedSize, false, P4, "comment")
ENTRY(cuLaunch, false, P4, "comment")
ENTRY(cuLaunchGrid, false, P4, "comment")
ENTRY(cuLaunchGridAsync, false, P4, "comment")
ENTRY(cuParamSetSize, false, P4, "comment")
ENTRY(cuParamSetTexRef, false, P4, "comment")
ENTRY(cuParamSetf, false, P4, "comment")
ENTRY(cuParamSeti, false, P4, "comment")
ENTRY(cuParamSetv, false, P4, "comment")
ENTRY(cuGLGetDevices, false, P4, "comment")
ENTRY(cuGraphicsGLRegisterBuffer, false, P4, "comment")
ENTRY(cuGraphicsGLRegisterImage, false, P4, "comment")
ENTRY(cuWGLGetDevice, false, P4, "comment")
ENTRY(cuGLCtxCreate, false, P4, "comment")
ENTRY(cuGLInit, false, P4, "comment")
ENTRY(cuGLMapBufferObject, false, P4, "comment")
ENTRY(cuGLMapBufferObjectAsync, false, P4, "comment")
ENTRY(cuGLRegisterBufferObject, false, P4, "comment")
ENTRY(cuGLSetBufferObjectMapFlags, false, P4, "comment")
ENTRY(cuGLUnmapBufferObject, false, P4, "comment")
ENTRY(cuGLUnmapBufferObjectAsync, false, P4, "comment")
ENTRY(cuGLUnregisterBufferObject, false, P4, "comment")
ENTRY(cuGraphicsMapResources, false, P4, "comment")
ENTRY(cuGraphicsResourceGetMappedMipmappedArray, false, P4, "comment")
ENTRY(cuGraphicsResourceGetMappedPointer, false, P4, "comment")
ENTRY(cuGraphicsResourceSetMapFlags, false, P4, "comment")
ENTRY(cuGraphicsSubResourceGetMappedArray, false, P4, "comment")
ENTRY(cuGraphicsUnmapResources, false, P4, "comment")
ENTRY(cuGraphicsUnregisterResource, false, P4, "comment")
ENTRY(cuInit, false, P4, "comment")
ENTRY(cuArray3DCreate, false, P4, "comment")
ENTRY(cuArray3DGetDescriptor, false, P4, "comment")
ENTRY(cuArrayCreate, false, P4, "comment")
ENTRY(cuArrayDestroy, false, P4, "comment")
ENTRY(cuArrayGetDescriptor, false, P4, "comment")
ENTRY(cuDeviceGetByPCIBusId, false, P4, "comment")
ENTRY(cuDeviceGetPCIBusId, false, P4, "comment")
ENTRY(cuIpcCloseMemHandle, false, P4, "comment")
ENTRY(cuIpcGetEventHandle, false, P4, "comment")
ENTRY(cuIpcGetMemHandle, false, P4, "comment")
ENTRY(cuIpcOpenEventHandle, false, P4, "comment")
ENTRY(cuIpcOpenMemHandle, false, P4, "comment")
ENTRY(cuMemAlloc, false, P4, "comment")
ENTRY(cuMemAllocHost, false, P4, "comment")
ENTRY(cuMemAllocManaged, false, P4, "comment")
ENTRY(cuMemAllocPitch, false, P4, "comment")
ENTRY(cuMemFree, false, P4, "comment")
ENTRY(cuMemFreeHost, false, P4, "comment")
ENTRY(cuMemGetAddressRange, false, P4, "comment")
ENTRY(cuMemGetInfo_v2, false, P4, "comment")
ENTRY(cuMemHostAlloc, false, P4, "comment")
ENTRY(cuMemHostGetDevicePointer, false, P4, "comment")
ENTRY(cuMemHostGetFlags, false, P4, "comment")
ENTRY(cuMemHostRegister, false, P4, "comment")
ENTRY(cuMemHostUnregister, false, P4, "comment")
ENTRY(cuMemcpy, false, P4, "comment")
ENTRY(cuMemcpy2D, false, P4, "comment")
ENTRY(cuMemcpy2DAsync, false, P4, "comment")
ENTRY(cuMemcpy2DUnaligned, false, P4, "comment")
ENTRY(cuMemcpy3D, false, P4, "comment")
ENTRY(cuMemcpy3DAsync, false, P4, "comment")
ENTRY(cuMemcpy3DPeer, false, P4, "comment")
ENTRY(cuMemcpy3DPeerAsync, false, P4, "comment")
ENTRY(cuMemcpyAsync, false, P4, "comment")
ENTRY(cuMemcpyAtoA, false, P4, "comment")
ENTRY(cuMemcpyAtoD, false, P4, "comment")
ENTRY(cuMemcpyAtoH, false, P4, "comment")
ENTRY(cuMemcpyAtoHAsync, false, P4, "comment")
ENTRY(cuMemcpyDtoA, false, P4, "comment")
ENTRY(cuMemcpyDtoD, false, P4, "comment")
ENTRY(cuMemcpyDtoDAsync, false, P4, "comment")
ENTRY(cuMemcpyDtoH, false, P4, "comment")
ENTRY(cuMemcpyDtoHAsync, false, P4, "comment")
ENTRY(cuMemcpyHtoA, false, P4, "comment")
ENTRY(cuMemcpyHtoAAsync, false, P4, "comment")
ENTRY(cuMemcpyHtoD, false, P4, "comment")
ENTRY(cuMemcpyHtoDAsync, false, P4, "comment")
ENTRY(cuMemcpyPeer, false, P4, "comment")
ENTRY(cuMemcpyPeerAsync, false, P4, "comment")
ENTRY(cuMemsetD16, false, P4, "comment")
ENTRY(cuMemsetD16Async, false, P4, "comment")
ENTRY(cuMemsetD2D16, false, P4, "comment")
ENTRY(cuMemsetD2D16Async, false, P4, "comment")
ENTRY(cuMemsetD2D32, false, P4, "comment")
ENTRY(cuMemsetD2D32Async, false, P4, "comment")
ENTRY(cuMemsetD2D8, false, P4, "comment")
ENTRY(cuMemsetD2D8Async, false, P4, "comment")
ENTRY(cuMemsetD32, false, P4, "comment")
ENTRY(cuMemsetD32Async, false, P4, "comment")
ENTRY(cuMemsetD8, false, P4, "comment")
ENTRY(cuMemsetD8Async, false, P4, "comment")
ENTRY(cuMipmappedArrayCreate, false, P4, "comment")
ENTRY(cuMipmappedArrayDestroy, false, P4, "comment")
ENTRY(cuMipmappedArrayGetLevel, false, P4, "comment")
ENTRY(cuLinkAddData, false, P4, "comment")
ENTRY(cuLinkAddFile, false, P4, "comment")
ENTRY(cuLinkComplete, false, P4, "comment")
ENTRY(cuLinkCreate, false, P4, "comment")
ENTRY(cuLinkDestroy, false, P4, "comment")
ENTRY(cuModuleGetFunction, false, P4, "comment")
ENTRY(cuModuleGetGlobal, false, P4, "comment")
ENTRY(cuModuleGetSurfRef, false, P4, "comment")
ENTRY(cuModuleGetTexRef, false, P4, "comment")
ENTRY(cuModuleLoad, false, P4, "comment")
ENTRY(cuModuleLoadData, false, P4, "comment")
ENTRY(cuModuleLoadDataEx, false, P4, "comment")
ENTRY(cuModuleLoadFatBinary, false, P4, "comment")
ENTRY(cuModuleUnload, false, P4, "comment")
ENTRY(cuOccupancyMaxActiveBlocksPerMultiprocessor, false, P4, "comment")
ENTRY(cuOccupancyMaxActiveBlocksPerMultiprocessorWithFlags, false, P4, "comment")
ENTRY(cuOccupancyMaxPotentialBlockSize, false, P4, "comment")
ENTRY(cuOccupancyMaxPotentialBlockSizeWithFlags, false, P4, "comment")
ENTRY(cuCtxDisablePeerAccess, false, P4, "comment")
ENTRY(cuCtxEnablePeerAccess, false, P4, "comment")
ENTRY(cuDeviceCanAccessPeer, false, P4, "comment")
ENTRY(cuDeviceGetP2PAttribute, false, P4, "comment")
ENTRY(cuDevicePrimaryCtxGetState, false, P4, "comment")
ENTRY(cuDevicePrimaryCtxRelease, false, P4, "comment")
ENTRY(cuDevicePrimaryCtxReset, false, P4, "comment")
ENTRY(cuDevicePrimaryCtxRetain, false, P4, "comment")
ENTRY(cuDevicePrimaryCtxSetFlags, false, P4, "comment")
ENTRY(cuProfilerInitialize, false, P4, "comment")
ENTRY(cuProfilerStart, false, P4, "comment")
ENTRY(cuProfilerStop, false, P4, "comment")
ENTRY(cuStreamAddCallback, false, P4, "comment")
ENTRY(cuStreamAttachMemAsync, false, P4, "comment")
ENTRY(cuStreamCreate, false, P4, "comment")
ENTRY(cuStreamCreateWithPriority, false, P4, "comment")
ENTRY(cuStreamDestroy, false, P4, "comment")
ENTRY(cuStreamGetFlags, false, P4, "comment")
ENTRY(cuStreamGetPriority, false, P4, "comment")
ENTRY(cuStreamQuery, false, P4, "comment")
ENTRY(cuStreamSynchronize, false, P4, "comment")
ENTRY(cuStreamWaitEvent, false, P4, "comment")
ENTRY(cuSurfObjectCreate, false, P4, "comment")
ENTRY(cuSurfObjectDestroy, false, P4, "comment")
ENTRY(cuSurfObjectGetResourceDesc, false, P4, "comment")
ENTRY(cuSurfRefGetArray, false, P4, "comment")
ENTRY(cuSurfRefSetArray, false, P4, "comment")
ENTRY(cuTexObjectCreate, false, P4, "comment")
ENTRY(cuTexObjectDestroy, false, P4, "comment")
ENTRY(cuTexObjectGetResourceDesc, false, P4, "comment")
ENTRY(cuTexObjectGetResourceViewDesc, false, P4, "comment")
ENTRY(cuTexObjectGetTextureDesc, false, P4, "comment")
ENTRY(cuTexRefGetAddress, false, P4, "comment")
ENTRY(cuTexRefGetAddressMode, false, P4, "comment")
ENTRY(cuTexRefGetArray, false, P4, "comment")
ENTRY(cuTexRefGetBorderColor, false, P4, "comment")
ENTRY(cuTexRefGetFilterMode, false, P4, "comment")
ENTRY(cuTexRefGetFlags, false, P4, "comment")
ENTRY(cuTexRefGetFormat, false, P4, "comment")
ENTRY(cuTexRefGetMaxAnisotropy, false, P4, "comment")
ENTRY(cuTexRefGetMipmapFilterMode, false, P4, "comment")
ENTRY(cuTexRefGetMipmapLevelBias, false, P4, "comment")
ENTRY(cuTexRefGetMipmapLevelClamp, false, P4, "comment")
ENTRY(cuTexRefGetMipmappedArray, false, P4, "comment")
ENTRY(cuTexRefSetAddress, false, P4, "comment")
ENTRY(cuTexRefSetAddress2D, false, P4, "comment")
ENTRY(cuTexRefSetAddressMode, false, P4, "comment")
ENTRY(cuTexRefSetArray, false, P4, "comment")
ENTRY(cuTexRefSetBorderColor, false, P4, "comment")
ENTRY(cuTexRefSetFilterMode, false, P4, "comment")
ENTRY(cuTexRefSetFlags, false, P4, "comment")
ENTRY(cuTexRefSetFormat, false, P4, "comment")
ENTRY(cuTexRefSetMaxAnisotropy, false, P4, "comment")
ENTRY(cuTexRefSetMipmapFilterMode, false, P4, "comment")
ENTRY(cuTexRefSetMipmapLevelBias, false, P4, "comment")
ENTRY(cuTexRefSetMipmapLevelClamp, false, P4, "comment")
ENTRY(cuTexRefSetMipmappedArray, false, P4, "comment")
ENTRY(cuTexRefCreate, false, P4, "comment")
ENTRY(cuTexRefDestroy, false, P4, "comment")
ENTRY(cuMemAdvise, false, P4, "comment")
ENTRY(cuMemPrefetchAsync, false, P4, "comment")
ENTRY(cuMemRangeGetAttribute, false, P4, "comment")
ENTRY(cuMemRangeGetAttributes, false, P4, "comment")
ENTRY(cuPointerGetAttribute, false, P4, "comment")
ENTRY(cuPointerGetAttributes, false, P4, "comment")
ENTRY(cuPointerSetAttribute, false, P4, "comment")
ENTRY(cuGraphicsVDPAURegisterOutputSurface, false, P4, "comment")
ENTRY(cuGraphicsVDPAURegisterVideoSurface, false, P4, "comment")
ENTRY(cuVDPAUCtxCreate, false, P4, "comment")
ENTRY(cuVDPAUGetDevice, false, P4, "comment")
ENTRY(cuDriverGetVersion, false, P4, "comment")
ENTRY(cuEventCreateFromEGLSync, false, P4, "comment")
ENTRY(cuStreamWaitValue64, false, P4, "comment")
ENTRY(cuStreamWriteValue64, false, P4, "comment")
ENTRY(cuFuncSetAttribute, false, P4, "comment")
ENTRY(cuLaunchCooperativeKernel, false, P4, "comment")
ENTRY(cuLaunchCooperativeKernelMultiDevice, false, P4, "comment")
ENTRY(this_thread_block, false, P4, "comment")
ENTRY(this_multi_grid, false, P4, "comment")
ENTRY(tiled_partition, false, P4, "comment")
ENTRY(thread_block_tile , false, P4, "comment")
ENTRY(coalesced_threads, false, P4, "comment")
ENTRY(coalesced_group, false, P4, "comment")
ENTRY(grid_group, false, P4, "comment")
