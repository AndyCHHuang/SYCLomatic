// Half Arithmetic Functions
ENTRY("__hfma", "cl::sycl::fma")

// Half2 Arithmetic Functions
ENTRY("__hfma2", "cl::sycl::fma")

// Half Comparison Functions
ENTRY("__hisinf", "cl::sycl::isinf")
ENTRY("__hisnan", "cl::sycl::isnan")

// Half Math Functions
ENTRY("hceil", "cl::sycl::ceil")
ENTRY("hcos", "cl::sycl::cos")
ENTRY("hexp", "cl::sycl::exp")
ENTRY("hexp10", "cl::sycl::exp10")
ENTRY("hexp2", "cl::sycl::exp2")
ENTRY("hfloor", "cl::sycl::floor")
ENTRY("hlog", "cl::sycl::log")
ENTRY("hlog10", "cl::sycl::log10")
ENTRY("hlog2", "cl::sycl::log2")
ENTRY("hrint", "cl::sycl::rint")
ENTRY("hrsqrt", "cl::sycl::rsqrt")
ENTRY("hsin", "cl::sycl::sin")
ENTRY("hsqrt", "cl::sycl::sqrt")
ENTRY("htrunc", "cl::sycl::trunc")

// Half2 Math Functions
ENTRY("h2ceil", "cl::sycl::ceil")
ENTRY("h2cos", "cl::sycl::cos")
ENTRY("h2exp", "cl::sycl::exp")
ENTRY("h2exp10", "cl::sycl::exp10")
ENTRY("h2exp2", "cl::sycl::exp2")
ENTRY("h2floor", "cl::sycl::floor")
ENTRY("h2log", "cl::sycl::log")
ENTRY("h2log10", "cl::sycl::log10")
ENTRY("h2log2", "cl::sycl::log2")
ENTRY("h2rint", "cl::sycl::rint")
ENTRY("h2rsqrt", "cl::sycl::rsqrt")
ENTRY("h2sin", "cl::sycl::sin")
ENTRY("h2sqrt", "cl::sycl::sqrt")
ENTRY("h2trunc", "cl::sycl::trunc")

// Single Precision Mathematical Functions
ENTRY("log", "cl::sycl::log")
ENTRY("logf", "cl::sycl::log")
ENTRY("acosf", "cl::sycl::acos")
ENTRY("acoshf", "cl::sycl::acosh")
ENTRY("asinf", "cl::sycl::asin")
ENTRY("asinhf", "cl::sycl::asinh")
ENTRY("atan2f", "cl::sycl::atan2")
ENTRY("atanf", "cl::sycl::atan")
ENTRY("atanhf", "cl::sycl::atanh")
ENTRY("cbrtf", "cl::sycl::cbrt")
ENTRY("ceilf", "cl::sycl::ceil")
ENTRY("copysignf", "cl::sycl::copysign")
ENTRY("cosf", "cl::sycl::cos")
ENTRY("coshf", "cl::sycl::cosh")
ENTRY("cospif", "cl::sycl::cospi")
ENTRY("erfcf", "cl::sycl::erfc")
ENTRY("erff", "cl::sycl::erf")
ENTRY("exp10f", "cl::sycl::exp10")
ENTRY("exp2f", "cl::sycl::exp2")
ENTRY("expf", "cl::sycl::exp")
ENTRY("expm1f", "cl::sycl::expm1")
ENTRY("fabsf", "cl::sycl::fabs")
ENTRY("fdimf", "cl::sycl::fdim")
ENTRY("fdividef", "cl::sycl::native::divide")
ENTRY("floorf", "cl::sycl::floor")
ENTRY("fmaf", "cl::sycl::fma")
ENTRY("fmaxf", "cl::sycl::fmax")
ENTRY("fminf", "cl::sycl::fmin")
ENTRY("fmodf", "cl::sycl::fmod")
//ENTRY("frexpf", "cl::sycl::frexp")
ENTRY("hypotf", "cl::sycl::hypot")
ENTRY("ilogbf", "cl::sycl::ilogb")
ENTRY("isfinite", "cl::sycl::isfinite")
ENTRY("isinf", "cl::sycl::isinf")
ENTRY("isnan", "cl::sycl::isnan")
ENTRY("ldexpf", "cl::sycl::ldexp")
ENTRY("lgammaf", "cl::sycl::lgamma")
ENTRY("llrintf", "cl::sycl::rint")
ENTRY("llroundf", "cl::sycl::round")
ENTRY("log10f", "cl::sycl::log10")
ENTRY("log1pf", "cl::sycl::log1p")
ENTRY("log2f", "cl::sycl::log2")
ENTRY("logbf", "cl::sycl::logb")
ENTRY("lrintf", "cl::sycl::rint")
ENTRY("lroundf", "cl::sycl::round")
//ENTRY("modff", "cl::sycl::modf")
//ENTRY("nanf", "cl::sycl::nan")
ENTRY("nextafterf", "cl::sycl::nextafter")
ENTRY("powf", "cl::sycl::pow")
ENTRY("remainderf", "cl::sycl::remainder")
//ENTRY("remquof", "cl::sycl::remquo")
ENTRY("rintf", "cl::sycl::rint")
ENTRY("roundf", "cl::sycl::round")
ENTRY("rsqrtf", "cl::sycl::rsqrt")
ENTRY("signbit", "cl::sycl::signbit")
ENTRY("sinf", "cl::sycl::sin")
ENTRY("sinhf", "cl::sycl::sinh")
ENTRY("sinpif", "cl::sycl::sinpi")
ENTRY("sqrtf", "cl::sycl::sqrt")
ENTRY("tanf", "cl::sycl::tan")
ENTRY("tanhf", "cl::sycl::tanh")
ENTRY("tgammaf", "cl::sycl::tgamma")
ENTRY("truncf", "cl::sycl::trunc")

// Double Precision Mathematical Functions
ENTRY("acos", "cl::sycl::acos")
ENTRY("acosh", "cl::sycl::acosh")
ENTRY("asin", "cl::sycl::asin")
ENTRY("asinh", "cl::sycl::asinh")
ENTRY("atan2", "cl::sycl::atan2")
ENTRY("atan", "cl::sycl::atan")
ENTRY("atanh", "cl::sycl::atanh")
ENTRY("cbrt", "cl::sycl::cbrt")
ENTRY("ceil", "cl::sycl::ceil")
ENTRY("copysign", "cl::sycl::copysign")
ENTRY("cos", "cl::sycl::cos")
ENTRY("cosh", "cl::sycl::cosh")
ENTRY("cospi", "cl::sycl::cospi")
ENTRY("erfc", "cl::sycl::erfc")
ENTRY("erf", "cl::sycl::erf")
ENTRY("exp10", "cl::sycl::exp10")
ENTRY("exp2", "cl::sycl::exp2")
ENTRY("exp", "cl::sycl::exp")
ENTRY("expm1", "cl::sycl::expm1")
ENTRY("fabs", "cl::sycl::fabs")
ENTRY("fdim", "cl::sycl::fdim")
ENTRY("floor", "cl::sycl::floor")
ENTRY("fma", "cl::sycl::fma")
ENTRY("fmax", "cl::sycl::fmax")
ENTRY("fmin", "cl::sycl::fmin")
ENTRY("fmod", "cl::sycl::fmod")
//ENTRY("frexp", "cl::sycl::frexp")
ENTRY("hypot", "cl::sycl::hypot")
ENTRY("ilogb", "cl::sycl::ilogb")
ENTRY("ldexp", "cl::sycl::ldexp")
ENTRY("lgamma", "cl::sycl::lgamma")
ENTRY("llrint", "cl::sycl::rint")
ENTRY("llround", "cl::sycl::round")
ENTRY("log10", "cl::sycl::log10")
ENTRY("log1p", "cl::sycl::log1p")
ENTRY("log2", "cl::sycl::log2")
ENTRY("logb", "cl::sycl::logb")
ENTRY("lrint", "cl::sycl::rint")
ENTRY("lround", "cl::sycl::round")
//ENTRY("modf", "cl::sycl::modf")
//ENTRY("nan", "cl::sycl::nan")
ENTRY("nextafter", "cl::sycl::nextafter")
ENTRY("pow", "cl::sycl::pow")
ENTRY("remainder", "cl::sycl::remainder")
//ENTRY("remquo", "cl::sycl::remquo")
ENTRY("rint", "cl::sycl::rint")
ENTRY("round", "cl::sycl::round")
ENTRY("rsqrt", "cl::sycl::rsqrt")
ENTRY("sin", "cl::sycl::sin")
ENTRY("sinh", "cl::sycl::sinh")
ENTRY("sinpi", "cl::sycl::sinpi")
ENTRY("sqrt", "cl::sycl::sqrt")
ENTRY("tan", "cl::sycl::tan")
ENTRY("tanh", "cl::sycl::tanh")
ENTRY("tgamma", "cl::sycl::tgamma")
ENTRY("trunc", "cl::sycl::trunc")

// Single precision intrinisics
ENTRY("__cosf", "cl::sycl::cos")
ENTRY("__exp10f", "cl::sycl::exp10")
ENTRY("__expf", "cl::sycl::exp")
ENTRY("__fdividef", "cl::sycl::native::divide")
ENTRY("__fmaf_rd", "cl::sycl::fma")
ENTRY("__fmaf_rn", "cl::sycl::fma")
ENTRY("__fmaf_ru", "cl::sycl::fma")
ENTRY("__fmaf_rz", "cl::sycl::fma")
ENTRY("__frcp_rd", "cl::sycl::native::recip")
ENTRY("__frcp_rn", "cl::sycl::native::recip")
ENTRY("__frcp_ru", "cl::sycl::native::recip")
ENTRY("__frcp_rz", "cl::sycl::native::recip")
ENTRY("__frsqrt_rn", "cl::sycl::rsqrt")
ENTRY("__fsqrt_rd", "cl::sycl::sqrt")
ENTRY("__fsqrt_rn", "cl::sycl::sqrt")
ENTRY("__fsqrt_ru", "cl::sycl::sqrt")
ENTRY("__fsqrt_rz", "cl::sycl::sqrt")
ENTRY("__log10f", "cl::sycl::log10")
ENTRY("__log2f", "cl::sycl::log2")
ENTRY("__logf", "cl::sycl::log")
ENTRY("__powf", "cl::sycl::pow")
//ENTRY("__sincosf", "cl::sycl::sincos")
ENTRY("__sinf", "cl::sycl::sin")
ENTRY("__tanf", "cl::sycl::tan")

// Double precision intrinisics
ENTRY("__dsqrt_rd", "cl::sycl::sqrt")
ENTRY("__dsqrt_rn", "cl::sycl::sqrt")
ENTRY("__dsqrt_ru", "cl::sycl::sqrt")
ENTRY("__dsqrt_rz", "cl::sycl::sqrt")
ENTRY("__fma_rd", "cl::sycl::fma")
ENTRY("__fma_rn", "cl::sycl::fma")
ENTRY("__fma_ru", "cl::sycl::fma")
ENTRY("__fma_rz", "cl::sycl::fma")

//  Half Precision Conversion And Data Movement
ENTRY("__half_as_short", "syclct::bit_cast<cl::sycl::half, short>")
ENTRY("__half_as_ushort", "syclct::bit_cast<cl::sycl::half, unsigned short>")
ENTRY("__short_as_half", "syclct::bit_cast<short, cl::sycl::half>")
ENTRY("__ushort_as_half", "syclct::bit_cast<unsigned short, cl::sycl::half>")

// Type Casting Intrinsics
ENTRY("__double_as_longlong", "syclct::bit_cast<double, long long>")
ENTRY("__float_as_int", "syclct::bit_cast<float, int>")
ENTRY("__float_as_uint", "syclct::bit_cast<float, unsigned int>")
ENTRY("__int_as_float", "syclct::bit_cast<int, float>")
ENTRY("__longlong_as_double", "syclct::bit_cast<long long, double>")
ENTRY("__uint_as_float", "syclct::bit_cast<unsigned int, float>")

// Device: int => cl::sycl::abs, (float, double) => cl::sycl::fabs
// Host:   int => abs, float => fabsf, double => fabs, long double => fabsl
ENTRY("abs", "cl::sycl::abs")

// Device: cl::sycl::max
// Host:   int => max, float => fmaxf, double => fmax, long double => fmaxl
ENTRY("max", "cl::sycl::max")

// Device: cl::sycl::min
// Host:   int => min, float => fminf, double => fmin, long double => fminl
ENTRY("min", "cl::sycl::min")

// Integer Intrinsics
ENTRY("__clz", "cl::sycl::clz")
ENTRY("__clzll", "cl::sycl::clz")
ENTRY("__hadd", "cl::sycl::hadd")
ENTRY("__mul24", "cl::sycl::mul24")
ENTRY("__mulhi", "cl::sycl::mul_hi")
ENTRY("__popc", "cl::sycl::popcount")
ENTRY("__popcll", "cl::sycl::popcount")

// Used to add header file "<cmath>" into the file that calls "fabs".
ENTRY("fabs", "fabs")
